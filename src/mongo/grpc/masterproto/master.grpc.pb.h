// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: cmongo/masterproto/master.proto
#ifndef GRPC_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED
#define GRPC_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED

#include "mongo/grpc/masterproto/master.pb.h"

#include <grpc++/impl/codegen/async_stream.h>
#include <grpc++/impl/codegen/async_unary_call.h>
#include <grpc++/impl/codegen/method_handler_impl.h>
#include <grpc++/impl/codegen/proto_utils.h>
#include <grpc++/impl/codegen/rpc_method.h>
#include <grpc++/impl/codegen/service_type.h>
#include <grpc++/impl/codegen/status.h>
#include <grpc++/impl/codegen/stub_options.h>
#include <grpc++/impl/codegen/sync_stream.h>

namespace grpc {
class CompletionQueue;
class Channel;
class RpcService;
class ServerCompletionQueue;
class ServerContext;
}  // namespace grpc

namespace masterproto {

class Master final {
 public:
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // 运维部署相关协议
    // 上架机器
    virtual ::grpc::Status AddResource(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::masterproto::AddResourceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddResourceRsp>> AsyncAddResource(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddResourceRsp>>(AsyncAddResourceRaw(context, request, cq));
    }
    // 冻结机器
    virtual ::grpc::Status BlockResource(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::masterproto::BlockResourceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BlockResourceRsp>> AsyncBlockResource(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BlockResourceRsp>>(AsyncBlockResourceRaw(context, request, cq));
    }
    // 解冻机器
    virtual ::grpc::Status UnblockResource(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::masterproto::UnblockResourceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UnblockResourceRsp>> AsyncUnblockResource(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UnblockResourceRsp>>(AsyncUnblockResourceRaw(context, request, cq));
    }
    // 下架机器
    virtual ::grpc::Status DelResource(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::masterproto::DelResourceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelResourceRsp>> AsyncDelResource(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelResourceRsp>>(AsyncDelResourceRaw(context, request, cq));
    }
    // 查询机器列表
    virtual ::grpc::Status QueryResource(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::masterproto::QueryResourceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryResourceRsp>> AsyncQueryResource(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryResourceRsp>>(AsyncQueryResourceRaw(context, request, cq));
    }
    // 迁移实例
    virtual ::grpc::Status MigrateContainer(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::masterproto::MigrateContainerRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateContainerRsp>> AsyncMigrateContainer(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateContainerRsp>>(AsyncMigrateContainerRaw(context, request, cq));
    }
    // 迁移机器
    virtual ::grpc::Status MigrateMachine(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::masterproto::MigrateMachineRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateMachineRsp>> AsyncMigrateMachine(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateMachineRsp>>(AsyncMigrateMachineRaw(context, request, cq));
    }
    // 查询机器
    virtual ::grpc::Status QueryMachine(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::masterproto::QueryMachineRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryMachineRsp>> AsyncQueryMachine(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryMachineRsp>>(AsyncQueryMachineRaw(context, request, cq));
    }
    // 增加实例
    virtual ::grpc::Status AddContainer(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::masterproto::AddContainerRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerRsp>> AsyncAddContainer(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerRsp>>(AsyncAddContainerRaw(context, request, cq));
    }
    // 删除实例
    virtual ::grpc::Status DelContainer(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::masterproto::DelContainerRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelContainerRsp>> AsyncDelContainer(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelContainerRsp>>(AsyncDelContainerRaw(context, request, cq));
    }
    // 异步增加实例
    virtual ::grpc::Status AddContainerAsync(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::masterproto::AddContainerAsyncRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerAsyncRsp>> AsyncAddContainerAsync(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerAsyncRsp>>(AsyncAddContainerAsyncRaw(context, request, cq));
    }
    // 用户功能相关协议
    // 创建集群
    virtual ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::masterproto::CreateClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateClusterRsp>> AsyncCreateCluster(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateClusterRsp>>(AsyncCreateClusterRaw(context, request, cq));
    }
    // 更新集群组件
    virtual ::grpc::Status UpgradeClusterModule(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::masterproto::UpgradeClusterModuleRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UpgradeClusterModuleRsp>> AsyncUpgradeClusterModule(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UpgradeClusterModuleRsp>>(AsyncUpgradeClusterModuleRaw(context, request, cq));
    }
    // 查询集群
    virtual ::grpc::Status InfoCluster(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::masterproto::InfoClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::InfoClusterRsp>> AsyncInfoCluster(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::InfoClusterRsp>>(AsyncInfoClusterRaw(context, request, cq));
    }
    // 删除集群
    virtual ::grpc::Status DelCluster(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::masterproto::DelClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterRsp>> AsyncDelCluster(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterRsp>>(AsyncDelClusterRaw(context, request, cq));
    }
    // 查询仓库
    virtual ::grpc::Status ListCluster(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::masterproto::ListClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ListClusterRsp>> AsyncListCluster(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ListClusterRsp>>(AsyncListClusterRaw(context, request, cq));
    }
    // 修改密码
    virtual ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::masterproto::ChPasswdRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChPasswdRsp>> AsyncChangePassword(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChPasswdRsp>>(AsyncChangePasswordRaw(context, request, cq));
    }
    // 定时查询任务状态
    virtual ::grpc::Status JobStatus(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::masterproto::JobStatusRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::JobStatusRsp>> AsyncJobStatus(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::JobStatusRsp>>(AsyncJobStatusRaw(context, request, cq));
    }
    // 调整集群副本集quota
    virtual ::grpc::Status ResizeCluster(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::masterproto::ResizeClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeClusterRsp>> AsyncResizeCluster(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeClusterRsp>>(AsyncResizeClusterRaw(context, request, cq));
    }
    // 备份集群
    virtual ::grpc::Status BackupCluster(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::masterproto::BackupClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BackupClusterRsp>> AsyncBackupCluster(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BackupClusterRsp>>(AsyncBackupClusterRaw(context, request, cq));
    }
    // 查询备份列表
    virtual ::grpc::Status QueryBackupList(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::masterproto::QueryBackupListRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryBackupListRsp>> AsyncQueryBackupList(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryBackupListRsp>>(AsyncQueryBackupListRaw(context, request, cq));
    }
    // 查询是否可回档
    virtual ::grpc::Status CheckRestoreTs(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::masterproto::CheckRestoreTsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CheckRestoreTsRsp>> AsyncCheckRestoreTs(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CheckRestoreTsRsp>>(AsyncCheckRestoreTsRaw(context, request, cq));
    }
    // 回档集群数据
    virtual ::grpc::Status RestoreCluster(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::masterproto::RestoreClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreClusterRsp>> AsyncRestoreCluster(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreClusterRsp>>(AsyncRestoreClusterRaw(context, request, cq));
    }
    // 对调新旧集群的cluster_id
    virtual ::grpc::Status ExchangeCluster(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::masterproto::ExchangeClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ExchangeClusterRsp>> AsyncExchangeCluster(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ExchangeClusterRsp>>(AsyncExchangeClusterRaw(context, request, cq));
    }
    // 隔离集群
    virtual ::grpc::Status IsolationCluster(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::masterproto::IsolationClusterRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsolationClusterRsp>> AsyncIsolationCluster(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsolationClusterRsp>>(AsyncIsolationClusterRaw(context, request, cq));
    }
    // 增加分片
    virtual ::grpc::Status AddReplicateSet(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::masterproto::AddRsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddRsRsp>> AsyncAddReplicateSet(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddRsRsp>>(AsyncAddReplicateSetRaw(context, request, cq));
    }
    // 删除分片
    virtual ::grpc::Status DelReplicateSet(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::masterproto::DelRsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelRsRsp>> AsyncDelReplicateSet(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelRsRsp>>(AsyncDelReplicateSetRaw(context, request, cq));
    }
    // 查询集群的oplog剩余量
    virtual ::grpc::Status QueryOpLogStatus(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::masterproto::OpLogStatusRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::OpLogStatusRsp>> AsyncQueryOpLogStatus(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::OpLogStatusRsp>>(AsyncQueryOpLogStatusRaw(context, request, cq));
    }
    // 展示DB列表
    virtual ::grpc::Status ShowDb(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::masterproto::ShowDbRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowDbRsp>> AsyncShowDb(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowDbRsp>>(AsyncShowDbRaw(context, request, cq));
    }
    // 展示collections 列表
    virtual ::grpc::Status ShowColls(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::masterproto::ShowCollsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowCollsRsp>> AsyncShowColls(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowCollsRsp>>(AsyncShowCollsRaw(context, request, cq));
    }
    // 查询慢日志
    virtual ::grpc::Status GetSlowQuery(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::masterproto::GetSlowQueryRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetSlowQueryRsp>> AsyncGetSlowQuery(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetSlowQueryRsp>>(AsyncGetSlowQueryRaw(context, request, cq));
    }
    // 查询归一化慢日志
    virtual ::grpc::Status QrySlowInfo(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::masterproto::QrySlowInfoRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QrySlowInfoRsp>> AsyncQrySlowInfo(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QrySlowInfoRsp>>(AsyncQrySlowInfoRaw(context, request, cq));
    }
    // 用户权限相关协议
    //
    // 创建用户
    virtual ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::masterproto::CreateUserRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateUserRsp>> AsyncCreateUser(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateUserRsp>>(AsyncCreateUserRaw(context, request, cq));
    }
    // 查看用户列表
    virtual ::grpc::Status QueryUserList(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::masterproto::QueryUserListRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryUserListRsp>> AsyncQueryUserList(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryUserListRsp>>(AsyncQueryUserListRaw(context, request, cq));
    }
    // 删除用户
    virtual ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::masterproto::DeleteUserRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DeleteUserRsp>> AsyncDeleteUser(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DeleteUserRsp>>(AsyncDeleteUserRaw(context, request, cq));
    }
    // 设置权限
    virtual ::grpc::Status SetUserAuth(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::masterproto::SetUserAuthRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetUserAuthRsp>> AsyncSetUserAuth(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetUserAuthRsp>>(AsyncSetUserAuthRaw(context, request, cq));
    }
    virtual ::grpc::Status Ping(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::cmongoproto::PingRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cmongoproto::PingRes>> AsyncPing(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::cmongoproto::PingRes>>(AsyncPingRaw(context, request, cq));
    }
    virtual ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::masterproto::CreateTableRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateTableRsp>> AsyncCreateTable(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateTableRsp>>(AsyncCreateTableRaw(context, request, cq));
    }
    virtual ::grpc::Status DropTable(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::masterproto::DropTableRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropTableRsp>> AsyncDropTable(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropTableRsp>>(AsyncDropTableRaw(context, request, cq));
    }
    virtual ::grpc::Status DropDatabase(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::masterproto::DropDatabaseRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropDatabaseRsp>> AsyncDropDatabase(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropDatabaseRsp>>(AsyncDropDatabaseRaw(context, request, cq));
    }
    virtual ::grpc::Status EnsureIndex(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::masterproto::EnsureIndexRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::EnsureIndexRsp>> AsyncEnsureIndex(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::EnsureIndexRsp>>(AsyncEnsureIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status DropIndex(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::masterproto::DropIndexRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexRsp>> AsyncDropIndex(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexRsp>>(AsyncDropIndexRaw(context, request, cq));
    }
    virtual ::grpc::Status DropIndexName(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::masterproto::DropIndexNameRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexNameRsp>> AsyncDropIndexName(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexNameRsp>>(AsyncDropIndexNameRaw(context, request, cq));
    }
    virtual ::grpc::Status ReportMigrateInfo(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::masterproto::ReportMigrateInfoRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ReportMigrateInfoRsp>> AsyncReportMigrateInfo(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ReportMigrateInfoRsp>>(AsyncReportMigrateInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status Migrate(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::masterproto::MigrateRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateRsp>> AsyncMigrate(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateRsp>>(AsyncMigrateRaw(context, request, cq));
    }
    virtual ::grpc::Status CleanMigrate(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::masterproto::CleanMigrateRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CleanMigrateRsp>> AsyncCleanMigrate(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CleanMigrateRsp>>(AsyncCleanMigrateRaw(context, request, cq));
    }
    virtual ::grpc::Status GetMigrateStatus(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::masterproto::GetMigrateStatusRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetMigrateStatusRsp>> AsyncGetMigrateStatus(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetMigrateStatusRsp>>(AsyncGetMigrateStatusRaw(context, request, cq));
    }
    virtual ::grpc::Status IsTableInMigrating(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::masterproto::IsTableInMigratingRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsTableInMigratingRsp>> AsyncIsTableInMigrating(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsTableInMigratingRsp>>(AsyncIsTableInMigratingRaw(context, request, cq));
    }
    virtual ::grpc::Status RestoreFiles(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::masterproto::RestoreFilesRes* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreFilesRes>> AsyncRestoreFiles(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreFilesRes>>(AsyncRestoreFilesRaw(context, request, cq));
    }
    virtual ::grpc::Status GenBalanceTask(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::masterproto::GenBalanceTaskRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GenBalanceTaskRsp>> AsyncGenBalanceTask(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GenBalanceTaskRsp>>(AsyncGenBalanceTaskRaw(context, request, cq));
    }
    virtual ::grpc::Status Balance(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::masterproto::BalanceRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BalanceRsp>> AsyncBalance(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BalanceRsp>>(AsyncBalanceRaw(context, request, cq));
    }
    // 修改chunk的读写状态并下发
    virtual ::grpc::Status ChangeRouteStat(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::masterproto::ChangeRouteStateRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteStateRsp>> AsyncChangeRouteStat(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteStateRsp>>(AsyncChangeRouteStatRaw(context, request, cq));
    }
    // 修改chunk的rs归属并下发
    virtual ::grpc::Status ChangeRouteRs(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::masterproto::ChangeRouteRsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteRsRsp>> AsyncChangeRouteRs(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteRsRsp>>(AsyncChangeRouteRsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClusterRoutes(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::masterproto::GetClusterRoutesRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRsp>> AsyncGetClusterRoutes(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRsp>>(AsyncGetClusterRoutesRaw(context, request, cq));
    }
    virtual ::grpc::Status GetIntersectMigrateJobs(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::masterproto::GetIntersectMigrateJobsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetIntersectMigrateJobsRsp>> AsyncGetIntersectMigrateJobs(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetIntersectMigrateJobsRsp>>(AsyncGetIntersectMigrateJobsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClusterInfo(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::masterproto::GetClusterInfoRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterInfoRsp>> AsyncGetClusterInfo(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterInfoRsp>>(AsyncGetClusterInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status SetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::masterproto::SetProxyNotifyInfoRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetProxyNotifyInfoRsp>> AsyncSetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetProxyNotifyInfoRsp>>(AsyncSetProxyNotifyInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::masterproto::GetProxyNotifyInfoRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetProxyNotifyInfoRsp>> AsyncGetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetProxyNotifyInfoRsp>>(AsyncGetProxyNotifyInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status SetVersionInfo(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::masterproto::SetVersionRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetVersionRsp>> AsyncSetVersionInfo(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetVersionRsp>>(AsyncSetVersionInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status GetVersionInfo(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::masterproto::GetVersionRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetVersionRsp>> AsyncGetVersionInfo(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetVersionRsp>>(AsyncGetVersionInfoRaw(context, request, cq));
    }
    virtual ::grpc::Status ResizeOplog(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::masterproto::ResizeOplogRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeOplogRsp>> AsyncResizeOplog(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeOplogRsp>>(AsyncResizeOplogRaw(context, request, cq));
    }
    virtual ::grpc::Status RestartContainer(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::masterproto::RestartContainerRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestartContainerRsp>> AsyncRestartContainer(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestartContainerRsp>>(AsyncRestartContainerRaw(context, request, cq));
    }
    virtual ::grpc::Status SetClusterMaxConns(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::masterproto::SetClusterMaxConnsRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterMaxConnsRsp>> AsyncSetClusterMaxConns(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterMaxConnsRsp>>(AsyncSetClusterMaxConnsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::masterproto::GetRegionBackupConfigRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetRegionBackupConfigRsp>> AsyncGetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetRegionBackupConfigRsp>>(AsyncGetRegionBackupConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status SetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::masterproto::SetRegionBackupConfigRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetRegionBackupConfigRsp>> AsyncSetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetRegionBackupConfigRsp>>(AsyncSetRegionBackupConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::masterproto::GetClusterBackupConfigRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterBackupConfigRsp>> AsyncGetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterBackupConfigRsp>>(AsyncGetClusterBackupConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status SetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::masterproto::SetClusterBackupConfigRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterBackupConfigRsp>> AsyncSetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterBackupConfigRsp>>(AsyncSetClusterBackupConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status DelClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::masterproto::DelClusterBackupConfigRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterBackupConfigRsp>> AsyncDelClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterBackupConfigRsp>>(AsyncDelClusterBackupConfigRaw(context, request, cq));
    }
    virtual ::grpc::Status GetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::masterproto::GetClusterRoutesRawRsp* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRawRsp>> AsyncGetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRawRsp>>(AsyncGetClusterRoutesRawRaw(context, request, cq));
    }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddResourceRsp>* AsyncAddResourceRaw(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BlockResourceRsp>* AsyncBlockResourceRaw(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UnblockResourceRsp>* AsyncUnblockResourceRaw(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelResourceRsp>* AsyncDelResourceRaw(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryResourceRsp>* AsyncQueryResourceRaw(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateContainerRsp>* AsyncMigrateContainerRaw(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateMachineRsp>* AsyncMigrateMachineRaw(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryMachineRsp>* AsyncQueryMachineRaw(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerRsp>* AsyncAddContainerRaw(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelContainerRsp>* AsyncDelContainerRaw(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddContainerAsyncRsp>* AsyncAddContainerAsyncRaw(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateClusterRsp>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::UpgradeClusterModuleRsp>* AsyncUpgradeClusterModuleRaw(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::InfoClusterRsp>* AsyncInfoClusterRaw(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterRsp>* AsyncDelClusterRaw(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ListClusterRsp>* AsyncListClusterRaw(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChPasswdRsp>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::JobStatusRsp>* AsyncJobStatusRaw(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeClusterRsp>* AsyncResizeClusterRaw(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BackupClusterRsp>* AsyncBackupClusterRaw(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryBackupListRsp>* AsyncQueryBackupListRaw(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CheckRestoreTsRsp>* AsyncCheckRestoreTsRaw(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreClusterRsp>* AsyncRestoreClusterRaw(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ExchangeClusterRsp>* AsyncExchangeClusterRaw(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsolationClusterRsp>* AsyncIsolationClusterRaw(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::AddRsRsp>* AsyncAddReplicateSetRaw(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelRsRsp>* AsyncDelReplicateSetRaw(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::OpLogStatusRsp>* AsyncQueryOpLogStatusRaw(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowDbRsp>* AsyncShowDbRaw(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ShowCollsRsp>* AsyncShowCollsRaw(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetSlowQueryRsp>* AsyncGetSlowQueryRaw(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QrySlowInfoRsp>* AsyncQrySlowInfoRaw(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateUserRsp>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::QueryUserListRsp>* AsyncQueryUserListRaw(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DeleteUserRsp>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetUserAuthRsp>* AsyncSetUserAuthRaw(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::cmongoproto::PingRes>* AsyncPingRaw(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CreateTableRsp>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropTableRsp>* AsyncDropTableRaw(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropDatabaseRsp>* AsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::EnsureIndexRsp>* AsyncEnsureIndexRaw(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexRsp>* AsyncDropIndexRaw(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DropIndexNameRsp>* AsyncDropIndexNameRaw(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ReportMigrateInfoRsp>* AsyncReportMigrateInfoRaw(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::MigrateRsp>* AsyncMigrateRaw(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::CleanMigrateRsp>* AsyncCleanMigrateRaw(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetMigrateStatusRsp>* AsyncGetMigrateStatusRaw(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::IsTableInMigratingRsp>* AsyncIsTableInMigratingRaw(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestoreFilesRes>* AsyncRestoreFilesRaw(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GenBalanceTaskRsp>* AsyncGenBalanceTaskRaw(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::BalanceRsp>* AsyncBalanceRaw(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteStateRsp>* AsyncChangeRouteStatRaw(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ChangeRouteRsRsp>* AsyncChangeRouteRsRaw(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRsp>* AsyncGetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetIntersectMigrateJobsRsp>* AsyncGetIntersectMigrateJobsRaw(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterInfoRsp>* AsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetProxyNotifyInfoRsp>* AsyncSetProxyNotifyInfoRaw(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetProxyNotifyInfoRsp>* AsyncGetProxyNotifyInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetVersionRsp>* AsyncSetVersionInfoRaw(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetVersionRsp>* AsyncGetVersionInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::ResizeOplogRsp>* AsyncResizeOplogRaw(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::RestartContainerRsp>* AsyncRestartContainerRaw(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterMaxConnsRsp>* AsyncSetClusterMaxConnsRaw(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetRegionBackupConfigRsp>* AsyncGetRegionBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetRegionBackupConfigRsp>* AsyncSetRegionBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterBackupConfigRsp>* AsyncGetClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::SetClusterBackupConfigRsp>* AsyncSetClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::DelClusterBackupConfigRsp>* AsyncDelClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::masterproto::GetClusterRoutesRawRsp>* AsyncGetClusterRoutesRawRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status AddResource(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::masterproto::AddResourceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddResourceRsp>> AsyncAddResource(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddResourceRsp>>(AsyncAddResourceRaw(context, request, cq));
    }
    ::grpc::Status BlockResource(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::masterproto::BlockResourceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BlockResourceRsp>> AsyncBlockResource(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BlockResourceRsp>>(AsyncBlockResourceRaw(context, request, cq));
    }
    ::grpc::Status UnblockResource(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::masterproto::UnblockResourceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::UnblockResourceRsp>> AsyncUnblockResource(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::UnblockResourceRsp>>(AsyncUnblockResourceRaw(context, request, cq));
    }
    ::grpc::Status DelResource(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::masterproto::DelResourceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelResourceRsp>> AsyncDelResource(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelResourceRsp>>(AsyncDelResourceRaw(context, request, cq));
    }
    ::grpc::Status QueryResource(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::masterproto::QueryResourceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryResourceRsp>> AsyncQueryResource(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryResourceRsp>>(AsyncQueryResourceRaw(context, request, cq));
    }
    ::grpc::Status MigrateContainer(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::masterproto::MigrateContainerRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateContainerRsp>> AsyncMigrateContainer(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateContainerRsp>>(AsyncMigrateContainerRaw(context, request, cq));
    }
    ::grpc::Status MigrateMachine(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::masterproto::MigrateMachineRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateMachineRsp>> AsyncMigrateMachine(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateMachineRsp>>(AsyncMigrateMachineRaw(context, request, cq));
    }
    ::grpc::Status QueryMachine(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::masterproto::QueryMachineRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryMachineRsp>> AsyncQueryMachine(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryMachineRsp>>(AsyncQueryMachineRaw(context, request, cq));
    }
    ::grpc::Status AddContainer(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::masterproto::AddContainerRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerRsp>> AsyncAddContainer(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerRsp>>(AsyncAddContainerRaw(context, request, cq));
    }
    ::grpc::Status DelContainer(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::masterproto::DelContainerRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelContainerRsp>> AsyncDelContainer(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelContainerRsp>>(AsyncDelContainerRaw(context, request, cq));
    }
    ::grpc::Status AddContainerAsync(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::masterproto::AddContainerAsyncRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerAsyncRsp>> AsyncAddContainerAsync(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerAsyncRsp>>(AsyncAddContainerAsyncRaw(context, request, cq));
    }
    ::grpc::Status CreateCluster(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::masterproto::CreateClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateClusterRsp>> AsyncCreateCluster(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateClusterRsp>>(AsyncCreateClusterRaw(context, request, cq));
    }
    ::grpc::Status UpgradeClusterModule(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::masterproto::UpgradeClusterModuleRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::UpgradeClusterModuleRsp>> AsyncUpgradeClusterModule(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::UpgradeClusterModuleRsp>>(AsyncUpgradeClusterModuleRaw(context, request, cq));
    }
    ::grpc::Status InfoCluster(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::masterproto::InfoClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::InfoClusterRsp>> AsyncInfoCluster(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::InfoClusterRsp>>(AsyncInfoClusterRaw(context, request, cq));
    }
    ::grpc::Status DelCluster(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::masterproto::DelClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterRsp>> AsyncDelCluster(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterRsp>>(AsyncDelClusterRaw(context, request, cq));
    }
    ::grpc::Status ListCluster(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::masterproto::ListClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ListClusterRsp>> AsyncListCluster(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ListClusterRsp>>(AsyncListClusterRaw(context, request, cq));
    }
    ::grpc::Status ChangePassword(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::masterproto::ChPasswdRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChPasswdRsp>> AsyncChangePassword(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChPasswdRsp>>(AsyncChangePasswordRaw(context, request, cq));
    }
    ::grpc::Status JobStatus(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::masterproto::JobStatusRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::JobStatusRsp>> AsyncJobStatus(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::JobStatusRsp>>(AsyncJobStatusRaw(context, request, cq));
    }
    ::grpc::Status ResizeCluster(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::masterproto::ResizeClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeClusterRsp>> AsyncResizeCluster(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeClusterRsp>>(AsyncResizeClusterRaw(context, request, cq));
    }
    ::grpc::Status BackupCluster(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::masterproto::BackupClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BackupClusterRsp>> AsyncBackupCluster(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BackupClusterRsp>>(AsyncBackupClusterRaw(context, request, cq));
    }
    ::grpc::Status QueryBackupList(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::masterproto::QueryBackupListRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryBackupListRsp>> AsyncQueryBackupList(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryBackupListRsp>>(AsyncQueryBackupListRaw(context, request, cq));
    }
    ::grpc::Status CheckRestoreTs(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::masterproto::CheckRestoreTsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CheckRestoreTsRsp>> AsyncCheckRestoreTs(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CheckRestoreTsRsp>>(AsyncCheckRestoreTsRaw(context, request, cq));
    }
    ::grpc::Status RestoreCluster(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::masterproto::RestoreClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreClusterRsp>> AsyncRestoreCluster(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreClusterRsp>>(AsyncRestoreClusterRaw(context, request, cq));
    }
    ::grpc::Status ExchangeCluster(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::masterproto::ExchangeClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ExchangeClusterRsp>> AsyncExchangeCluster(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ExchangeClusterRsp>>(AsyncExchangeClusterRaw(context, request, cq));
    }
    ::grpc::Status IsolationCluster(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::masterproto::IsolationClusterRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::IsolationClusterRsp>> AsyncIsolationCluster(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::IsolationClusterRsp>>(AsyncIsolationClusterRaw(context, request, cq));
    }
    ::grpc::Status AddReplicateSet(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::masterproto::AddRsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddRsRsp>> AsyncAddReplicateSet(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::AddRsRsp>>(AsyncAddReplicateSetRaw(context, request, cq));
    }
    ::grpc::Status DelReplicateSet(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::masterproto::DelRsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelRsRsp>> AsyncDelReplicateSet(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelRsRsp>>(AsyncDelReplicateSetRaw(context, request, cq));
    }
    ::grpc::Status QueryOpLogStatus(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::masterproto::OpLogStatusRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::OpLogStatusRsp>> AsyncQueryOpLogStatus(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::OpLogStatusRsp>>(AsyncQueryOpLogStatusRaw(context, request, cq));
    }
    ::grpc::Status ShowDb(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::masterproto::ShowDbRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ShowDbRsp>> AsyncShowDb(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ShowDbRsp>>(AsyncShowDbRaw(context, request, cq));
    }
    ::grpc::Status ShowColls(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::masterproto::ShowCollsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ShowCollsRsp>> AsyncShowColls(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ShowCollsRsp>>(AsyncShowCollsRaw(context, request, cq));
    }
    ::grpc::Status GetSlowQuery(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::masterproto::GetSlowQueryRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetSlowQueryRsp>> AsyncGetSlowQuery(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetSlowQueryRsp>>(AsyncGetSlowQueryRaw(context, request, cq));
    }
    ::grpc::Status QrySlowInfo(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::masterproto::QrySlowInfoRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QrySlowInfoRsp>> AsyncQrySlowInfo(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QrySlowInfoRsp>>(AsyncQrySlowInfoRaw(context, request, cq));
    }
    ::grpc::Status CreateUser(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::masterproto::CreateUserRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateUserRsp>> AsyncCreateUser(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateUserRsp>>(AsyncCreateUserRaw(context, request, cq));
    }
    ::grpc::Status QueryUserList(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::masterproto::QueryUserListRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryUserListRsp>> AsyncQueryUserList(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::QueryUserListRsp>>(AsyncQueryUserListRaw(context, request, cq));
    }
    ::grpc::Status DeleteUser(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::masterproto::DeleteUserRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DeleteUserRsp>> AsyncDeleteUser(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DeleteUserRsp>>(AsyncDeleteUserRaw(context, request, cq));
    }
    ::grpc::Status SetUserAuth(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::masterproto::SetUserAuthRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetUserAuthRsp>> AsyncSetUserAuth(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetUserAuthRsp>>(AsyncSetUserAuthRaw(context, request, cq));
    }
    ::grpc::Status Ping(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::cmongoproto::PingRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cmongoproto::PingRes>> AsyncPing(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::cmongoproto::PingRes>>(AsyncPingRaw(context, request, cq));
    }
    ::grpc::Status CreateTable(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::masterproto::CreateTableRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateTableRsp>> AsyncCreateTable(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CreateTableRsp>>(AsyncCreateTableRaw(context, request, cq));
    }
    ::grpc::Status DropTable(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::masterproto::DropTableRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropTableRsp>> AsyncDropTable(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropTableRsp>>(AsyncDropTableRaw(context, request, cq));
    }
    ::grpc::Status DropDatabase(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::masterproto::DropDatabaseRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropDatabaseRsp>> AsyncDropDatabase(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropDatabaseRsp>>(AsyncDropDatabaseRaw(context, request, cq));
    }
    ::grpc::Status EnsureIndex(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::masterproto::EnsureIndexRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::EnsureIndexRsp>> AsyncEnsureIndex(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::EnsureIndexRsp>>(AsyncEnsureIndexRaw(context, request, cq));
    }
    ::grpc::Status DropIndex(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::masterproto::DropIndexRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexRsp>> AsyncDropIndex(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexRsp>>(AsyncDropIndexRaw(context, request, cq));
    }
    ::grpc::Status DropIndexName(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::masterproto::DropIndexNameRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexNameRsp>> AsyncDropIndexName(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexNameRsp>>(AsyncDropIndexNameRaw(context, request, cq));
    }
    ::grpc::Status ReportMigrateInfo(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::masterproto::ReportMigrateInfoRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ReportMigrateInfoRsp>> AsyncReportMigrateInfo(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ReportMigrateInfoRsp>>(AsyncReportMigrateInfoRaw(context, request, cq));
    }
    ::grpc::Status Migrate(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::masterproto::MigrateRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateRsp>> AsyncMigrate(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateRsp>>(AsyncMigrateRaw(context, request, cq));
    }
    ::grpc::Status CleanMigrate(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::masterproto::CleanMigrateRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CleanMigrateRsp>> AsyncCleanMigrate(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::CleanMigrateRsp>>(AsyncCleanMigrateRaw(context, request, cq));
    }
    ::grpc::Status GetMigrateStatus(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::masterproto::GetMigrateStatusRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetMigrateStatusRsp>> AsyncGetMigrateStatus(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetMigrateStatusRsp>>(AsyncGetMigrateStatusRaw(context, request, cq));
    }
    ::grpc::Status IsTableInMigrating(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::masterproto::IsTableInMigratingRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::IsTableInMigratingRsp>> AsyncIsTableInMigrating(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::IsTableInMigratingRsp>>(AsyncIsTableInMigratingRaw(context, request, cq));
    }
    ::grpc::Status RestoreFiles(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::masterproto::RestoreFilesRes* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreFilesRes>> AsyncRestoreFiles(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreFilesRes>>(AsyncRestoreFilesRaw(context, request, cq));
    }
    ::grpc::Status GenBalanceTask(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::masterproto::GenBalanceTaskRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GenBalanceTaskRsp>> AsyncGenBalanceTask(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GenBalanceTaskRsp>>(AsyncGenBalanceTaskRaw(context, request, cq));
    }
    ::grpc::Status Balance(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::masterproto::BalanceRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BalanceRsp>> AsyncBalance(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::BalanceRsp>>(AsyncBalanceRaw(context, request, cq));
    }
    ::grpc::Status ChangeRouteStat(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::masterproto::ChangeRouteStateRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteStateRsp>> AsyncChangeRouteStat(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteStateRsp>>(AsyncChangeRouteStatRaw(context, request, cq));
    }
    ::grpc::Status ChangeRouteRs(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::masterproto::ChangeRouteRsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteRsRsp>> AsyncChangeRouteRs(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteRsRsp>>(AsyncChangeRouteRsRaw(context, request, cq));
    }
    ::grpc::Status GetClusterRoutes(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::masterproto::GetClusterRoutesRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRsp>> AsyncGetClusterRoutes(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRsp>>(AsyncGetClusterRoutesRaw(context, request, cq));
    }
    ::grpc::Status GetIntersectMigrateJobs(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::masterproto::GetIntersectMigrateJobsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetIntersectMigrateJobsRsp>> AsyncGetIntersectMigrateJobs(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetIntersectMigrateJobsRsp>>(AsyncGetIntersectMigrateJobsRaw(context, request, cq));
    }
    ::grpc::Status GetClusterInfo(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::masterproto::GetClusterInfoRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterInfoRsp>> AsyncGetClusterInfo(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterInfoRsp>>(AsyncGetClusterInfoRaw(context, request, cq));
    }
    ::grpc::Status SetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::masterproto::SetProxyNotifyInfoRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetProxyNotifyInfoRsp>> AsyncSetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetProxyNotifyInfoRsp>>(AsyncSetProxyNotifyInfoRaw(context, request, cq));
    }
    ::grpc::Status GetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::masterproto::GetProxyNotifyInfoRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetProxyNotifyInfoRsp>> AsyncGetProxyNotifyInfo(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetProxyNotifyInfoRsp>>(AsyncGetProxyNotifyInfoRaw(context, request, cq));
    }
    ::grpc::Status SetVersionInfo(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::masterproto::SetVersionRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetVersionRsp>> AsyncSetVersionInfo(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetVersionRsp>>(AsyncSetVersionInfoRaw(context, request, cq));
    }
    ::grpc::Status GetVersionInfo(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::masterproto::GetVersionRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetVersionRsp>> AsyncGetVersionInfo(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetVersionRsp>>(AsyncGetVersionInfoRaw(context, request, cq));
    }
    ::grpc::Status ResizeOplog(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::masterproto::ResizeOplogRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeOplogRsp>> AsyncResizeOplog(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeOplogRsp>>(AsyncResizeOplogRaw(context, request, cq));
    }
    ::grpc::Status RestartContainer(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::masterproto::RestartContainerRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestartContainerRsp>> AsyncRestartContainer(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::RestartContainerRsp>>(AsyncRestartContainerRaw(context, request, cq));
    }
    ::grpc::Status SetClusterMaxConns(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::masterproto::SetClusterMaxConnsRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterMaxConnsRsp>> AsyncSetClusterMaxConns(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterMaxConnsRsp>>(AsyncSetClusterMaxConnsRaw(context, request, cq));
    }
    ::grpc::Status GetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::masterproto::GetRegionBackupConfigRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetRegionBackupConfigRsp>> AsyncGetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetRegionBackupConfigRsp>>(AsyncGetRegionBackupConfigRaw(context, request, cq));
    }
    ::grpc::Status SetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::masterproto::SetRegionBackupConfigRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetRegionBackupConfigRsp>> AsyncSetRegionBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetRegionBackupConfigRsp>>(AsyncSetRegionBackupConfigRaw(context, request, cq));
    }
    ::grpc::Status GetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::masterproto::GetClusterBackupConfigRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterBackupConfigRsp>> AsyncGetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterBackupConfigRsp>>(AsyncGetClusterBackupConfigRaw(context, request, cq));
    }
    ::grpc::Status SetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::masterproto::SetClusterBackupConfigRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterBackupConfigRsp>> AsyncSetClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterBackupConfigRsp>>(AsyncSetClusterBackupConfigRaw(context, request, cq));
    }
    ::grpc::Status DelClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::masterproto::DelClusterBackupConfigRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterBackupConfigRsp>> AsyncDelClusterBackupConfig(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterBackupConfigRsp>>(AsyncDelClusterBackupConfigRaw(context, request, cq));
    }
    ::grpc::Status GetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::masterproto::GetClusterRoutesRawRsp* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRawRsp>> AsyncGetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRawRsp>>(AsyncGetClusterRoutesRawRaw(context, request, cq));
    }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    ::grpc::ClientAsyncResponseReader< ::masterproto::AddResourceRsp>* AsyncAddResourceRaw(::grpc::ClientContext* context, const ::masterproto::AddResourceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::BlockResourceRsp>* AsyncBlockResourceRaw(::grpc::ClientContext* context, const ::masterproto::BlockResourceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::UnblockResourceRsp>* AsyncUnblockResourceRaw(::grpc::ClientContext* context, const ::masterproto::UnblockResourceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DelResourceRsp>* AsyncDelResourceRaw(::grpc::ClientContext* context, const ::masterproto::DelResourceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::QueryResourceRsp>* AsyncQueryResourceRaw(::grpc::ClientContext* context, const ::masterproto::QueryResourceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateContainerRsp>* AsyncMigrateContainerRaw(::grpc::ClientContext* context, const ::masterproto::MigrateContainerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateMachineRsp>* AsyncMigrateMachineRaw(::grpc::ClientContext* context, const ::masterproto::MigrateMachineReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::QueryMachineRsp>* AsyncQueryMachineRaw(::grpc::ClientContext* context, const ::masterproto::QueryMachineReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerRsp>* AsyncAddContainerRaw(::grpc::ClientContext* context, const ::masterproto::AddContainerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DelContainerRsp>* AsyncDelContainerRaw(::grpc::ClientContext* context, const ::masterproto::DelContainerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::AddContainerAsyncRsp>* AsyncAddContainerAsyncRaw(::grpc::ClientContext* context, const ::masterproto::AddContainerAsyncReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::CreateClusterRsp>* AsyncCreateClusterRaw(::grpc::ClientContext* context, const ::masterproto::CreateClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::UpgradeClusterModuleRsp>* AsyncUpgradeClusterModuleRaw(::grpc::ClientContext* context, const ::masterproto::UpgradeClusterModuleReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::InfoClusterRsp>* AsyncInfoClusterRaw(::grpc::ClientContext* context, const ::masterproto::InfoClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterRsp>* AsyncDelClusterRaw(::grpc::ClientContext* context, const ::masterproto::DelClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ListClusterRsp>* AsyncListClusterRaw(::grpc::ClientContext* context, const ::masterproto::ListClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ChPasswdRsp>* AsyncChangePasswordRaw(::grpc::ClientContext* context, const ::masterproto::ChPasswdReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::JobStatusRsp>* AsyncJobStatusRaw(::grpc::ClientContext* context, const ::masterproto::JobStatusReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeClusterRsp>* AsyncResizeClusterRaw(::grpc::ClientContext* context, const ::masterproto::ResizeClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::BackupClusterRsp>* AsyncBackupClusterRaw(::grpc::ClientContext* context, const ::masterproto::BackupClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::QueryBackupListRsp>* AsyncQueryBackupListRaw(::grpc::ClientContext* context, const ::masterproto::QueryBackupListReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::CheckRestoreTsRsp>* AsyncCheckRestoreTsRaw(::grpc::ClientContext* context, const ::masterproto::CheckRestoreTsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreClusterRsp>* AsyncRestoreClusterRaw(::grpc::ClientContext* context, const ::masterproto::RestoreClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ExchangeClusterRsp>* AsyncExchangeClusterRaw(::grpc::ClientContext* context, const ::masterproto::ExchangeClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::IsolationClusterRsp>* AsyncIsolationClusterRaw(::grpc::ClientContext* context, const ::masterproto::IsolationClusterReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::AddRsRsp>* AsyncAddReplicateSetRaw(::grpc::ClientContext* context, const ::masterproto::AddRsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DelRsRsp>* AsyncDelReplicateSetRaw(::grpc::ClientContext* context, const ::masterproto::DelRsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::OpLogStatusRsp>* AsyncQueryOpLogStatusRaw(::grpc::ClientContext* context, const ::masterproto::OpLogStatusReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ShowDbRsp>* AsyncShowDbRaw(::grpc::ClientContext* context, const ::masterproto::ShowDbReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ShowCollsRsp>* AsyncShowCollsRaw(::grpc::ClientContext* context, const ::masterproto::ShowCollsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetSlowQueryRsp>* AsyncGetSlowQueryRaw(::grpc::ClientContext* context, const ::masterproto::GetSlowQueryReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::QrySlowInfoRsp>* AsyncQrySlowInfoRaw(::grpc::ClientContext* context, const ::masterproto::QrySlowInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::CreateUserRsp>* AsyncCreateUserRaw(::grpc::ClientContext* context, const ::masterproto::CreateUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::QueryUserListRsp>* AsyncQueryUserListRaw(::grpc::ClientContext* context, const ::masterproto::QueryUserListReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DeleteUserRsp>* AsyncDeleteUserRaw(::grpc::ClientContext* context, const ::masterproto::DeleteUserReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetUserAuthRsp>* AsyncSetUserAuthRaw(::grpc::ClientContext* context, const ::masterproto::SetUserAuthReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::cmongoproto::PingRes>* AsyncPingRaw(::grpc::ClientContext* context, const ::cmongoproto::PingReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::CreateTableRsp>* AsyncCreateTableRaw(::grpc::ClientContext* context, const ::masterproto::CreateTableReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DropTableRsp>* AsyncDropTableRaw(::grpc::ClientContext* context, const ::masterproto::DropTableReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DropDatabaseRsp>* AsyncDropDatabaseRaw(::grpc::ClientContext* context, const ::masterproto::DropDatabaseReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::EnsureIndexRsp>* AsyncEnsureIndexRaw(::grpc::ClientContext* context, const ::masterproto::EnsureIndexReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexRsp>* AsyncDropIndexRaw(::grpc::ClientContext* context, const ::masterproto::DropIndexReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DropIndexNameRsp>* AsyncDropIndexNameRaw(::grpc::ClientContext* context, const ::masterproto::DropIndexNameReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ReportMigrateInfoRsp>* AsyncReportMigrateInfoRaw(::grpc::ClientContext* context, const ::masterproto::ReportMigrateInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::MigrateRsp>* AsyncMigrateRaw(::grpc::ClientContext* context, const ::masterproto::MigrateReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::CleanMigrateRsp>* AsyncCleanMigrateRaw(::grpc::ClientContext* context, const ::masterproto::CleanMigrateReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetMigrateStatusRsp>* AsyncGetMigrateStatusRaw(::grpc::ClientContext* context, const ::masterproto::GetMigrateStatusReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::IsTableInMigratingRsp>* AsyncIsTableInMigratingRaw(::grpc::ClientContext* context, const ::masterproto::IsTableInMigratingReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::RestoreFilesRes>* AsyncRestoreFilesRaw(::grpc::ClientContext* context, const ::masterproto::RestoreFilesReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GenBalanceTaskRsp>* AsyncGenBalanceTaskRaw(::grpc::ClientContext* context, const ::masterproto::GenBalanceTaskReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::BalanceRsp>* AsyncBalanceRaw(::grpc::ClientContext* context, const ::masterproto::BalanceReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteStateRsp>* AsyncChangeRouteStatRaw(::grpc::ClientContext* context, const ::masterproto::ChangeRouteStateReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ChangeRouteRsRsp>* AsyncChangeRouteRsRaw(::grpc::ClientContext* context, const ::masterproto::ChangeRouteRsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRsp>* AsyncGetClusterRoutesRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetIntersectMigrateJobsRsp>* AsyncGetIntersectMigrateJobsRaw(::grpc::ClientContext* context, const ::masterproto::GetIntersectMigrateJobsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterInfoRsp>* AsyncGetClusterInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetProxyNotifyInfoRsp>* AsyncSetProxyNotifyInfoRaw(::grpc::ClientContext* context, const ::masterproto::SetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetProxyNotifyInfoRsp>* AsyncGetProxyNotifyInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetProxyNotifyInfoReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetVersionRsp>* AsyncSetVersionInfoRaw(::grpc::ClientContext* context, const ::masterproto::SetVersionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetVersionRsp>* AsyncGetVersionInfoRaw(::grpc::ClientContext* context, const ::masterproto::GetVersionReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::ResizeOplogRsp>* AsyncResizeOplogRaw(::grpc::ClientContext* context, const ::masterproto::ResizeOplogReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::RestartContainerRsp>* AsyncRestartContainerRaw(::grpc::ClientContext* context, const ::masterproto::RestartContainerReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterMaxConnsRsp>* AsyncSetClusterMaxConnsRaw(::grpc::ClientContext* context, const ::masterproto::SetClusterMaxConnsReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetRegionBackupConfigRsp>* AsyncGetRegionBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::GetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetRegionBackupConfigRsp>* AsyncSetRegionBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::SetRegionBackupConfigReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterBackupConfigRsp>* AsyncGetClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::SetClusterBackupConfigRsp>* AsyncSetClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::SetClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::DelClusterBackupConfigRsp>* AsyncDelClusterBackupConfigRaw(::grpc::ClientContext* context, const ::masterproto::DelClusterBackupConfigReq& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::masterproto::GetClusterRoutesRawRsp>* AsyncGetClusterRoutesRawRaw(::grpc::ClientContext* context, const ::masterproto::GetClusterRoutesRawReq& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::RpcMethod rpcmethod_AddResource_;
    const ::grpc::RpcMethod rpcmethod_BlockResource_;
    const ::grpc::RpcMethod rpcmethod_UnblockResource_;
    const ::grpc::RpcMethod rpcmethod_DelResource_;
    const ::grpc::RpcMethod rpcmethod_QueryResource_;
    const ::grpc::RpcMethod rpcmethod_MigrateContainer_;
    const ::grpc::RpcMethod rpcmethod_MigrateMachine_;
    const ::grpc::RpcMethod rpcmethod_QueryMachine_;
    const ::grpc::RpcMethod rpcmethod_AddContainer_;
    const ::grpc::RpcMethod rpcmethod_DelContainer_;
    const ::grpc::RpcMethod rpcmethod_AddContainerAsync_;
    const ::grpc::RpcMethod rpcmethod_CreateCluster_;
    const ::grpc::RpcMethod rpcmethod_UpgradeClusterModule_;
    const ::grpc::RpcMethod rpcmethod_InfoCluster_;
    const ::grpc::RpcMethod rpcmethod_DelCluster_;
    const ::grpc::RpcMethod rpcmethod_ListCluster_;
    const ::grpc::RpcMethod rpcmethod_ChangePassword_;
    const ::grpc::RpcMethod rpcmethod_JobStatus_;
    const ::grpc::RpcMethod rpcmethod_ResizeCluster_;
    const ::grpc::RpcMethod rpcmethod_BackupCluster_;
    const ::grpc::RpcMethod rpcmethod_QueryBackupList_;
    const ::grpc::RpcMethod rpcmethod_CheckRestoreTs_;
    const ::grpc::RpcMethod rpcmethod_RestoreCluster_;
    const ::grpc::RpcMethod rpcmethod_ExchangeCluster_;
    const ::grpc::RpcMethod rpcmethod_IsolationCluster_;
    const ::grpc::RpcMethod rpcmethod_AddReplicateSet_;
    const ::grpc::RpcMethod rpcmethod_DelReplicateSet_;
    const ::grpc::RpcMethod rpcmethod_QueryOpLogStatus_;
    const ::grpc::RpcMethod rpcmethod_ShowDb_;
    const ::grpc::RpcMethod rpcmethod_ShowColls_;
    const ::grpc::RpcMethod rpcmethod_GetSlowQuery_;
    const ::grpc::RpcMethod rpcmethod_QrySlowInfo_;
    const ::grpc::RpcMethod rpcmethod_CreateUser_;
    const ::grpc::RpcMethod rpcmethod_QueryUserList_;
    const ::grpc::RpcMethod rpcmethod_DeleteUser_;
    const ::grpc::RpcMethod rpcmethod_SetUserAuth_;
    const ::grpc::RpcMethod rpcmethod_Ping_;
    const ::grpc::RpcMethod rpcmethod_CreateTable_;
    const ::grpc::RpcMethod rpcmethod_DropTable_;
    const ::grpc::RpcMethod rpcmethod_DropDatabase_;
    const ::grpc::RpcMethod rpcmethod_EnsureIndex_;
    const ::grpc::RpcMethod rpcmethod_DropIndex_;
    const ::grpc::RpcMethod rpcmethod_DropIndexName_;
    const ::grpc::RpcMethod rpcmethod_ReportMigrateInfo_;
    const ::grpc::RpcMethod rpcmethod_Migrate_;
    const ::grpc::RpcMethod rpcmethod_CleanMigrate_;
    const ::grpc::RpcMethod rpcmethod_GetMigrateStatus_;
    const ::grpc::RpcMethod rpcmethod_IsTableInMigrating_;
    const ::grpc::RpcMethod rpcmethod_RestoreFiles_;
    const ::grpc::RpcMethod rpcmethod_GenBalanceTask_;
    const ::grpc::RpcMethod rpcmethod_Balance_;
    const ::grpc::RpcMethod rpcmethod_ChangeRouteStat_;
    const ::grpc::RpcMethod rpcmethod_ChangeRouteRs_;
    const ::grpc::RpcMethod rpcmethod_GetClusterRoutes_;
    const ::grpc::RpcMethod rpcmethod_GetIntersectMigrateJobs_;
    const ::grpc::RpcMethod rpcmethod_GetClusterInfo_;
    const ::grpc::RpcMethod rpcmethod_SetProxyNotifyInfo_;
    const ::grpc::RpcMethod rpcmethod_GetProxyNotifyInfo_;
    const ::grpc::RpcMethod rpcmethod_SetVersionInfo_;
    const ::grpc::RpcMethod rpcmethod_GetVersionInfo_;
    const ::grpc::RpcMethod rpcmethod_ResizeOplog_;
    const ::grpc::RpcMethod rpcmethod_RestartContainer_;
    const ::grpc::RpcMethod rpcmethod_SetClusterMaxConns_;
    const ::grpc::RpcMethod rpcmethod_GetRegionBackupConfig_;
    const ::grpc::RpcMethod rpcmethod_SetRegionBackupConfig_;
    const ::grpc::RpcMethod rpcmethod_GetClusterBackupConfig_;
    const ::grpc::RpcMethod rpcmethod_SetClusterBackupConfig_;
    const ::grpc::RpcMethod rpcmethod_DelClusterBackupConfig_;
    const ::grpc::RpcMethod rpcmethod_GetClusterRoutesRaw_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // 运维部署相关协议
    // 上架机器
    virtual ::grpc::Status AddResource(::grpc::ServerContext* context, const ::masterproto::AddResourceReq* request, ::masterproto::AddResourceRsp* response);
    // 冻结机器
    virtual ::grpc::Status BlockResource(::grpc::ServerContext* context, const ::masterproto::BlockResourceReq* request, ::masterproto::BlockResourceRsp* response);
    // 解冻机器
    virtual ::grpc::Status UnblockResource(::grpc::ServerContext* context, const ::masterproto::UnblockResourceReq* request, ::masterproto::UnblockResourceRsp* response);
    // 下架机器
    virtual ::grpc::Status DelResource(::grpc::ServerContext* context, const ::masterproto::DelResourceReq* request, ::masterproto::DelResourceRsp* response);
    // 查询机器列表
    virtual ::grpc::Status QueryResource(::grpc::ServerContext* context, const ::masterproto::QueryResourceReq* request, ::masterproto::QueryResourceRsp* response);
    // 迁移实例
    virtual ::grpc::Status MigrateContainer(::grpc::ServerContext* context, const ::masterproto::MigrateContainerReq* request, ::masterproto::MigrateContainerRsp* response);
    // 迁移机器
    virtual ::grpc::Status MigrateMachine(::grpc::ServerContext* context, const ::masterproto::MigrateMachineReq* request, ::masterproto::MigrateMachineRsp* response);
    // 查询机器
    virtual ::grpc::Status QueryMachine(::grpc::ServerContext* context, const ::masterproto::QueryMachineReq* request, ::masterproto::QueryMachineRsp* response);
    // 增加实例
    virtual ::grpc::Status AddContainer(::grpc::ServerContext* context, const ::masterproto::AddContainerReq* request, ::masterproto::AddContainerRsp* response);
    // 删除实例
    virtual ::grpc::Status DelContainer(::grpc::ServerContext* context, const ::masterproto::DelContainerReq* request, ::masterproto::DelContainerRsp* response);
    // 异步增加实例
    virtual ::grpc::Status AddContainerAsync(::grpc::ServerContext* context, const ::masterproto::AddContainerAsyncReq* request, ::masterproto::AddContainerAsyncRsp* response);
    // 用户功能相关协议
    // 创建集群
    virtual ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::masterproto::CreateClusterReq* request, ::masterproto::CreateClusterRsp* response);
    // 更新集群组件
    virtual ::grpc::Status UpgradeClusterModule(::grpc::ServerContext* context, const ::masterproto::UpgradeClusterModuleReq* request, ::masterproto::UpgradeClusterModuleRsp* response);
    // 查询集群
    virtual ::grpc::Status InfoCluster(::grpc::ServerContext* context, const ::masterproto::InfoClusterReq* request, ::masterproto::InfoClusterRsp* response);
    // 删除集群
    virtual ::grpc::Status DelCluster(::grpc::ServerContext* context, const ::masterproto::DelClusterReq* request, ::masterproto::DelClusterRsp* response);
    // 查询仓库
    virtual ::grpc::Status ListCluster(::grpc::ServerContext* context, const ::masterproto::ListClusterReq* request, ::masterproto::ListClusterRsp* response);
    // 修改密码
    virtual ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::masterproto::ChPasswdReq* request, ::masterproto::ChPasswdRsp* response);
    // 定时查询任务状态
    virtual ::grpc::Status JobStatus(::grpc::ServerContext* context, const ::masterproto::JobStatusReq* request, ::masterproto::JobStatusRsp* response);
    // 调整集群副本集quota
    virtual ::grpc::Status ResizeCluster(::grpc::ServerContext* context, const ::masterproto::ResizeClusterReq* request, ::masterproto::ResizeClusterRsp* response);
    // 备份集群
    virtual ::grpc::Status BackupCluster(::grpc::ServerContext* context, const ::masterproto::BackupClusterReq* request, ::masterproto::BackupClusterRsp* response);
    // 查询备份列表
    virtual ::grpc::Status QueryBackupList(::grpc::ServerContext* context, const ::masterproto::QueryBackupListReq* request, ::masterproto::QueryBackupListRsp* response);
    // 查询是否可回档
    virtual ::grpc::Status CheckRestoreTs(::grpc::ServerContext* context, const ::masterproto::CheckRestoreTsReq* request, ::masterproto::CheckRestoreTsRsp* response);
    // 回档集群数据
    virtual ::grpc::Status RestoreCluster(::grpc::ServerContext* context, const ::masterproto::RestoreClusterReq* request, ::masterproto::RestoreClusterRsp* response);
    // 对调新旧集群的cluster_id
    virtual ::grpc::Status ExchangeCluster(::grpc::ServerContext* context, const ::masterproto::ExchangeClusterReq* request, ::masterproto::ExchangeClusterRsp* response);
    // 隔离集群
    virtual ::grpc::Status IsolationCluster(::grpc::ServerContext* context, const ::masterproto::IsolationClusterReq* request, ::masterproto::IsolationClusterRsp* response);
    // 增加分片
    virtual ::grpc::Status AddReplicateSet(::grpc::ServerContext* context, const ::masterproto::AddRsReq* request, ::masterproto::AddRsRsp* response);
    // 删除分片
    virtual ::grpc::Status DelReplicateSet(::grpc::ServerContext* context, const ::masterproto::DelRsReq* request, ::masterproto::DelRsRsp* response);
    // 查询集群的oplog剩余量
    virtual ::grpc::Status QueryOpLogStatus(::grpc::ServerContext* context, const ::masterproto::OpLogStatusReq* request, ::masterproto::OpLogStatusRsp* response);
    // 展示DB列表
    virtual ::grpc::Status ShowDb(::grpc::ServerContext* context, const ::masterproto::ShowDbReq* request, ::masterproto::ShowDbRsp* response);
    // 展示collections 列表
    virtual ::grpc::Status ShowColls(::grpc::ServerContext* context, const ::masterproto::ShowCollsReq* request, ::masterproto::ShowCollsRsp* response);
    // 查询慢日志
    virtual ::grpc::Status GetSlowQuery(::grpc::ServerContext* context, const ::masterproto::GetSlowQueryReq* request, ::masterproto::GetSlowQueryRsp* response);
    // 查询归一化慢日志
    virtual ::grpc::Status QrySlowInfo(::grpc::ServerContext* context, const ::masterproto::QrySlowInfoReq* request, ::masterproto::QrySlowInfoRsp* response);
    // 用户权限相关协议
    //
    // 创建用户
    virtual ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::masterproto::CreateUserReq* request, ::masterproto::CreateUserRsp* response);
    // 查看用户列表
    virtual ::grpc::Status QueryUserList(::grpc::ServerContext* context, const ::masterproto::QueryUserListReq* request, ::masterproto::QueryUserListRsp* response);
    // 删除用户
    virtual ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::masterproto::DeleteUserReq* request, ::masterproto::DeleteUserRsp* response);
    // 设置权限
    virtual ::grpc::Status SetUserAuth(::grpc::ServerContext* context, const ::masterproto::SetUserAuthReq* request, ::masterproto::SetUserAuthRsp* response);
    virtual ::grpc::Status Ping(::grpc::ServerContext* context, const ::cmongoproto::PingReq* request, ::cmongoproto::PingRes* response);
    virtual ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::masterproto::CreateTableReq* request, ::masterproto::CreateTableRsp* response);
    virtual ::grpc::Status DropTable(::grpc::ServerContext* context, const ::masterproto::DropTableReq* request, ::masterproto::DropTableRsp* response);
    virtual ::grpc::Status DropDatabase(::grpc::ServerContext* context, const ::masterproto::DropDatabaseReq* request, ::masterproto::DropDatabaseRsp* response);
    virtual ::grpc::Status EnsureIndex(::grpc::ServerContext* context, const ::masterproto::EnsureIndexReq* request, ::masterproto::EnsureIndexRsp* response);
    virtual ::grpc::Status DropIndex(::grpc::ServerContext* context, const ::masterproto::DropIndexReq* request, ::masterproto::DropIndexRsp* response);
    virtual ::grpc::Status DropIndexName(::grpc::ServerContext* context, const ::masterproto::DropIndexNameReq* request, ::masterproto::DropIndexNameRsp* response);
    virtual ::grpc::Status ReportMigrateInfo(::grpc::ServerContext* context, const ::masterproto::ReportMigrateInfoReq* request, ::masterproto::ReportMigrateInfoRsp* response);
    virtual ::grpc::Status Migrate(::grpc::ServerContext* context, const ::masterproto::MigrateReq* request, ::masterproto::MigrateRsp* response);
    virtual ::grpc::Status CleanMigrate(::grpc::ServerContext* context, const ::masterproto::CleanMigrateReq* request, ::masterproto::CleanMigrateRsp* response);
    virtual ::grpc::Status GetMigrateStatus(::grpc::ServerContext* context, const ::masterproto::GetMigrateStatusReq* request, ::masterproto::GetMigrateStatusRsp* response);
    virtual ::grpc::Status IsTableInMigrating(::grpc::ServerContext* context, const ::masterproto::IsTableInMigratingReq* request, ::masterproto::IsTableInMigratingRsp* response);
    virtual ::grpc::Status RestoreFiles(::grpc::ServerContext* context, const ::masterproto::RestoreFilesReq* request, ::masterproto::RestoreFilesRes* response);
    virtual ::grpc::Status GenBalanceTask(::grpc::ServerContext* context, const ::masterproto::GenBalanceTaskReq* request, ::masterproto::GenBalanceTaskRsp* response);
    virtual ::grpc::Status Balance(::grpc::ServerContext* context, const ::masterproto::BalanceReq* request, ::masterproto::BalanceRsp* response);
    // 修改chunk的读写状态并下发
    virtual ::grpc::Status ChangeRouteStat(::grpc::ServerContext* context, const ::masterproto::ChangeRouteStateReq* request, ::masterproto::ChangeRouteStateRsp* response);
    // 修改chunk的rs归属并下发
    virtual ::grpc::Status ChangeRouteRs(::grpc::ServerContext* context, const ::masterproto::ChangeRouteRsReq* request, ::masterproto::ChangeRouteRsRsp* response);
    virtual ::grpc::Status GetClusterRoutes(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesReq* request, ::masterproto::GetClusterRoutesRsp* response);
    virtual ::grpc::Status GetIntersectMigrateJobs(::grpc::ServerContext* context, const ::masterproto::GetIntersectMigrateJobsReq* request, ::masterproto::GetIntersectMigrateJobsRsp* response);
    virtual ::grpc::Status GetClusterInfo(::grpc::ServerContext* context, const ::masterproto::GetClusterInfoReq* request, ::masterproto::GetClusterInfoRsp* response);
    virtual ::grpc::Status SetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::SetProxyNotifyInfoReq* request, ::masterproto::SetProxyNotifyInfoRsp* response);
    virtual ::grpc::Status GetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::GetProxyNotifyInfoReq* request, ::masterproto::GetProxyNotifyInfoRsp* response);
    virtual ::grpc::Status SetVersionInfo(::grpc::ServerContext* context, const ::masterproto::SetVersionReq* request, ::masterproto::SetVersionRsp* response);
    virtual ::grpc::Status GetVersionInfo(::grpc::ServerContext* context, const ::masterproto::GetVersionReq* request, ::masterproto::GetVersionRsp* response);
    virtual ::grpc::Status ResizeOplog(::grpc::ServerContext* context, const ::masterproto::ResizeOplogReq* request, ::masterproto::ResizeOplogRsp* response);
    virtual ::grpc::Status RestartContainer(::grpc::ServerContext* context, const ::masterproto::RestartContainerReq* request, ::masterproto::RestartContainerRsp* response);
    virtual ::grpc::Status SetClusterMaxConns(::grpc::ServerContext* context, const ::masterproto::SetClusterMaxConnsReq* request, ::masterproto::SetClusterMaxConnsRsp* response);
    virtual ::grpc::Status GetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetRegionBackupConfigReq* request, ::masterproto::GetRegionBackupConfigRsp* response);
    virtual ::grpc::Status SetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetRegionBackupConfigReq* request, ::masterproto::SetRegionBackupConfigRsp* response);
    virtual ::grpc::Status GetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetClusterBackupConfigReq* request, ::masterproto::GetClusterBackupConfigRsp* response);
    virtual ::grpc::Status SetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetClusterBackupConfigReq* request, ::masterproto::SetClusterBackupConfigRsp* response);
    virtual ::grpc::Status DelClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::DelClusterBackupConfigReq* request, ::masterproto::DelClusterBackupConfigRsp* response);
    virtual ::grpc::Status GetClusterRoutesRaw(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesRawReq* request, ::masterproto::GetClusterRoutesRawRsp* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AddResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddResource() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AddResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddResource(::grpc::ServerContext* context, const ::masterproto::AddResourceReq* request, ::masterproto::AddResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddResource(::grpc::ServerContext* context, ::masterproto::AddResourceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::AddResourceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BlockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_BlockResource() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_BlockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockResource(::grpc::ServerContext* context, const ::masterproto::BlockResourceReq* request, ::masterproto::BlockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBlockResource(::grpc::ServerContext* context, ::masterproto::BlockResourceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::BlockResourceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UnblockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UnblockResource() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_UnblockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockResource(::grpc::ServerContext* context, const ::masterproto::UnblockResourceReq* request, ::masterproto::UnblockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUnblockResource(::grpc::ServerContext* context, ::masterproto::UnblockResourceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::UnblockResourceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DelResource() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_DelResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelResource(::grpc::ServerContext* context, const ::masterproto::DelResourceReq* request, ::masterproto::DelResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelResource(::grpc::ServerContext* context, ::masterproto::DelResourceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DelResourceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QueryResource() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_QueryResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryResource(::grpc::ServerContext* context, const ::masterproto::QueryResourceReq* request, ::masterproto::QueryResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryResource(::grpc::ServerContext* context, ::masterproto::QueryResourceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::QueryResourceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MigrateContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MigrateContainer() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_MigrateContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContainer(::grpc::ServerContext* context, const ::masterproto::MigrateContainerReq* request, ::masterproto::MigrateContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMigrateContainer(::grpc::ServerContext* context, ::masterproto::MigrateContainerReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::MigrateContainerRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_MigrateMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_MigrateMachine() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_MigrateMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateMachine(::grpc::ServerContext* context, const ::masterproto::MigrateMachineReq* request, ::masterproto::MigrateMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMigrateMachine(::grpc::ServerContext* context, ::masterproto::MigrateMachineReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::MigrateMachineRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QueryMachine() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_QueryMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMachine(::grpc::ServerContext* context, const ::masterproto::QueryMachineReq* request, ::masterproto::QueryMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryMachine(::grpc::ServerContext* context, ::masterproto::QueryMachineReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::QueryMachineRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddContainer() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_AddContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContainer(::grpc::ServerContext* context, const ::masterproto::AddContainerReq* request, ::masterproto::AddContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddContainer(::grpc::ServerContext* context, ::masterproto::AddContainerReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::AddContainerRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DelContainer() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_DelContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelContainer(::grpc::ServerContext* context, const ::masterproto::DelContainerReq* request, ::masterproto::DelContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelContainer(::grpc::ServerContext* context, ::masterproto::DelContainerReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DelContainerRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(9, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddContainerAsync : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddContainerAsync() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_AddContainerAsync() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContainerAsync(::grpc::ServerContext* context, const ::masterproto::AddContainerAsyncReq* request, ::masterproto::AddContainerAsyncRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddContainerAsync(::grpc::ServerContext* context, ::masterproto::AddContainerAsyncReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::AddContainerAsyncRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(10, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateCluster() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::masterproto::CreateClusterReq* request, ::masterproto::CreateClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateCluster(::grpc::ServerContext* context, ::masterproto::CreateClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::CreateClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(11, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UpgradeClusterModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_UpgradeClusterModule() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_UpgradeClusterModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClusterModule(::grpc::ServerContext* context, const ::masterproto::UpgradeClusterModuleReq* request, ::masterproto::UpgradeClusterModuleRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUpgradeClusterModule(::grpc::ServerContext* context, ::masterproto::UpgradeClusterModuleReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::UpgradeClusterModuleRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(12, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_InfoCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_InfoCluster() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_InfoCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InfoCluster(::grpc::ServerContext* context, const ::masterproto::InfoClusterReq* request, ::masterproto::InfoClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestInfoCluster(::grpc::ServerContext* context, ::masterproto::InfoClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::InfoClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(13, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DelCluster() {
      ::grpc::Service::MarkMethodAsync(14);
    }
    ~WithAsyncMethod_DelCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCluster(::grpc::ServerContext* context, const ::masterproto::DelClusterReq* request, ::masterproto::DelClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelCluster(::grpc::ServerContext* context, ::masterproto::DelClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DelClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(14, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ListCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ListCluster() {
      ::grpc::Service::MarkMethodAsync(15);
    }
    ~WithAsyncMethod_ListCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCluster(::grpc::ServerContext* context, const ::masterproto::ListClusterReq* request, ::masterproto::ListClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestListCluster(::grpc::ServerContext* context, ::masterproto::ListClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ListClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(15, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ChangePassword() {
      ::grpc::Service::MarkMethodAsync(16);
    }
    ~WithAsyncMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::masterproto::ChPasswdReq* request, ::masterproto::ChPasswdRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangePassword(::grpc::ServerContext* context, ::masterproto::ChPasswdReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ChPasswdRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(16, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_JobStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_JobStatus() {
      ::grpc::Service::MarkMethodAsync(17);
    }
    ~WithAsyncMethod_JobStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JobStatus(::grpc::ServerContext* context, const ::masterproto::JobStatusReq* request, ::masterproto::JobStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestJobStatus(::grpc::ServerContext* context, ::masterproto::JobStatusReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::JobStatusRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(17, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResizeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ResizeCluster() {
      ::grpc::Service::MarkMethodAsync(18);
    }
    ~WithAsyncMethod_ResizeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResizeCluster(::grpc::ServerContext* context, const ::masterproto::ResizeClusterReq* request, ::masterproto::ResizeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResizeCluster(::grpc::ServerContext* context, ::masterproto::ResizeClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ResizeClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(18, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BackupCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_BackupCluster() {
      ::grpc::Service::MarkMethodAsync(19);
    }
    ~WithAsyncMethod_BackupCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackupCluster(::grpc::ServerContext* context, const ::masterproto::BackupClusterReq* request, ::masterproto::BackupClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBackupCluster(::grpc::ServerContext* context, ::masterproto::BackupClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::BackupClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(19, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryBackupList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QueryBackupList() {
      ::grpc::Service::MarkMethodAsync(20);
    }
    ~WithAsyncMethod_QueryBackupList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBackupList(::grpc::ServerContext* context, const ::masterproto::QueryBackupListReq* request, ::masterproto::QueryBackupListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryBackupList(::grpc::ServerContext* context, ::masterproto::QueryBackupListReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::QueryBackupListRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(20, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CheckRestoreTs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CheckRestoreTs() {
      ::grpc::Service::MarkMethodAsync(21);
    }
    ~WithAsyncMethod_CheckRestoreTs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRestoreTs(::grpc::ServerContext* context, const ::masterproto::CheckRestoreTsReq* request, ::masterproto::CheckRestoreTsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCheckRestoreTs(::grpc::ServerContext* context, ::masterproto::CheckRestoreTsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::CheckRestoreTsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(21, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RestoreCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RestoreCluster() {
      ::grpc::Service::MarkMethodAsync(22);
    }
    ~WithAsyncMethod_RestoreCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestoreCluster(::grpc::ServerContext* context, const ::masterproto::RestoreClusterReq* request, ::masterproto::RestoreClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRestoreCluster(::grpc::ServerContext* context, ::masterproto::RestoreClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::RestoreClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(22, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ExchangeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ExchangeCluster() {
      ::grpc::Service::MarkMethodAsync(23);
    }
    ~WithAsyncMethod_ExchangeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExchangeCluster(::grpc::ServerContext* context, const ::masterproto::ExchangeClusterReq* request, ::masterproto::ExchangeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestExchangeCluster(::grpc::ServerContext* context, ::masterproto::ExchangeClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ExchangeClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(23, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsolationCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_IsolationCluster() {
      ::grpc::Service::MarkMethodAsync(24);
    }
    ~WithAsyncMethod_IsolationCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsolationCluster(::grpc::ServerContext* context, const ::masterproto::IsolationClusterReq* request, ::masterproto::IsolationClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsolationCluster(::grpc::ServerContext* context, ::masterproto::IsolationClusterReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::IsolationClusterRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(24, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_AddReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_AddReplicateSet() {
      ::grpc::Service::MarkMethodAsync(25);
    }
    ~WithAsyncMethod_AddReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddReplicateSet(::grpc::ServerContext* context, const ::masterproto::AddRsReq* request, ::masterproto::AddRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAddReplicateSet(::grpc::ServerContext* context, ::masterproto::AddRsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::AddRsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(25, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DelReplicateSet() {
      ::grpc::Service::MarkMethodAsync(26);
    }
    ~WithAsyncMethod_DelReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelReplicateSet(::grpc::ServerContext* context, const ::masterproto::DelRsReq* request, ::masterproto::DelRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelReplicateSet(::grpc::ServerContext* context, ::masterproto::DelRsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DelRsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(26, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryOpLogStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QueryOpLogStatus() {
      ::grpc::Service::MarkMethodAsync(27);
    }
    ~WithAsyncMethod_QueryOpLogStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryOpLogStatus(::grpc::ServerContext* context, const ::masterproto::OpLogStatusReq* request, ::masterproto::OpLogStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryOpLogStatus(::grpc::ServerContext* context, ::masterproto::OpLogStatusReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::OpLogStatusRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(27, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowDb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowDb() {
      ::grpc::Service::MarkMethodAsync(28);
    }
    ~WithAsyncMethod_ShowDb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowDb(::grpc::ServerContext* context, const ::masterproto::ShowDbReq* request, ::masterproto::ShowDbRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowDb(::grpc::ServerContext* context, ::masterproto::ShowDbReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ShowDbRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(28, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ShowColls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ShowColls() {
      ::grpc::Service::MarkMethodAsync(29);
    }
    ~WithAsyncMethod_ShowColls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowColls(::grpc::ServerContext* context, const ::masterproto::ShowCollsReq* request, ::masterproto::ShowCollsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestShowColls(::grpc::ServerContext* context, ::masterproto::ShowCollsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ShowCollsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(29, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetSlowQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetSlowQuery() {
      ::grpc::Service::MarkMethodAsync(30);
    }
    ~WithAsyncMethod_GetSlowQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlowQuery(::grpc::ServerContext* context, const ::masterproto::GetSlowQueryReq* request, ::masterproto::GetSlowQueryRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetSlowQuery(::grpc::ServerContext* context, ::masterproto::GetSlowQueryReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetSlowQueryRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(30, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QrySlowInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QrySlowInfo() {
      ::grpc::Service::MarkMethodAsync(31);
    }
    ~WithAsyncMethod_QrySlowInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QrySlowInfo(::grpc::ServerContext* context, const ::masterproto::QrySlowInfoReq* request, ::masterproto::QrySlowInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQrySlowInfo(::grpc::ServerContext* context, ::masterproto::QrySlowInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::QrySlowInfoRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(31, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateUser() {
      ::grpc::Service::MarkMethodAsync(32);
    }
    ~WithAsyncMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::masterproto::CreateUserReq* request, ::masterproto::CreateUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateUser(::grpc::ServerContext* context, ::masterproto::CreateUserReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::CreateUserRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(32, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_QueryUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_QueryUserList() {
      ::grpc::Service::MarkMethodAsync(33);
    }
    ~WithAsyncMethod_QueryUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUserList(::grpc::ServerContext* context, const ::masterproto::QueryUserListReq* request, ::masterproto::QueryUserListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestQueryUserList(::grpc::ServerContext* context, ::masterproto::QueryUserListReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::QueryUserListRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(33, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DeleteUser() {
      ::grpc::Service::MarkMethodAsync(34);
    }
    ~WithAsyncMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::masterproto::DeleteUserReq* request, ::masterproto::DeleteUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeleteUser(::grpc::ServerContext* context, ::masterproto::DeleteUserReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DeleteUserRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(34, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetUserAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetUserAuth() {
      ::grpc::Service::MarkMethodAsync(35);
    }
    ~WithAsyncMethod_SetUserAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserAuth(::grpc::ServerContext* context, const ::masterproto::SetUserAuthReq* request, ::masterproto::SetUserAuthRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetUserAuth(::grpc::ServerContext* context, ::masterproto::SetUserAuthReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetUserAuthRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(35, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Ping() {
      ::grpc::Service::MarkMethodAsync(36);
    }
    ~WithAsyncMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* context, const ::cmongoproto::PingReq* request, ::cmongoproto::PingRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestPing(::grpc::ServerContext* context, ::cmongoproto::PingReq* request, ::grpc::ServerAsyncResponseWriter< ::cmongoproto::PingRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(36, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CreateTable() {
      ::grpc::Service::MarkMethodAsync(37);
    }
    ~WithAsyncMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::masterproto::CreateTableReq* request, ::masterproto::CreateTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateTable(::grpc::ServerContext* context, ::masterproto::CreateTableReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::CreateTableRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(37, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DropTable() {
      ::grpc::Service::MarkMethodAsync(38);
    }
    ~WithAsyncMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* context, const ::masterproto::DropTableReq* request, ::masterproto::DropTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropTable(::grpc::ServerContext* context, ::masterproto::DropTableReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DropTableRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(38, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DropDatabase() {
      ::grpc::Service::MarkMethodAsync(39);
    }
    ~WithAsyncMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* context, const ::masterproto::DropDatabaseReq* request, ::masterproto::DropDatabaseRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropDatabase(::grpc::ServerContext* context, ::masterproto::DropDatabaseReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DropDatabaseRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(39, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_EnsureIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_EnsureIndex() {
      ::grpc::Service::MarkMethodAsync(40);
    }
    ~WithAsyncMethod_EnsureIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureIndex(::grpc::ServerContext* context, const ::masterproto::EnsureIndexReq* request, ::masterproto::EnsureIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestEnsureIndex(::grpc::ServerContext* context, ::masterproto::EnsureIndexReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::EnsureIndexRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(40, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DropIndex() {
      ::grpc::Service::MarkMethodAsync(41);
    }
    ~WithAsyncMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* context, const ::masterproto::DropIndexReq* request, ::masterproto::DropIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropIndex(::grpc::ServerContext* context, ::masterproto::DropIndexReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DropIndexRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(41, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DropIndexName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DropIndexName() {
      ::grpc::Service::MarkMethodAsync(42);
    }
    ~WithAsyncMethod_DropIndexName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndexName(::grpc::ServerContext* context, const ::masterproto::DropIndexNameReq* request, ::masterproto::DropIndexNameRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDropIndexName(::grpc::ServerContext* context, ::masterproto::DropIndexNameReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DropIndexNameRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(42, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReportMigrateInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ReportMigrateInfo() {
      ::grpc::Service::MarkMethodAsync(43);
    }
    ~WithAsyncMethod_ReportMigrateInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReportMigrateInfo(::grpc::ServerContext* context, const ::masterproto::ReportMigrateInfoReq* request, ::masterproto::ReportMigrateInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReportMigrateInfo(::grpc::ServerContext* context, ::masterproto::ReportMigrateInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ReportMigrateInfoRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(43, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Migrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Migrate() {
      ::grpc::Service::MarkMethodAsync(44);
    }
    ~WithAsyncMethod_Migrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Migrate(::grpc::ServerContext* context, const ::masterproto::MigrateReq* request, ::masterproto::MigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestMigrate(::grpc::ServerContext* context, ::masterproto::MigrateReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::MigrateRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(44, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CleanMigrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_CleanMigrate() {
      ::grpc::Service::MarkMethodAsync(45);
    }
    ~WithAsyncMethod_CleanMigrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CleanMigrate(::grpc::ServerContext* context, const ::masterproto::CleanMigrateReq* request, ::masterproto::CleanMigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCleanMigrate(::grpc::ServerContext* context, ::masterproto::CleanMigrateReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::CleanMigrateRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(45, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetMigrateStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetMigrateStatus() {
      ::grpc::Service::MarkMethodAsync(46);
    }
    ~WithAsyncMethod_GetMigrateStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrateStatus(::grpc::ServerContext* context, const ::masterproto::GetMigrateStatusReq* request, ::masterproto::GetMigrateStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetMigrateStatus(::grpc::ServerContext* context, ::masterproto::GetMigrateStatusReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetMigrateStatusRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(46, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_IsTableInMigrating : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_IsTableInMigrating() {
      ::grpc::Service::MarkMethodAsync(47);
    }
    ~WithAsyncMethod_IsTableInMigrating() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsTableInMigrating(::grpc::ServerContext* context, const ::masterproto::IsTableInMigratingReq* request, ::masterproto::IsTableInMigratingRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestIsTableInMigrating(::grpc::ServerContext* context, ::masterproto::IsTableInMigratingReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::IsTableInMigratingRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(47, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RestoreFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RestoreFiles() {
      ::grpc::Service::MarkMethodAsync(48);
    }
    ~WithAsyncMethod_RestoreFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestoreFiles(::grpc::ServerContext* context, const ::masterproto::RestoreFilesReq* request, ::masterproto::RestoreFilesRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRestoreFiles(::grpc::ServerContext* context, ::masterproto::RestoreFilesReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::RestoreFilesRes>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(48, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GenBalanceTask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GenBalanceTask() {
      ::grpc::Service::MarkMethodAsync(49);
    }
    ~WithAsyncMethod_GenBalanceTask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenBalanceTask(::grpc::ServerContext* context, const ::masterproto::GenBalanceTaskReq* request, ::masterproto::GenBalanceTaskRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGenBalanceTask(::grpc::ServerContext* context, ::masterproto::GenBalanceTaskReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GenBalanceTaskRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(49, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Balance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_Balance() {
      ::grpc::Service::MarkMethodAsync(50);
    }
    ~WithAsyncMethod_Balance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Balance(::grpc::ServerContext* context, const ::masterproto::BalanceReq* request, ::masterproto::BalanceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBalance(::grpc::ServerContext* context, ::masterproto::BalanceReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::BalanceRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(50, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangeRouteStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ChangeRouteStat() {
      ::grpc::Service::MarkMethodAsync(51);
    }
    ~WithAsyncMethod_ChangeRouteStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeRouteStat(::grpc::ServerContext* context, const ::masterproto::ChangeRouteStateReq* request, ::masterproto::ChangeRouteStateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeRouteStat(::grpc::ServerContext* context, ::masterproto::ChangeRouteStateReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ChangeRouteStateRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(51, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ChangeRouteRs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ChangeRouteRs() {
      ::grpc::Service::MarkMethodAsync(52);
    }
    ~WithAsyncMethod_ChangeRouteRs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeRouteRs(::grpc::ServerContext* context, const ::masterproto::ChangeRouteRsReq* request, ::masterproto::ChangeRouteRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestChangeRouteRs(::grpc::ServerContext* context, ::masterproto::ChangeRouteRsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ChangeRouteRsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(52, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClusterRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetClusterRoutes() {
      ::grpc::Service::MarkMethodAsync(53);
    }
    ~WithAsyncMethod_GetClusterRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterRoutes(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesReq* request, ::masterproto::GetClusterRoutesRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterRoutes(::grpc::ServerContext* context, ::masterproto::GetClusterRoutesReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetClusterRoutesRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(53, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetIntersectMigrateJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetIntersectMigrateJobs() {
      ::grpc::Service::MarkMethodAsync(54);
    }
    ~WithAsyncMethod_GetIntersectMigrateJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIntersectMigrateJobs(::grpc::ServerContext* context, const ::masterproto::GetIntersectMigrateJobsReq* request, ::masterproto::GetIntersectMigrateJobsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetIntersectMigrateJobs(::grpc::ServerContext* context, ::masterproto::GetIntersectMigrateJobsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetIntersectMigrateJobsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(54, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodAsync(55);
    }
    ~WithAsyncMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* context, const ::masterproto::GetClusterInfoReq* request, ::masterproto::GetClusterInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterInfo(::grpc::ServerContext* context, ::masterproto::GetClusterInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetClusterInfoRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(55, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodAsync(56);
    }
    ~WithAsyncMethod_SetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::SetProxyNotifyInfoReq* request, ::masterproto::SetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetProxyNotifyInfo(::grpc::ServerContext* context, ::masterproto::SetProxyNotifyInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetProxyNotifyInfoRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(56, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodAsync(57);
    }
    ~WithAsyncMethod_GetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::GetProxyNotifyInfoReq* request, ::masterproto::GetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetProxyNotifyInfo(::grpc::ServerContext* context, ::masterproto::GetProxyNotifyInfoReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetProxyNotifyInfoRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(57, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetVersionInfo() {
      ::grpc::Service::MarkMethodAsync(58);
    }
    ~WithAsyncMethod_SetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVersionInfo(::grpc::ServerContext* context, const ::masterproto::SetVersionReq* request, ::masterproto::SetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetVersionInfo(::grpc::ServerContext* context, ::masterproto::SetVersionReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetVersionRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(58, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetVersionInfo() {
      ::grpc::Service::MarkMethodAsync(59);
    }
    ~WithAsyncMethod_GetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersionInfo(::grpc::ServerContext* context, const ::masterproto::GetVersionReq* request, ::masterproto::GetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetVersionInfo(::grpc::ServerContext* context, ::masterproto::GetVersionReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetVersionRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(59, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResizeOplog : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_ResizeOplog() {
      ::grpc::Service::MarkMethodAsync(60);
    }
    ~WithAsyncMethod_ResizeOplog() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResizeOplog(::grpc::ServerContext* context, const ::masterproto::ResizeOplogReq* request, ::masterproto::ResizeOplogRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResizeOplog(::grpc::ServerContext* context, ::masterproto::ResizeOplogReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::ResizeOplogRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(60, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RestartContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_RestartContainer() {
      ::grpc::Service::MarkMethodAsync(61);
    }
    ~WithAsyncMethod_RestartContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartContainer(::grpc::ServerContext* context, const ::masterproto::RestartContainerReq* request, ::masterproto::RestartContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRestartContainer(::grpc::ServerContext* context, ::masterproto::RestartContainerReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::RestartContainerRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(61, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetClusterMaxConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetClusterMaxConns() {
      ::grpc::Service::MarkMethodAsync(62);
    }
    ~WithAsyncMethod_SetClusterMaxConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClusterMaxConns(::grpc::ServerContext* context, const ::masterproto::SetClusterMaxConnsReq* request, ::masterproto::SetClusterMaxConnsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClusterMaxConns(::grpc::ServerContext* context, ::masterproto::SetClusterMaxConnsReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetClusterMaxConnsRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(62, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetRegionBackupConfig() {
      ::grpc::Service::MarkMethodAsync(63);
    }
    ~WithAsyncMethod_GetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetRegionBackupConfigReq* request, ::masterproto::GetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetRegionBackupConfig(::grpc::ServerContext* context, ::masterproto::GetRegionBackupConfigReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetRegionBackupConfigRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(63, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetRegionBackupConfig() {
      ::grpc::Service::MarkMethodAsync(64);
    }
    ~WithAsyncMethod_SetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetRegionBackupConfigReq* request, ::masterproto::SetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetRegionBackupConfig(::grpc::ServerContext* context, ::masterproto::SetRegionBackupConfigReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetRegionBackupConfigRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(64, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetClusterBackupConfig() {
      ::grpc::Service::MarkMethodAsync(65);
    }
    ~WithAsyncMethod_GetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetClusterBackupConfigReq* request, ::masterproto::GetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterBackupConfig(::grpc::ServerContext* context, ::masterproto::GetClusterBackupConfigReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetClusterBackupConfigRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(65, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_SetClusterBackupConfig() {
      ::grpc::Service::MarkMethodAsync(66);
    }
    ~WithAsyncMethod_SetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetClusterBackupConfigReq* request, ::masterproto::SetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetClusterBackupConfig(::grpc::ServerContext* context, ::masterproto::SetClusterBackupConfigReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::SetClusterBackupConfigRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(66, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DelClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_DelClusterBackupConfig() {
      ::grpc::Service::MarkMethodAsync(67);
    }
    ~WithAsyncMethod_DelClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::DelClusterBackupConfigReq* request, ::masterproto::DelClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDelClusterBackupConfig(::grpc::ServerContext* context, ::masterproto::DelClusterBackupConfigReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::DelClusterBackupConfigRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(67, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetClusterRoutesRaw : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithAsyncMethod_GetClusterRoutesRaw() {
      ::grpc::Service::MarkMethodAsync(68);
    }
    ~WithAsyncMethod_GetClusterRoutesRaw() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterRoutesRaw(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesRawReq* request, ::masterproto::GetClusterRoutesRawRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetClusterRoutesRaw(::grpc::ServerContext* context, ::masterproto::GetClusterRoutesRawReq* request, ::grpc::ServerAsyncResponseWriter< ::masterproto::GetClusterRoutesRawRsp>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(68, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AddResource<WithAsyncMethod_BlockResource<WithAsyncMethod_UnblockResource<WithAsyncMethod_DelResource<WithAsyncMethod_QueryResource<WithAsyncMethod_MigrateContainer<WithAsyncMethod_MigrateMachine<WithAsyncMethod_QueryMachine<WithAsyncMethod_AddContainer<WithAsyncMethod_DelContainer<WithAsyncMethod_AddContainerAsync<WithAsyncMethod_CreateCluster<WithAsyncMethod_UpgradeClusterModule<WithAsyncMethod_InfoCluster<WithAsyncMethod_DelCluster<WithAsyncMethod_ListCluster<WithAsyncMethod_ChangePassword<WithAsyncMethod_JobStatus<WithAsyncMethod_ResizeCluster<WithAsyncMethod_BackupCluster<WithAsyncMethod_QueryBackupList<WithAsyncMethod_CheckRestoreTs<WithAsyncMethod_RestoreCluster<WithAsyncMethod_ExchangeCluster<WithAsyncMethod_IsolationCluster<WithAsyncMethod_AddReplicateSet<WithAsyncMethod_DelReplicateSet<WithAsyncMethod_QueryOpLogStatus<WithAsyncMethod_ShowDb<WithAsyncMethod_ShowColls<WithAsyncMethod_GetSlowQuery<WithAsyncMethod_QrySlowInfo<WithAsyncMethod_CreateUser<WithAsyncMethod_QueryUserList<WithAsyncMethod_DeleteUser<WithAsyncMethod_SetUserAuth<WithAsyncMethod_Ping<WithAsyncMethod_CreateTable<WithAsyncMethod_DropTable<WithAsyncMethod_DropDatabase<WithAsyncMethod_EnsureIndex<WithAsyncMethod_DropIndex<WithAsyncMethod_DropIndexName<WithAsyncMethod_ReportMigrateInfo<WithAsyncMethod_Migrate<WithAsyncMethod_CleanMigrate<WithAsyncMethod_GetMigrateStatus<WithAsyncMethod_IsTableInMigrating<WithAsyncMethod_RestoreFiles<WithAsyncMethod_GenBalanceTask<WithAsyncMethod_Balance<WithAsyncMethod_ChangeRouteStat<WithAsyncMethod_ChangeRouteRs<WithAsyncMethod_GetClusterRoutes<WithAsyncMethod_GetIntersectMigrateJobs<WithAsyncMethod_GetClusterInfo<WithAsyncMethod_SetProxyNotifyInfo<WithAsyncMethod_GetProxyNotifyInfo<WithAsyncMethod_SetVersionInfo<WithAsyncMethod_GetVersionInfo<WithAsyncMethod_ResizeOplog<WithAsyncMethod_RestartContainer<WithAsyncMethod_SetClusterMaxConns<WithAsyncMethod_GetRegionBackupConfig<WithAsyncMethod_SetRegionBackupConfig<WithAsyncMethod_GetClusterBackupConfig<WithAsyncMethod_SetClusterBackupConfig<WithAsyncMethod_DelClusterBackupConfig<WithAsyncMethod_GetClusterRoutesRaw<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithGenericMethod_AddResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddResource() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AddResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddResource(::grpc::ServerContext* context, const ::masterproto::AddResourceReq* request, ::masterproto::AddResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BlockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_BlockResource() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_BlockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BlockResource(::grpc::ServerContext* context, const ::masterproto::BlockResourceReq* request, ::masterproto::BlockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UnblockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UnblockResource() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_UnblockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UnblockResource(::grpc::ServerContext* context, const ::masterproto::UnblockResourceReq* request, ::masterproto::UnblockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DelResource() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_DelResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelResource(::grpc::ServerContext* context, const ::masterproto::DelResourceReq* request, ::masterproto::DelResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QueryResource() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_QueryResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryResource(::grpc::ServerContext* context, const ::masterproto::QueryResourceReq* request, ::masterproto::QueryResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MigrateContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MigrateContainer() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_MigrateContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateContainer(::grpc::ServerContext* context, const ::masterproto::MigrateContainerReq* request, ::masterproto::MigrateContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_MigrateMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_MigrateMachine() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_MigrateMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status MigrateMachine(::grpc::ServerContext* context, const ::masterproto::MigrateMachineReq* request, ::masterproto::MigrateMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QueryMachine() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_QueryMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryMachine(::grpc::ServerContext* context, const ::masterproto::QueryMachineReq* request, ::masterproto::QueryMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddContainer() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_AddContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContainer(::grpc::ServerContext* context, const ::masterproto::AddContainerReq* request, ::masterproto::AddContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DelContainer() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_DelContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelContainer(::grpc::ServerContext* context, const ::masterproto::DelContainerReq* request, ::masterproto::DelContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddContainerAsync : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddContainerAsync() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_AddContainerAsync() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddContainerAsync(::grpc::ServerContext* context, const ::masterproto::AddContainerAsyncReq* request, ::masterproto::AddContainerAsyncRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateCluster() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::masterproto::CreateClusterReq* request, ::masterproto::CreateClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UpgradeClusterModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_UpgradeClusterModule() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_UpgradeClusterModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UpgradeClusterModule(::grpc::ServerContext* context, const ::masterproto::UpgradeClusterModuleReq* request, ::masterproto::UpgradeClusterModuleRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_InfoCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_InfoCluster() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_InfoCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status InfoCluster(::grpc::ServerContext* context, const ::masterproto::InfoClusterReq* request, ::masterproto::InfoClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DelCluster() {
      ::grpc::Service::MarkMethodGeneric(14);
    }
    ~WithGenericMethod_DelCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelCluster(::grpc::ServerContext* context, const ::masterproto::DelClusterReq* request, ::masterproto::DelClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ListCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ListCluster() {
      ::grpc::Service::MarkMethodGeneric(15);
    }
    ~WithGenericMethod_ListCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ListCluster(::grpc::ServerContext* context, const ::masterproto::ListClusterReq* request, ::masterproto::ListClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ChangePassword() {
      ::grpc::Service::MarkMethodGeneric(16);
    }
    ~WithGenericMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::masterproto::ChPasswdReq* request, ::masterproto::ChPasswdRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_JobStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_JobStatus() {
      ::grpc::Service::MarkMethodGeneric(17);
    }
    ~WithGenericMethod_JobStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status JobStatus(::grpc::ServerContext* context, const ::masterproto::JobStatusReq* request, ::masterproto::JobStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResizeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ResizeCluster() {
      ::grpc::Service::MarkMethodGeneric(18);
    }
    ~WithGenericMethod_ResizeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResizeCluster(::grpc::ServerContext* context, const ::masterproto::ResizeClusterReq* request, ::masterproto::ResizeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BackupCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_BackupCluster() {
      ::grpc::Service::MarkMethodGeneric(19);
    }
    ~WithGenericMethod_BackupCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BackupCluster(::grpc::ServerContext* context, const ::masterproto::BackupClusterReq* request, ::masterproto::BackupClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryBackupList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QueryBackupList() {
      ::grpc::Service::MarkMethodGeneric(20);
    }
    ~WithGenericMethod_QueryBackupList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryBackupList(::grpc::ServerContext* context, const ::masterproto::QueryBackupListReq* request, ::masterproto::QueryBackupListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CheckRestoreTs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CheckRestoreTs() {
      ::grpc::Service::MarkMethodGeneric(21);
    }
    ~WithGenericMethod_CheckRestoreTs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CheckRestoreTs(::grpc::ServerContext* context, const ::masterproto::CheckRestoreTsReq* request, ::masterproto::CheckRestoreTsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RestoreCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RestoreCluster() {
      ::grpc::Service::MarkMethodGeneric(22);
    }
    ~WithGenericMethod_RestoreCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestoreCluster(::grpc::ServerContext* context, const ::masterproto::RestoreClusterReq* request, ::masterproto::RestoreClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ExchangeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ExchangeCluster() {
      ::grpc::Service::MarkMethodGeneric(23);
    }
    ~WithGenericMethod_ExchangeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ExchangeCluster(::grpc::ServerContext* context, const ::masterproto::ExchangeClusterReq* request, ::masterproto::ExchangeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsolationCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_IsolationCluster() {
      ::grpc::Service::MarkMethodGeneric(24);
    }
    ~WithGenericMethod_IsolationCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsolationCluster(::grpc::ServerContext* context, const ::masterproto::IsolationClusterReq* request, ::masterproto::IsolationClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_AddReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_AddReplicateSet() {
      ::grpc::Service::MarkMethodGeneric(25);
    }
    ~WithGenericMethod_AddReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AddReplicateSet(::grpc::ServerContext* context, const ::masterproto::AddRsReq* request, ::masterproto::AddRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DelReplicateSet() {
      ::grpc::Service::MarkMethodGeneric(26);
    }
    ~WithGenericMethod_DelReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelReplicateSet(::grpc::ServerContext* context, const ::masterproto::DelRsReq* request, ::masterproto::DelRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryOpLogStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QueryOpLogStatus() {
      ::grpc::Service::MarkMethodGeneric(27);
    }
    ~WithGenericMethod_QueryOpLogStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryOpLogStatus(::grpc::ServerContext* context, const ::masterproto::OpLogStatusReq* request, ::masterproto::OpLogStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowDb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowDb() {
      ::grpc::Service::MarkMethodGeneric(28);
    }
    ~WithGenericMethod_ShowDb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowDb(::grpc::ServerContext* context, const ::masterproto::ShowDbReq* request, ::masterproto::ShowDbRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ShowColls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ShowColls() {
      ::grpc::Service::MarkMethodGeneric(29);
    }
    ~WithGenericMethod_ShowColls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ShowColls(::grpc::ServerContext* context, const ::masterproto::ShowCollsReq* request, ::masterproto::ShowCollsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetSlowQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetSlowQuery() {
      ::grpc::Service::MarkMethodGeneric(30);
    }
    ~WithGenericMethod_GetSlowQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetSlowQuery(::grpc::ServerContext* context, const ::masterproto::GetSlowQueryReq* request, ::masterproto::GetSlowQueryRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QrySlowInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QrySlowInfo() {
      ::grpc::Service::MarkMethodGeneric(31);
    }
    ~WithGenericMethod_QrySlowInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QrySlowInfo(::grpc::ServerContext* context, const ::masterproto::QrySlowInfoReq* request, ::masterproto::QrySlowInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateUser() {
      ::grpc::Service::MarkMethodGeneric(32);
    }
    ~WithGenericMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::masterproto::CreateUserReq* request, ::masterproto::CreateUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_QueryUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_QueryUserList() {
      ::grpc::Service::MarkMethodGeneric(33);
    }
    ~WithGenericMethod_QueryUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status QueryUserList(::grpc::ServerContext* context, const ::masterproto::QueryUserListReq* request, ::masterproto::QueryUserListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DeleteUser() {
      ::grpc::Service::MarkMethodGeneric(34);
    }
    ~WithGenericMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::masterproto::DeleteUserReq* request, ::masterproto::DeleteUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetUserAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetUserAuth() {
      ::grpc::Service::MarkMethodGeneric(35);
    }
    ~WithGenericMethod_SetUserAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetUserAuth(::grpc::ServerContext* context, const ::masterproto::SetUserAuthReq* request, ::masterproto::SetUserAuthRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Ping() {
      ::grpc::Service::MarkMethodGeneric(36);
    }
    ~WithGenericMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Ping(::grpc::ServerContext* context, const ::cmongoproto::PingReq* request, ::cmongoproto::PingRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CreateTable() {
      ::grpc::Service::MarkMethodGeneric(37);
    }
    ~WithGenericMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::masterproto::CreateTableReq* request, ::masterproto::CreateTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DropTable() {
      ::grpc::Service::MarkMethodGeneric(38);
    }
    ~WithGenericMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* context, const ::masterproto::DropTableReq* request, ::masterproto::DropTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DropDatabase() {
      ::grpc::Service::MarkMethodGeneric(39);
    }
    ~WithGenericMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* context, const ::masterproto::DropDatabaseReq* request, ::masterproto::DropDatabaseRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_EnsureIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_EnsureIndex() {
      ::grpc::Service::MarkMethodGeneric(40);
    }
    ~WithGenericMethod_EnsureIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status EnsureIndex(::grpc::ServerContext* context, const ::masterproto::EnsureIndexReq* request, ::masterproto::EnsureIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DropIndex() {
      ::grpc::Service::MarkMethodGeneric(41);
    }
    ~WithGenericMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* context, const ::masterproto::DropIndexReq* request, ::masterproto::DropIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DropIndexName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DropIndexName() {
      ::grpc::Service::MarkMethodGeneric(42);
    }
    ~WithGenericMethod_DropIndexName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DropIndexName(::grpc::ServerContext* context, const ::masterproto::DropIndexNameReq* request, ::masterproto::DropIndexNameRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReportMigrateInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ReportMigrateInfo() {
      ::grpc::Service::MarkMethodGeneric(43);
    }
    ~WithGenericMethod_ReportMigrateInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReportMigrateInfo(::grpc::ServerContext* context, const ::masterproto::ReportMigrateInfoReq* request, ::masterproto::ReportMigrateInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Migrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Migrate() {
      ::grpc::Service::MarkMethodGeneric(44);
    }
    ~WithGenericMethod_Migrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Migrate(::grpc::ServerContext* context, const ::masterproto::MigrateReq* request, ::masterproto::MigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CleanMigrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_CleanMigrate() {
      ::grpc::Service::MarkMethodGeneric(45);
    }
    ~WithGenericMethod_CleanMigrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CleanMigrate(::grpc::ServerContext* context, const ::masterproto::CleanMigrateReq* request, ::masterproto::CleanMigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetMigrateStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetMigrateStatus() {
      ::grpc::Service::MarkMethodGeneric(46);
    }
    ~WithGenericMethod_GetMigrateStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetMigrateStatus(::grpc::ServerContext* context, const ::masterproto::GetMigrateStatusReq* request, ::masterproto::GetMigrateStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_IsTableInMigrating : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_IsTableInMigrating() {
      ::grpc::Service::MarkMethodGeneric(47);
    }
    ~WithGenericMethod_IsTableInMigrating() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status IsTableInMigrating(::grpc::ServerContext* context, const ::masterproto::IsTableInMigratingReq* request, ::masterproto::IsTableInMigratingRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RestoreFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RestoreFiles() {
      ::grpc::Service::MarkMethodGeneric(48);
    }
    ~WithGenericMethod_RestoreFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestoreFiles(::grpc::ServerContext* context, const ::masterproto::RestoreFilesReq* request, ::masterproto::RestoreFilesRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GenBalanceTask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GenBalanceTask() {
      ::grpc::Service::MarkMethodGeneric(49);
    }
    ~WithGenericMethod_GenBalanceTask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GenBalanceTask(::grpc::ServerContext* context, const ::masterproto::GenBalanceTaskReq* request, ::masterproto::GenBalanceTaskRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Balance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_Balance() {
      ::grpc::Service::MarkMethodGeneric(50);
    }
    ~WithGenericMethod_Balance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Balance(::grpc::ServerContext* context, const ::masterproto::BalanceReq* request, ::masterproto::BalanceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangeRouteStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ChangeRouteStat() {
      ::grpc::Service::MarkMethodGeneric(51);
    }
    ~WithGenericMethod_ChangeRouteStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeRouteStat(::grpc::ServerContext* context, const ::masterproto::ChangeRouteStateReq* request, ::masterproto::ChangeRouteStateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ChangeRouteRs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ChangeRouteRs() {
      ::grpc::Service::MarkMethodGeneric(52);
    }
    ~WithGenericMethod_ChangeRouteRs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ChangeRouteRs(::grpc::ServerContext* context, const ::masterproto::ChangeRouteRsReq* request, ::masterproto::ChangeRouteRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClusterRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetClusterRoutes() {
      ::grpc::Service::MarkMethodGeneric(53);
    }
    ~WithGenericMethod_GetClusterRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterRoutes(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesReq* request, ::masterproto::GetClusterRoutesRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetIntersectMigrateJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetIntersectMigrateJobs() {
      ::grpc::Service::MarkMethodGeneric(54);
    }
    ~WithGenericMethod_GetIntersectMigrateJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetIntersectMigrateJobs(::grpc::ServerContext* context, const ::masterproto::GetIntersectMigrateJobsReq* request, ::masterproto::GetIntersectMigrateJobsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodGeneric(55);
    }
    ~WithGenericMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* context, const ::masterproto::GetClusterInfoReq* request, ::masterproto::GetClusterInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodGeneric(56);
    }
    ~WithGenericMethod_SetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::SetProxyNotifyInfoReq* request, ::masterproto::SetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodGeneric(57);
    }
    ~WithGenericMethod_GetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::GetProxyNotifyInfoReq* request, ::masterproto::GetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetVersionInfo() {
      ::grpc::Service::MarkMethodGeneric(58);
    }
    ~WithGenericMethod_SetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetVersionInfo(::grpc::ServerContext* context, const ::masterproto::SetVersionReq* request, ::masterproto::SetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetVersionInfo() {
      ::grpc::Service::MarkMethodGeneric(59);
    }
    ~WithGenericMethod_GetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetVersionInfo(::grpc::ServerContext* context, const ::masterproto::GetVersionReq* request, ::masterproto::GetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResizeOplog : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_ResizeOplog() {
      ::grpc::Service::MarkMethodGeneric(60);
    }
    ~WithGenericMethod_ResizeOplog() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResizeOplog(::grpc::ServerContext* context, const ::masterproto::ResizeOplogReq* request, ::masterproto::ResizeOplogRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RestartContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_RestartContainer() {
      ::grpc::Service::MarkMethodGeneric(61);
    }
    ~WithGenericMethod_RestartContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RestartContainer(::grpc::ServerContext* context, const ::masterproto::RestartContainerReq* request, ::masterproto::RestartContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetClusterMaxConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetClusterMaxConns() {
      ::grpc::Service::MarkMethodGeneric(62);
    }
    ~WithGenericMethod_SetClusterMaxConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClusterMaxConns(::grpc::ServerContext* context, const ::masterproto::SetClusterMaxConnsReq* request, ::masterproto::SetClusterMaxConnsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetRegionBackupConfig() {
      ::grpc::Service::MarkMethodGeneric(63);
    }
    ~WithGenericMethod_GetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetRegionBackupConfigReq* request, ::masterproto::GetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetRegionBackupConfig() {
      ::grpc::Service::MarkMethodGeneric(64);
    }
    ~WithGenericMethod_SetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetRegionBackupConfigReq* request, ::masterproto::SetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetClusterBackupConfig() {
      ::grpc::Service::MarkMethodGeneric(65);
    }
    ~WithGenericMethod_GetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetClusterBackupConfigReq* request, ::masterproto::GetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_SetClusterBackupConfig() {
      ::grpc::Service::MarkMethodGeneric(66);
    }
    ~WithGenericMethod_SetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetClusterBackupConfigReq* request, ::masterproto::SetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DelClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_DelClusterBackupConfig() {
      ::grpc::Service::MarkMethodGeneric(67);
    }
    ~WithGenericMethod_DelClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DelClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::DelClusterBackupConfigReq* request, ::masterproto::DelClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetClusterRoutesRaw : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithGenericMethod_GetClusterRoutesRaw() {
      ::grpc::Service::MarkMethodGeneric(68);
    }
    ~WithGenericMethod_GetClusterRoutesRaw() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetClusterRoutesRaw(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesRawReq* request, ::masterproto::GetClusterRoutesRawRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddResource() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::StreamedUnaryHandler< ::masterproto::AddResourceReq, ::masterproto::AddResourceRsp>(std::bind(&WithStreamedUnaryMethod_AddResource<BaseClass>::StreamedAddResource, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddResource(::grpc::ServerContext* context, const ::masterproto::AddResourceReq* request, ::masterproto::AddResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddResource(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::AddResourceReq,::masterproto::AddResourceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BlockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_BlockResource() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::StreamedUnaryHandler< ::masterproto::BlockResourceReq, ::masterproto::BlockResourceRsp>(std::bind(&WithStreamedUnaryMethod_BlockResource<BaseClass>::StreamedBlockResource, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_BlockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BlockResource(::grpc::ServerContext* context, const ::masterproto::BlockResourceReq* request, ::masterproto::BlockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBlockResource(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::BlockResourceReq,::masterproto::BlockResourceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UnblockResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UnblockResource() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::StreamedUnaryHandler< ::masterproto::UnblockResourceReq, ::masterproto::UnblockResourceRsp>(std::bind(&WithStreamedUnaryMethod_UnblockResource<BaseClass>::StreamedUnblockResource, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UnblockResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UnblockResource(::grpc::ServerContext* context, const ::masterproto::UnblockResourceReq* request, ::masterproto::UnblockResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUnblockResource(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::UnblockResourceReq,::masterproto::UnblockResourceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DelResource() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DelResourceReq, ::masterproto::DelResourceRsp>(std::bind(&WithStreamedUnaryMethod_DelResource<BaseClass>::StreamedDelResource, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DelResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelResource(::grpc::ServerContext* context, const ::masterproto::DelResourceReq* request, ::masterproto::DelResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelResource(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DelResourceReq,::masterproto::DelResourceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryResource : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QueryResource() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::StreamedUnaryHandler< ::masterproto::QueryResourceReq, ::masterproto::QueryResourceRsp>(std::bind(&WithStreamedUnaryMethod_QueryResource<BaseClass>::StreamedQueryResource, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QueryResource() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryResource(::grpc::ServerContext* context, const ::masterproto::QueryResourceReq* request, ::masterproto::QueryResourceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryResource(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::QueryResourceReq,::masterproto::QueryResourceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MigrateContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MigrateContainer() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::StreamedUnaryHandler< ::masterproto::MigrateContainerReq, ::masterproto::MigrateContainerRsp>(std::bind(&WithStreamedUnaryMethod_MigrateContainer<BaseClass>::StreamedMigrateContainer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MigrateContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MigrateContainer(::grpc::ServerContext* context, const ::masterproto::MigrateContainerReq* request, ::masterproto::MigrateContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMigrateContainer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::MigrateContainerReq,::masterproto::MigrateContainerRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_MigrateMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_MigrateMachine() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::StreamedUnaryHandler< ::masterproto::MigrateMachineReq, ::masterproto::MigrateMachineRsp>(std::bind(&WithStreamedUnaryMethod_MigrateMachine<BaseClass>::StreamedMigrateMachine, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_MigrateMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status MigrateMachine(::grpc::ServerContext* context, const ::masterproto::MigrateMachineReq* request, ::masterproto::MigrateMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMigrateMachine(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::MigrateMachineReq,::masterproto::MigrateMachineRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryMachine : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QueryMachine() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::StreamedUnaryHandler< ::masterproto::QueryMachineReq, ::masterproto::QueryMachineRsp>(std::bind(&WithStreamedUnaryMethod_QueryMachine<BaseClass>::StreamedQueryMachine, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QueryMachine() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryMachine(::grpc::ServerContext* context, const ::masterproto::QueryMachineReq* request, ::masterproto::QueryMachineRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryMachine(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::QueryMachineReq,::masterproto::QueryMachineRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddContainer() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::StreamedUnaryHandler< ::masterproto::AddContainerReq, ::masterproto::AddContainerRsp>(std::bind(&WithStreamedUnaryMethod_AddContainer<BaseClass>::StreamedAddContainer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddContainer(::grpc::ServerContext* context, const ::masterproto::AddContainerReq* request, ::masterproto::AddContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddContainer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::AddContainerReq,::masterproto::AddContainerRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DelContainer() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DelContainerReq, ::masterproto::DelContainerRsp>(std::bind(&WithStreamedUnaryMethod_DelContainer<BaseClass>::StreamedDelContainer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DelContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelContainer(::grpc::ServerContext* context, const ::masterproto::DelContainerReq* request, ::masterproto::DelContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelContainer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DelContainerReq,::masterproto::DelContainerRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddContainerAsync : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddContainerAsync() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::StreamedUnaryHandler< ::masterproto::AddContainerAsyncReq, ::masterproto::AddContainerAsyncRsp>(std::bind(&WithStreamedUnaryMethod_AddContainerAsync<BaseClass>::StreamedAddContainerAsync, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddContainerAsync() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddContainerAsync(::grpc::ServerContext* context, const ::masterproto::AddContainerAsyncReq* request, ::masterproto::AddContainerAsyncRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddContainerAsync(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::AddContainerAsyncReq,::masterproto::AddContainerAsyncRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateCluster() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::StreamedUnaryHandler< ::masterproto::CreateClusterReq, ::masterproto::CreateClusterRsp>(std::bind(&WithStreamedUnaryMethod_CreateCluster<BaseClass>::StreamedCreateCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateCluster(::grpc::ServerContext* context, const ::masterproto::CreateClusterReq* request, ::masterproto::CreateClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::CreateClusterReq,::masterproto::CreateClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UpgradeClusterModule : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_UpgradeClusterModule() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::StreamedUnaryHandler< ::masterproto::UpgradeClusterModuleReq, ::masterproto::UpgradeClusterModuleRsp>(std::bind(&WithStreamedUnaryMethod_UpgradeClusterModule<BaseClass>::StreamedUpgradeClusterModule, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_UpgradeClusterModule() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UpgradeClusterModule(::grpc::ServerContext* context, const ::masterproto::UpgradeClusterModuleReq* request, ::masterproto::UpgradeClusterModuleRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUpgradeClusterModule(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::UpgradeClusterModuleReq,::masterproto::UpgradeClusterModuleRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_InfoCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_InfoCluster() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::StreamedUnaryHandler< ::masterproto::InfoClusterReq, ::masterproto::InfoClusterRsp>(std::bind(&WithStreamedUnaryMethod_InfoCluster<BaseClass>::StreamedInfoCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_InfoCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status InfoCluster(::grpc::ServerContext* context, const ::masterproto::InfoClusterReq* request, ::masterproto::InfoClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedInfoCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::InfoClusterReq,::masterproto::InfoClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DelCluster() {
      ::grpc::Service::MarkMethodStreamed(14,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DelClusterReq, ::masterproto::DelClusterRsp>(std::bind(&WithStreamedUnaryMethod_DelCluster<BaseClass>::StreamedDelCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DelCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelCluster(::grpc::ServerContext* context, const ::masterproto::DelClusterReq* request, ::masterproto::DelClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DelClusterReq,::masterproto::DelClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ListCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ListCluster() {
      ::grpc::Service::MarkMethodStreamed(15,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ListClusterReq, ::masterproto::ListClusterRsp>(std::bind(&WithStreamedUnaryMethod_ListCluster<BaseClass>::StreamedListCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ListCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ListCluster(::grpc::ServerContext* context, const ::masterproto::ListClusterReq* request, ::masterproto::ListClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedListCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ListClusterReq,::masterproto::ListClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangePassword : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ChangePassword() {
      ::grpc::Service::MarkMethodStreamed(16,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ChPasswdReq, ::masterproto::ChPasswdRsp>(std::bind(&WithStreamedUnaryMethod_ChangePassword<BaseClass>::StreamedChangePassword, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ChangePassword() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangePassword(::grpc::ServerContext* context, const ::masterproto::ChPasswdReq* request, ::masterproto::ChPasswdRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangePassword(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ChPasswdReq,::masterproto::ChPasswdRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_JobStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_JobStatus() {
      ::grpc::Service::MarkMethodStreamed(17,
        new ::grpc::StreamedUnaryHandler< ::masterproto::JobStatusReq, ::masterproto::JobStatusRsp>(std::bind(&WithStreamedUnaryMethod_JobStatus<BaseClass>::StreamedJobStatus, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_JobStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status JobStatus(::grpc::ServerContext* context, const ::masterproto::JobStatusReq* request, ::masterproto::JobStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedJobStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::JobStatusReq,::masterproto::JobStatusRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResizeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ResizeCluster() {
      ::grpc::Service::MarkMethodStreamed(18,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ResizeClusterReq, ::masterproto::ResizeClusterRsp>(std::bind(&WithStreamedUnaryMethod_ResizeCluster<BaseClass>::StreamedResizeCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ResizeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResizeCluster(::grpc::ServerContext* context, const ::masterproto::ResizeClusterReq* request, ::masterproto::ResizeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResizeCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ResizeClusterReq,::masterproto::ResizeClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_BackupCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_BackupCluster() {
      ::grpc::Service::MarkMethodStreamed(19,
        new ::grpc::StreamedUnaryHandler< ::masterproto::BackupClusterReq, ::masterproto::BackupClusterRsp>(std::bind(&WithStreamedUnaryMethod_BackupCluster<BaseClass>::StreamedBackupCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_BackupCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BackupCluster(::grpc::ServerContext* context, const ::masterproto::BackupClusterReq* request, ::masterproto::BackupClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBackupCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::BackupClusterReq,::masterproto::BackupClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryBackupList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QueryBackupList() {
      ::grpc::Service::MarkMethodStreamed(20,
        new ::grpc::StreamedUnaryHandler< ::masterproto::QueryBackupListReq, ::masterproto::QueryBackupListRsp>(std::bind(&WithStreamedUnaryMethod_QueryBackupList<BaseClass>::StreamedQueryBackupList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QueryBackupList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryBackupList(::grpc::ServerContext* context, const ::masterproto::QueryBackupListReq* request, ::masterproto::QueryBackupListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryBackupList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::QueryBackupListReq,::masterproto::QueryBackupListRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CheckRestoreTs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CheckRestoreTs() {
      ::grpc::Service::MarkMethodStreamed(21,
        new ::grpc::StreamedUnaryHandler< ::masterproto::CheckRestoreTsReq, ::masterproto::CheckRestoreTsRsp>(std::bind(&WithStreamedUnaryMethod_CheckRestoreTs<BaseClass>::StreamedCheckRestoreTs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CheckRestoreTs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CheckRestoreTs(::grpc::ServerContext* context, const ::masterproto::CheckRestoreTsReq* request, ::masterproto::CheckRestoreTsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCheckRestoreTs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::CheckRestoreTsReq,::masterproto::CheckRestoreTsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RestoreCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RestoreCluster() {
      ::grpc::Service::MarkMethodStreamed(22,
        new ::grpc::StreamedUnaryHandler< ::masterproto::RestoreClusterReq, ::masterproto::RestoreClusterRsp>(std::bind(&WithStreamedUnaryMethod_RestoreCluster<BaseClass>::StreamedRestoreCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RestoreCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RestoreCluster(::grpc::ServerContext* context, const ::masterproto::RestoreClusterReq* request, ::masterproto::RestoreClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRestoreCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::RestoreClusterReq,::masterproto::RestoreClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ExchangeCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ExchangeCluster() {
      ::grpc::Service::MarkMethodStreamed(23,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ExchangeClusterReq, ::masterproto::ExchangeClusterRsp>(std::bind(&WithStreamedUnaryMethod_ExchangeCluster<BaseClass>::StreamedExchangeCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ExchangeCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ExchangeCluster(::grpc::ServerContext* context, const ::masterproto::ExchangeClusterReq* request, ::masterproto::ExchangeClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedExchangeCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ExchangeClusterReq,::masterproto::ExchangeClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsolationCluster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_IsolationCluster() {
      ::grpc::Service::MarkMethodStreamed(24,
        new ::grpc::StreamedUnaryHandler< ::masterproto::IsolationClusterReq, ::masterproto::IsolationClusterRsp>(std::bind(&WithStreamedUnaryMethod_IsolationCluster<BaseClass>::StreamedIsolationCluster, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_IsolationCluster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsolationCluster(::grpc::ServerContext* context, const ::masterproto::IsolationClusterReq* request, ::masterproto::IsolationClusterRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsolationCluster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::IsolationClusterReq,::masterproto::IsolationClusterRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AddReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_AddReplicateSet() {
      ::grpc::Service::MarkMethodStreamed(25,
        new ::grpc::StreamedUnaryHandler< ::masterproto::AddRsReq, ::masterproto::AddRsRsp>(std::bind(&WithStreamedUnaryMethod_AddReplicateSet<BaseClass>::StreamedAddReplicateSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_AddReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AddReplicateSet(::grpc::ServerContext* context, const ::masterproto::AddRsReq* request, ::masterproto::AddRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAddReplicateSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::AddRsReq,::masterproto::AddRsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelReplicateSet : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DelReplicateSet() {
      ::grpc::Service::MarkMethodStreamed(26,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DelRsReq, ::masterproto::DelRsRsp>(std::bind(&WithStreamedUnaryMethod_DelReplicateSet<BaseClass>::StreamedDelReplicateSet, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DelReplicateSet() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelReplicateSet(::grpc::ServerContext* context, const ::masterproto::DelRsReq* request, ::masterproto::DelRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelReplicateSet(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DelRsReq,::masterproto::DelRsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryOpLogStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QueryOpLogStatus() {
      ::grpc::Service::MarkMethodStreamed(27,
        new ::grpc::StreamedUnaryHandler< ::masterproto::OpLogStatusReq, ::masterproto::OpLogStatusRsp>(std::bind(&WithStreamedUnaryMethod_QueryOpLogStatus<BaseClass>::StreamedQueryOpLogStatus, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QueryOpLogStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryOpLogStatus(::grpc::ServerContext* context, const ::masterproto::OpLogStatusReq* request, ::masterproto::OpLogStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryOpLogStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::OpLogStatusReq,::masterproto::OpLogStatusRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowDb : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowDb() {
      ::grpc::Service::MarkMethodStreamed(28,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ShowDbReq, ::masterproto::ShowDbRsp>(std::bind(&WithStreamedUnaryMethod_ShowDb<BaseClass>::StreamedShowDb, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowDb() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowDb(::grpc::ServerContext* context, const ::masterproto::ShowDbReq* request, ::masterproto::ShowDbRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowDb(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ShowDbReq,::masterproto::ShowDbRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ShowColls : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ShowColls() {
      ::grpc::Service::MarkMethodStreamed(29,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ShowCollsReq, ::masterproto::ShowCollsRsp>(std::bind(&WithStreamedUnaryMethod_ShowColls<BaseClass>::StreamedShowColls, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ShowColls() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ShowColls(::grpc::ServerContext* context, const ::masterproto::ShowCollsReq* request, ::masterproto::ShowCollsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedShowColls(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ShowCollsReq,::masterproto::ShowCollsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetSlowQuery : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetSlowQuery() {
      ::grpc::Service::MarkMethodStreamed(30,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetSlowQueryReq, ::masterproto::GetSlowQueryRsp>(std::bind(&WithStreamedUnaryMethod_GetSlowQuery<BaseClass>::StreamedGetSlowQuery, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetSlowQuery() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetSlowQuery(::grpc::ServerContext* context, const ::masterproto::GetSlowQueryReq* request, ::masterproto::GetSlowQueryRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetSlowQuery(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetSlowQueryReq,::masterproto::GetSlowQueryRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QrySlowInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QrySlowInfo() {
      ::grpc::Service::MarkMethodStreamed(31,
        new ::grpc::StreamedUnaryHandler< ::masterproto::QrySlowInfoReq, ::masterproto::QrySlowInfoRsp>(std::bind(&WithStreamedUnaryMethod_QrySlowInfo<BaseClass>::StreamedQrySlowInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QrySlowInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QrySlowInfo(::grpc::ServerContext* context, const ::masterproto::QrySlowInfoReq* request, ::masterproto::QrySlowInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQrySlowInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::QrySlowInfoReq,::masterproto::QrySlowInfoRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateUser() {
      ::grpc::Service::MarkMethodStreamed(32,
        new ::grpc::StreamedUnaryHandler< ::masterproto::CreateUserReq, ::masterproto::CreateUserRsp>(std::bind(&WithStreamedUnaryMethod_CreateUser<BaseClass>::StreamedCreateUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateUser(::grpc::ServerContext* context, const ::masterproto::CreateUserReq* request, ::masterproto::CreateUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::CreateUserReq,::masterproto::CreateUserRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_QueryUserList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_QueryUserList() {
      ::grpc::Service::MarkMethodStreamed(33,
        new ::grpc::StreamedUnaryHandler< ::masterproto::QueryUserListReq, ::masterproto::QueryUserListRsp>(std::bind(&WithStreamedUnaryMethod_QueryUserList<BaseClass>::StreamedQueryUserList, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_QueryUserList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status QueryUserList(::grpc::ServerContext* context, const ::masterproto::QueryUserListReq* request, ::masterproto::QueryUserListRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedQueryUserList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::QueryUserListReq,::masterproto::QueryUserListRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeleteUser : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DeleteUser() {
      ::grpc::Service::MarkMethodStreamed(34,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DeleteUserReq, ::masterproto::DeleteUserRsp>(std::bind(&WithStreamedUnaryMethod_DeleteUser<BaseClass>::StreamedDeleteUser, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DeleteUser() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeleteUser(::grpc::ServerContext* context, const ::masterproto::DeleteUserReq* request, ::masterproto::DeleteUserRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeleteUser(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DeleteUserReq,::masterproto::DeleteUserRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetUserAuth : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetUserAuth() {
      ::grpc::Service::MarkMethodStreamed(35,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetUserAuthReq, ::masterproto::SetUserAuthRsp>(std::bind(&WithStreamedUnaryMethod_SetUserAuth<BaseClass>::StreamedSetUserAuth, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetUserAuth() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetUserAuth(::grpc::ServerContext* context, const ::masterproto::SetUserAuthReq* request, ::masterproto::SetUserAuthRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetUserAuth(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetUserAuthReq,::masterproto::SetUserAuthRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Ping : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Ping() {
      ::grpc::Service::MarkMethodStreamed(36,
        new ::grpc::StreamedUnaryHandler< ::cmongoproto::PingReq, ::cmongoproto::PingRes>(std::bind(&WithStreamedUnaryMethod_Ping<BaseClass>::StreamedPing, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Ping() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Ping(::grpc::ServerContext* context, const ::cmongoproto::PingReq* request, ::cmongoproto::PingRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedPing(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::cmongoproto::PingReq,::cmongoproto::PingRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CreateTable() {
      ::grpc::Service::MarkMethodStreamed(37,
        new ::grpc::StreamedUnaryHandler< ::masterproto::CreateTableReq, ::masterproto::CreateTableRsp>(std::bind(&WithStreamedUnaryMethod_CreateTable<BaseClass>::StreamedCreateTable, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CreateTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateTable(::grpc::ServerContext* context, const ::masterproto::CreateTableReq* request, ::masterproto::CreateTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::CreateTableReq,::masterproto::CreateTableRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropTable : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DropTable() {
      ::grpc::Service::MarkMethodStreamed(38,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DropTableReq, ::masterproto::DropTableRsp>(std::bind(&WithStreamedUnaryMethod_DropTable<BaseClass>::StreamedDropTable, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DropTable() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropTable(::grpc::ServerContext* context, const ::masterproto::DropTableReq* request, ::masterproto::DropTableRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropTable(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DropTableReq,::masterproto::DropTableRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropDatabase : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DropDatabase() {
      ::grpc::Service::MarkMethodStreamed(39,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DropDatabaseReq, ::masterproto::DropDatabaseRsp>(std::bind(&WithStreamedUnaryMethod_DropDatabase<BaseClass>::StreamedDropDatabase, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DropDatabase() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropDatabase(::grpc::ServerContext* context, const ::masterproto::DropDatabaseReq* request, ::masterproto::DropDatabaseRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropDatabase(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DropDatabaseReq,::masterproto::DropDatabaseRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_EnsureIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_EnsureIndex() {
      ::grpc::Service::MarkMethodStreamed(40,
        new ::grpc::StreamedUnaryHandler< ::masterproto::EnsureIndexReq, ::masterproto::EnsureIndexRsp>(std::bind(&WithStreamedUnaryMethod_EnsureIndex<BaseClass>::StreamedEnsureIndex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_EnsureIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status EnsureIndex(::grpc::ServerContext* context, const ::masterproto::EnsureIndexReq* request, ::masterproto::EnsureIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedEnsureIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::EnsureIndexReq,::masterproto::EnsureIndexRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropIndex : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DropIndex() {
      ::grpc::Service::MarkMethodStreamed(41,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DropIndexReq, ::masterproto::DropIndexRsp>(std::bind(&WithStreamedUnaryMethod_DropIndex<BaseClass>::StreamedDropIndex, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DropIndex() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropIndex(::grpc::ServerContext* context, const ::masterproto::DropIndexReq* request, ::masterproto::DropIndexRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropIndex(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DropIndexReq,::masterproto::DropIndexRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DropIndexName : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DropIndexName() {
      ::grpc::Service::MarkMethodStreamed(42,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DropIndexNameReq, ::masterproto::DropIndexNameRsp>(std::bind(&WithStreamedUnaryMethod_DropIndexName<BaseClass>::StreamedDropIndexName, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DropIndexName() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DropIndexName(::grpc::ServerContext* context, const ::masterproto::DropIndexNameReq* request, ::masterproto::DropIndexNameRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDropIndexName(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DropIndexNameReq,::masterproto::DropIndexNameRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReportMigrateInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ReportMigrateInfo() {
      ::grpc::Service::MarkMethodStreamed(43,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ReportMigrateInfoReq, ::masterproto::ReportMigrateInfoRsp>(std::bind(&WithStreamedUnaryMethod_ReportMigrateInfo<BaseClass>::StreamedReportMigrateInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ReportMigrateInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReportMigrateInfo(::grpc::ServerContext* context, const ::masterproto::ReportMigrateInfoReq* request, ::masterproto::ReportMigrateInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReportMigrateInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ReportMigrateInfoReq,::masterproto::ReportMigrateInfoRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Migrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Migrate() {
      ::grpc::Service::MarkMethodStreamed(44,
        new ::grpc::StreamedUnaryHandler< ::masterproto::MigrateReq, ::masterproto::MigrateRsp>(std::bind(&WithStreamedUnaryMethod_Migrate<BaseClass>::StreamedMigrate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Migrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Migrate(::grpc::ServerContext* context, const ::masterproto::MigrateReq* request, ::masterproto::MigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedMigrate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::MigrateReq,::masterproto::MigrateRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CleanMigrate : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_CleanMigrate() {
      ::grpc::Service::MarkMethodStreamed(45,
        new ::grpc::StreamedUnaryHandler< ::masterproto::CleanMigrateReq, ::masterproto::CleanMigrateRsp>(std::bind(&WithStreamedUnaryMethod_CleanMigrate<BaseClass>::StreamedCleanMigrate, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_CleanMigrate() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CleanMigrate(::grpc::ServerContext* context, const ::masterproto::CleanMigrateReq* request, ::masterproto::CleanMigrateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCleanMigrate(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::CleanMigrateReq,::masterproto::CleanMigrateRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetMigrateStatus : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetMigrateStatus() {
      ::grpc::Service::MarkMethodStreamed(46,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetMigrateStatusReq, ::masterproto::GetMigrateStatusRsp>(std::bind(&WithStreamedUnaryMethod_GetMigrateStatus<BaseClass>::StreamedGetMigrateStatus, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetMigrateStatus() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetMigrateStatus(::grpc::ServerContext* context, const ::masterproto::GetMigrateStatusReq* request, ::masterproto::GetMigrateStatusRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetMigrateStatus(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetMigrateStatusReq,::masterproto::GetMigrateStatusRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_IsTableInMigrating : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_IsTableInMigrating() {
      ::grpc::Service::MarkMethodStreamed(47,
        new ::grpc::StreamedUnaryHandler< ::masterproto::IsTableInMigratingReq, ::masterproto::IsTableInMigratingRsp>(std::bind(&WithStreamedUnaryMethod_IsTableInMigrating<BaseClass>::StreamedIsTableInMigrating, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_IsTableInMigrating() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status IsTableInMigrating(::grpc::ServerContext* context, const ::masterproto::IsTableInMigratingReq* request, ::masterproto::IsTableInMigratingRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedIsTableInMigrating(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::IsTableInMigratingReq,::masterproto::IsTableInMigratingRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RestoreFiles : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RestoreFiles() {
      ::grpc::Service::MarkMethodStreamed(48,
        new ::grpc::StreamedUnaryHandler< ::masterproto::RestoreFilesReq, ::masterproto::RestoreFilesRes>(std::bind(&WithStreamedUnaryMethod_RestoreFiles<BaseClass>::StreamedRestoreFiles, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RestoreFiles() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RestoreFiles(::grpc::ServerContext* context, const ::masterproto::RestoreFilesReq* request, ::masterproto::RestoreFilesRes* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRestoreFiles(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::RestoreFilesReq,::masterproto::RestoreFilesRes>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GenBalanceTask : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GenBalanceTask() {
      ::grpc::Service::MarkMethodStreamed(49,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GenBalanceTaskReq, ::masterproto::GenBalanceTaskRsp>(std::bind(&WithStreamedUnaryMethod_GenBalanceTask<BaseClass>::StreamedGenBalanceTask, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GenBalanceTask() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GenBalanceTask(::grpc::ServerContext* context, const ::masterproto::GenBalanceTaskReq* request, ::masterproto::GenBalanceTaskRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGenBalanceTask(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GenBalanceTaskReq,::masterproto::GenBalanceTaskRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Balance : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_Balance() {
      ::grpc::Service::MarkMethodStreamed(50,
        new ::grpc::StreamedUnaryHandler< ::masterproto::BalanceReq, ::masterproto::BalanceRsp>(std::bind(&WithStreamedUnaryMethod_Balance<BaseClass>::StreamedBalance, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_Balance() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Balance(::grpc::ServerContext* context, const ::masterproto::BalanceReq* request, ::masterproto::BalanceRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedBalance(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::BalanceReq,::masterproto::BalanceRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangeRouteStat : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ChangeRouteStat() {
      ::grpc::Service::MarkMethodStreamed(51,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ChangeRouteStateReq, ::masterproto::ChangeRouteStateRsp>(std::bind(&WithStreamedUnaryMethod_ChangeRouteStat<BaseClass>::StreamedChangeRouteStat, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ChangeRouteStat() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangeRouteStat(::grpc::ServerContext* context, const ::masterproto::ChangeRouteStateReq* request, ::masterproto::ChangeRouteStateRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangeRouteStat(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ChangeRouteStateReq,::masterproto::ChangeRouteStateRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ChangeRouteRs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ChangeRouteRs() {
      ::grpc::Service::MarkMethodStreamed(52,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ChangeRouteRsReq, ::masterproto::ChangeRouteRsRsp>(std::bind(&WithStreamedUnaryMethod_ChangeRouteRs<BaseClass>::StreamedChangeRouteRs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ChangeRouteRs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ChangeRouteRs(::grpc::ServerContext* context, const ::masterproto::ChangeRouteRsReq* request, ::masterproto::ChangeRouteRsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedChangeRouteRs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ChangeRouteRsReq,::masterproto::ChangeRouteRsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClusterRoutes : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetClusterRoutes() {
      ::grpc::Service::MarkMethodStreamed(53,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetClusterRoutesReq, ::masterproto::GetClusterRoutesRsp>(std::bind(&WithStreamedUnaryMethod_GetClusterRoutes<BaseClass>::StreamedGetClusterRoutes, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetClusterRoutes() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClusterRoutes(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesReq* request, ::masterproto::GetClusterRoutesRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClusterRoutes(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetClusterRoutesReq,::masterproto::GetClusterRoutesRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetIntersectMigrateJobs : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetIntersectMigrateJobs() {
      ::grpc::Service::MarkMethodStreamed(54,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetIntersectMigrateJobsReq, ::masterproto::GetIntersectMigrateJobsRsp>(std::bind(&WithStreamedUnaryMethod_GetIntersectMigrateJobs<BaseClass>::StreamedGetIntersectMigrateJobs, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetIntersectMigrateJobs() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetIntersectMigrateJobs(::grpc::ServerContext* context, const ::masterproto::GetIntersectMigrateJobsReq* request, ::masterproto::GetIntersectMigrateJobsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetIntersectMigrateJobs(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetIntersectMigrateJobsReq,::masterproto::GetIntersectMigrateJobsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClusterInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetClusterInfo() {
      ::grpc::Service::MarkMethodStreamed(55,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetClusterInfoReq, ::masterproto::GetClusterInfoRsp>(std::bind(&WithStreamedUnaryMethod_GetClusterInfo<BaseClass>::StreamedGetClusterInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetClusterInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClusterInfo(::grpc::ServerContext* context, const ::masterproto::GetClusterInfoReq* request, ::masterproto::GetClusterInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClusterInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetClusterInfoReq,::masterproto::GetClusterInfoRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodStreamed(56,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetProxyNotifyInfoReq, ::masterproto::SetProxyNotifyInfoRsp>(std::bind(&WithStreamedUnaryMethod_SetProxyNotifyInfo<BaseClass>::StreamedSetProxyNotifyInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::SetProxyNotifyInfoReq* request, ::masterproto::SetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetProxyNotifyInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetProxyNotifyInfoReq,::masterproto::SetProxyNotifyInfoRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetProxyNotifyInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetProxyNotifyInfo() {
      ::grpc::Service::MarkMethodStreamed(57,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetProxyNotifyInfoReq, ::masterproto::GetProxyNotifyInfoRsp>(std::bind(&WithStreamedUnaryMethod_GetProxyNotifyInfo<BaseClass>::StreamedGetProxyNotifyInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetProxyNotifyInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetProxyNotifyInfo(::grpc::ServerContext* context, const ::masterproto::GetProxyNotifyInfoReq* request, ::masterproto::GetProxyNotifyInfoRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetProxyNotifyInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetProxyNotifyInfoReq,::masterproto::GetProxyNotifyInfoRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetVersionInfo() {
      ::grpc::Service::MarkMethodStreamed(58,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetVersionReq, ::masterproto::SetVersionRsp>(std::bind(&WithStreamedUnaryMethod_SetVersionInfo<BaseClass>::StreamedSetVersionInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetVersionInfo(::grpc::ServerContext* context, const ::masterproto::SetVersionReq* request, ::masterproto::SetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetVersionInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetVersionReq,::masterproto::SetVersionRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetVersionInfo : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetVersionInfo() {
      ::grpc::Service::MarkMethodStreamed(59,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetVersionReq, ::masterproto::GetVersionRsp>(std::bind(&WithStreamedUnaryMethod_GetVersionInfo<BaseClass>::StreamedGetVersionInfo, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetVersionInfo() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetVersionInfo(::grpc::ServerContext* context, const ::masterproto::GetVersionReq* request, ::masterproto::GetVersionRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetVersionInfo(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetVersionReq,::masterproto::GetVersionRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResizeOplog : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_ResizeOplog() {
      ::grpc::Service::MarkMethodStreamed(60,
        new ::grpc::StreamedUnaryHandler< ::masterproto::ResizeOplogReq, ::masterproto::ResizeOplogRsp>(std::bind(&WithStreamedUnaryMethod_ResizeOplog<BaseClass>::StreamedResizeOplog, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_ResizeOplog() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResizeOplog(::grpc::ServerContext* context, const ::masterproto::ResizeOplogReq* request, ::masterproto::ResizeOplogRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResizeOplog(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::ResizeOplogReq,::masterproto::ResizeOplogRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RestartContainer : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_RestartContainer() {
      ::grpc::Service::MarkMethodStreamed(61,
        new ::grpc::StreamedUnaryHandler< ::masterproto::RestartContainerReq, ::masterproto::RestartContainerRsp>(std::bind(&WithStreamedUnaryMethod_RestartContainer<BaseClass>::StreamedRestartContainer, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_RestartContainer() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RestartContainer(::grpc::ServerContext* context, const ::masterproto::RestartContainerReq* request, ::masterproto::RestartContainerRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRestartContainer(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::RestartContainerReq,::masterproto::RestartContainerRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetClusterMaxConns : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetClusterMaxConns() {
      ::grpc::Service::MarkMethodStreamed(62,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetClusterMaxConnsReq, ::masterproto::SetClusterMaxConnsRsp>(std::bind(&WithStreamedUnaryMethod_SetClusterMaxConns<BaseClass>::StreamedSetClusterMaxConns, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetClusterMaxConns() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetClusterMaxConns(::grpc::ServerContext* context, const ::masterproto::SetClusterMaxConnsReq* request, ::masterproto::SetClusterMaxConnsRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetClusterMaxConns(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetClusterMaxConnsReq,::masterproto::SetClusterMaxConnsRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetRegionBackupConfig() {
      ::grpc::Service::MarkMethodStreamed(63,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetRegionBackupConfigReq, ::masterproto::GetRegionBackupConfigRsp>(std::bind(&WithStreamedUnaryMethod_GetRegionBackupConfig<BaseClass>::StreamedGetRegionBackupConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetRegionBackupConfigReq* request, ::masterproto::GetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetRegionBackupConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetRegionBackupConfigReq,::masterproto::GetRegionBackupConfigRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetRegionBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetRegionBackupConfig() {
      ::grpc::Service::MarkMethodStreamed(64,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetRegionBackupConfigReq, ::masterproto::SetRegionBackupConfigRsp>(std::bind(&WithStreamedUnaryMethod_SetRegionBackupConfig<BaseClass>::StreamedSetRegionBackupConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetRegionBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetRegionBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetRegionBackupConfigReq* request, ::masterproto::SetRegionBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetRegionBackupConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetRegionBackupConfigReq,::masterproto::SetRegionBackupConfigRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetClusterBackupConfig() {
      ::grpc::Service::MarkMethodStreamed(65,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetClusterBackupConfigReq, ::masterproto::GetClusterBackupConfigRsp>(std::bind(&WithStreamedUnaryMethod_GetClusterBackupConfig<BaseClass>::StreamedGetClusterBackupConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::GetClusterBackupConfigReq* request, ::masterproto::GetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClusterBackupConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetClusterBackupConfigReq,::masterproto::GetClusterBackupConfigRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_SetClusterBackupConfig() {
      ::grpc::Service::MarkMethodStreamed(66,
        new ::grpc::StreamedUnaryHandler< ::masterproto::SetClusterBackupConfigReq, ::masterproto::SetClusterBackupConfigRsp>(std::bind(&WithStreamedUnaryMethod_SetClusterBackupConfig<BaseClass>::StreamedSetClusterBackupConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_SetClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::SetClusterBackupConfigReq* request, ::masterproto::SetClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetClusterBackupConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::SetClusterBackupConfigReq,::masterproto::SetClusterBackupConfigRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DelClusterBackupConfig : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_DelClusterBackupConfig() {
      ::grpc::Service::MarkMethodStreamed(67,
        new ::grpc::StreamedUnaryHandler< ::masterproto::DelClusterBackupConfigReq, ::masterproto::DelClusterBackupConfigRsp>(std::bind(&WithStreamedUnaryMethod_DelClusterBackupConfig<BaseClass>::StreamedDelClusterBackupConfig, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_DelClusterBackupConfig() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DelClusterBackupConfig(::grpc::ServerContext* context, const ::masterproto::DelClusterBackupConfigReq* request, ::masterproto::DelClusterBackupConfigRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDelClusterBackupConfig(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::DelClusterBackupConfigReq,::masterproto::DelClusterBackupConfigRsp>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetClusterRoutesRaw : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service *service) {}
   public:
    WithStreamedUnaryMethod_GetClusterRoutesRaw() {
      ::grpc::Service::MarkMethodStreamed(68,
        new ::grpc::StreamedUnaryHandler< ::masterproto::GetClusterRoutesRawReq, ::masterproto::GetClusterRoutesRawRsp>(std::bind(&WithStreamedUnaryMethod_GetClusterRoutesRaw<BaseClass>::StreamedGetClusterRoutesRaw, this, std::placeholders::_1, std::placeholders::_2)));
    }
    ~WithStreamedUnaryMethod_GetClusterRoutesRaw() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetClusterRoutesRaw(::grpc::ServerContext* context, const ::masterproto::GetClusterRoutesRawReq* request, ::masterproto::GetClusterRoutesRawRsp* response) final override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetClusterRoutesRaw(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::masterproto::GetClusterRoutesRawReq,::masterproto::GetClusterRoutesRawRsp>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AddResource<WithStreamedUnaryMethod_BlockResource<WithStreamedUnaryMethod_UnblockResource<WithStreamedUnaryMethod_DelResource<WithStreamedUnaryMethod_QueryResource<WithStreamedUnaryMethod_MigrateContainer<WithStreamedUnaryMethod_MigrateMachine<WithStreamedUnaryMethod_QueryMachine<WithStreamedUnaryMethod_AddContainer<WithStreamedUnaryMethod_DelContainer<WithStreamedUnaryMethod_AddContainerAsync<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_UpgradeClusterModule<WithStreamedUnaryMethod_InfoCluster<WithStreamedUnaryMethod_DelCluster<WithStreamedUnaryMethod_ListCluster<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_JobStatus<WithStreamedUnaryMethod_ResizeCluster<WithStreamedUnaryMethod_BackupCluster<WithStreamedUnaryMethod_QueryBackupList<WithStreamedUnaryMethod_CheckRestoreTs<WithStreamedUnaryMethod_RestoreCluster<WithStreamedUnaryMethod_ExchangeCluster<WithStreamedUnaryMethod_IsolationCluster<WithStreamedUnaryMethod_AddReplicateSet<WithStreamedUnaryMethod_DelReplicateSet<WithStreamedUnaryMethod_QueryOpLogStatus<WithStreamedUnaryMethod_ShowDb<WithStreamedUnaryMethod_ShowColls<WithStreamedUnaryMethod_GetSlowQuery<WithStreamedUnaryMethod_QrySlowInfo<WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_QueryUserList<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_SetUserAuth<WithStreamedUnaryMethod_Ping<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_DropTable<WithStreamedUnaryMethod_DropDatabase<WithStreamedUnaryMethod_EnsureIndex<WithStreamedUnaryMethod_DropIndex<WithStreamedUnaryMethod_DropIndexName<WithStreamedUnaryMethod_ReportMigrateInfo<WithStreamedUnaryMethod_Migrate<WithStreamedUnaryMethod_CleanMigrate<WithStreamedUnaryMethod_GetMigrateStatus<WithStreamedUnaryMethod_IsTableInMigrating<WithStreamedUnaryMethod_RestoreFiles<WithStreamedUnaryMethod_GenBalanceTask<WithStreamedUnaryMethod_Balance<WithStreamedUnaryMethod_ChangeRouteStat<WithStreamedUnaryMethod_ChangeRouteRs<WithStreamedUnaryMethod_GetClusterRoutes<WithStreamedUnaryMethod_GetIntersectMigrateJobs<WithStreamedUnaryMethod_GetClusterInfo<WithStreamedUnaryMethod_SetProxyNotifyInfo<WithStreamedUnaryMethod_GetProxyNotifyInfo<WithStreamedUnaryMethod_SetVersionInfo<WithStreamedUnaryMethod_GetVersionInfo<WithStreamedUnaryMethod_ResizeOplog<WithStreamedUnaryMethod_RestartContainer<WithStreamedUnaryMethod_SetClusterMaxConns<WithStreamedUnaryMethod_GetRegionBackupConfig<WithStreamedUnaryMethod_SetRegionBackupConfig<WithStreamedUnaryMethod_GetClusterBackupConfig<WithStreamedUnaryMethod_SetClusterBackupConfig<WithStreamedUnaryMethod_DelClusterBackupConfig<WithStreamedUnaryMethod_GetClusterRoutesRaw<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AddResource<WithStreamedUnaryMethod_BlockResource<WithStreamedUnaryMethod_UnblockResource<WithStreamedUnaryMethod_DelResource<WithStreamedUnaryMethod_QueryResource<WithStreamedUnaryMethod_MigrateContainer<WithStreamedUnaryMethod_MigrateMachine<WithStreamedUnaryMethod_QueryMachine<WithStreamedUnaryMethod_AddContainer<WithStreamedUnaryMethod_DelContainer<WithStreamedUnaryMethod_AddContainerAsync<WithStreamedUnaryMethod_CreateCluster<WithStreamedUnaryMethod_UpgradeClusterModule<WithStreamedUnaryMethod_InfoCluster<WithStreamedUnaryMethod_DelCluster<WithStreamedUnaryMethod_ListCluster<WithStreamedUnaryMethod_ChangePassword<WithStreamedUnaryMethod_JobStatus<WithStreamedUnaryMethod_ResizeCluster<WithStreamedUnaryMethod_BackupCluster<WithStreamedUnaryMethod_QueryBackupList<WithStreamedUnaryMethod_CheckRestoreTs<WithStreamedUnaryMethod_RestoreCluster<WithStreamedUnaryMethod_ExchangeCluster<WithStreamedUnaryMethod_IsolationCluster<WithStreamedUnaryMethod_AddReplicateSet<WithStreamedUnaryMethod_DelReplicateSet<WithStreamedUnaryMethod_QueryOpLogStatus<WithStreamedUnaryMethod_ShowDb<WithStreamedUnaryMethod_ShowColls<WithStreamedUnaryMethod_GetSlowQuery<WithStreamedUnaryMethod_QrySlowInfo<WithStreamedUnaryMethod_CreateUser<WithStreamedUnaryMethod_QueryUserList<WithStreamedUnaryMethod_DeleteUser<WithStreamedUnaryMethod_SetUserAuth<WithStreamedUnaryMethod_Ping<WithStreamedUnaryMethod_CreateTable<WithStreamedUnaryMethod_DropTable<WithStreamedUnaryMethod_DropDatabase<WithStreamedUnaryMethod_EnsureIndex<WithStreamedUnaryMethod_DropIndex<WithStreamedUnaryMethod_DropIndexName<WithStreamedUnaryMethod_ReportMigrateInfo<WithStreamedUnaryMethod_Migrate<WithStreamedUnaryMethod_CleanMigrate<WithStreamedUnaryMethod_GetMigrateStatus<WithStreamedUnaryMethod_IsTableInMigrating<WithStreamedUnaryMethod_RestoreFiles<WithStreamedUnaryMethod_GenBalanceTask<WithStreamedUnaryMethod_Balance<WithStreamedUnaryMethod_ChangeRouteStat<WithStreamedUnaryMethod_ChangeRouteRs<WithStreamedUnaryMethod_GetClusterRoutes<WithStreamedUnaryMethod_GetIntersectMigrateJobs<WithStreamedUnaryMethod_GetClusterInfo<WithStreamedUnaryMethod_SetProxyNotifyInfo<WithStreamedUnaryMethod_GetProxyNotifyInfo<WithStreamedUnaryMethod_SetVersionInfo<WithStreamedUnaryMethod_GetVersionInfo<WithStreamedUnaryMethod_ResizeOplog<WithStreamedUnaryMethod_RestartContainer<WithStreamedUnaryMethod_SetClusterMaxConns<WithStreamedUnaryMethod_GetRegionBackupConfig<WithStreamedUnaryMethod_SetRegionBackupConfig<WithStreamedUnaryMethod_GetClusterBackupConfig<WithStreamedUnaryMethod_SetClusterBackupConfig<WithStreamedUnaryMethod_DelClusterBackupConfig<WithStreamedUnaryMethod_GetClusterRoutesRaw<Service > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > > StreamedService;
};

}  // namespace masterproto


#endif  // GRPC_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED
