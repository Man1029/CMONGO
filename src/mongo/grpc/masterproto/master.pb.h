// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmongo/masterproto/master.proto

#ifndef PROTOBUF_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED
#define PROTOBUF_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "mongo/grpc/cmongoproto/cmongo.pb.h"
// @@protoc_insertion_point(includes)
namespace cmongoproto {
class BeginHotBackupReq;
class BeginHotBackupReqDefaultTypeInternal;
extern BeginHotBackupReqDefaultTypeInternal _BeginHotBackupReq_default_instance_;
class BeginHotBackupRes;
class BeginHotBackupResDefaultTypeInternal;
extern BeginHotBackupResDefaultTypeInternal _BeginHotBackupRes_default_instance_;
class CheckJobStatusReq;
class CheckJobStatusReqDefaultTypeInternal;
extern CheckJobStatusReqDefaultTypeInternal _CheckJobStatusReq_default_instance_;
class CheckJobStatusRes;
class CheckJobStatusResDefaultTypeInternal;
extern CheckJobStatusResDefaultTypeInternal _CheckJobStatusRes_default_instance_;
class CommandContainerReq;
class CommandContainerReqDefaultTypeInternal;
extern CommandContainerReqDefaultTypeInternal _CommandContainerReq_default_instance_;
class CommandContainerRes;
class CommandContainerResDefaultTypeInternal;
extern CommandContainerResDefaultTypeInternal _CommandContainerRes_default_instance_;
class ConfigParam;
class ConfigParamDefaultTypeInternal;
extern ConfigParamDefaultTypeInternal _ConfigParam_default_instance_;
class ConfirmJobReq;
class ConfirmJobReqDefaultTypeInternal;
extern ConfirmJobReqDefaultTypeInternal _ConfirmJobReq_default_instance_;
class ConfirmJobRes;
class ConfirmJobResDefaultTypeInternal;
extern ConfirmJobResDefaultTypeInternal _ConfirmJobRes_default_instance_;
class CreateContainerReq;
class CreateContainerReqDefaultTypeInternal;
extern CreateContainerReqDefaultTypeInternal _CreateContainerReq_default_instance_;
class CreateContainerRes;
class CreateContainerResDefaultTypeInternal;
extern CreateContainerResDefaultTypeInternal _CreateContainerRes_default_instance_;
class DestroyContainerReq;
class DestroyContainerReqDefaultTypeInternal;
extern DestroyContainerReqDefaultTypeInternal _DestroyContainerReq_default_instance_;
class DestroyContainerRes;
class DestroyContainerResDefaultTypeInternal;
extern DestroyContainerResDefaultTypeInternal _DestroyContainerRes_default_instance_;
class DynamoProxyParam;
class DynamoProxyParamDefaultTypeInternal;
extern DynamoProxyParamDefaultTypeInternal _DynamoProxyParam_default_instance_;
class EndHotBackupReq;
class EndHotBackupReqDefaultTypeInternal;
extern EndHotBackupReqDefaultTypeInternal _EndHotBackupReq_default_instance_;
class EndHotBackupRes;
class EndHotBackupResDefaultTypeInternal;
extern EndHotBackupResDefaultTypeInternal _EndHotBackupRes_default_instance_;
class HeartBeatReq;
class HeartBeatReqDefaultTypeInternal;
extern HeartBeatReqDefaultTypeInternal _HeartBeatReq_default_instance_;
class HeartBeatRes;
class HeartBeatResDefaultTypeInternal;
extern HeartBeatResDefaultTypeInternal _HeartBeatRes_default_instance_;
class InfoContainerReq;
class InfoContainerReqDefaultTypeInternal;
extern InfoContainerReqDefaultTypeInternal _InfoContainerReq_default_instance_;
class InfoContainerRes;
class InfoContainerResDefaultTypeInternal;
extern InfoContainerResDefaultTypeInternal _InfoContainerRes_default_instance_;
class MongoDParam;
class MongoDParamDefaultTypeInternal;
extern MongoDParamDefaultTypeInternal _MongoDParam_default_instance_;
class MongoSParam;
class MongoSParamDefaultTypeInternal;
extern MongoSParamDefaultTypeInternal _MongoSParam_default_instance_;
class PingReq;
class PingReqDefaultTypeInternal;
extern PingReqDefaultTypeInternal _PingReq_default_instance_;
class PingRes;
class PingResDefaultTypeInternal;
extern PingResDefaultTypeInternal _PingRes_default_instance_;
class Proxy2Param;
class Proxy2ParamDefaultTypeInternal;
extern Proxy2ParamDefaultTypeInternal _Proxy2Param_default_instance_;
class ProxyParam;
class ProxyParamDefaultTypeInternal;
extern ProxyParamDefaultTypeInternal _ProxyParam_default_instance_;
class RSAddReq;
class RSAddReqDefaultTypeInternal;
extern RSAddReqDefaultTypeInternal _RSAddReq_default_instance_;
class RSAddRes;
class RSAddResDefaultTypeInternal;
extern RSAddResDefaultTypeInternal _RSAddRes_default_instance_;
class RSInitReq;
class RSInitReqDefaultTypeInternal;
extern RSInitReqDefaultTypeInternal _RSInitReq_default_instance_;
class RSInitRes;
class RSInitResDefaultTypeInternal;
extern RSInitResDefaultTypeInternal _RSInitRes_default_instance_;
class RSReconfigReq;
class RSReconfigReqDefaultTypeInternal;
extern RSReconfigReqDefaultTypeInternal _RSReconfigReq_default_instance_;
class RSReconfigRes;
class RSReconfigResDefaultTypeInternal;
extern RSReconfigResDefaultTypeInternal _RSReconfigRes_default_instance_;
class RSRemoveReq;
class RSRemoveReqDefaultTypeInternal;
extern RSRemoveReqDefaultTypeInternal _RSRemoveReq_default_instance_;
class RSRemoveRes;
class RSRemoveResDefaultTypeInternal;
extern RSRemoveResDefaultTypeInternal _RSRemoveRes_default_instance_;
class RSStatusReq;
class RSStatusReqDefaultTypeInternal;
extern RSStatusReqDefaultTypeInternal _RSStatusReq_default_instance_;
class RSStatusRes;
class RSStatusResDefaultTypeInternal;
extern RSStatusResDefaultTypeInternal _RSStatusRes_default_instance_;
class ReqHeader;
class ReqHeaderDefaultTypeInternal;
extern ReqHeaderDefaultTypeInternal _ReqHeader_default_instance_;
class ResHeader;
class ResHeaderDefaultTypeInternal;
extern ResHeaderDefaultTypeInternal _ResHeader_default_instance_;
class ResizeContainerReq;
class ResizeContainerReqDefaultTypeInternal;
extern ResizeContainerReqDefaultTypeInternal _ResizeContainerReq_default_instance_;
class ResizeContainerRes;
class ResizeContainerResDefaultTypeInternal;
extern ResizeContainerResDefaultTypeInternal _ResizeContainerRes_default_instance_;
class ResourceDesc;
class ResourceDescDefaultTypeInternal;
extern ResourceDescDefaultTypeInternal _ResourceDesc_default_instance_;
class StartContainerReq;
class StartContainerReqDefaultTypeInternal;
extern StartContainerReqDefaultTypeInternal _StartContainerReq_default_instance_;
class StartContainerRes;
class StartContainerResDefaultTypeInternal;
extern StartContainerResDefaultTypeInternal _StartContainerRes_default_instance_;
class StopContainerReq;
class StopContainerReqDefaultTypeInternal;
extern StopContainerReqDefaultTypeInternal _StopContainerReq_default_instance_;
class StopContainerRes;
class StopContainerResDefaultTypeInternal;
extern StopContainerResDefaultTypeInternal _StopContainerRes_default_instance_;
class TransferFileReq;
class TransferFileReqDefaultTypeInternal;
extern TransferFileReqDefaultTypeInternal _TransferFileReq_default_instance_;
class TransferFileRes;
class TransferFileResDefaultTypeInternal;
extern TransferFileResDefaultTypeInternal _TransferFileRes_default_instance_;
class UpdateContainerModuleReq;
class UpdateContainerModuleReqDefaultTypeInternal;
extern UpdateContainerModuleReqDefaultTypeInternal _UpdateContainerModuleReq_default_instance_;
class UpdateContainerModuleRes;
class UpdateContainerModuleResDefaultTypeInternal;
extern UpdateContainerModuleResDefaultTypeInternal _UpdateContainerModuleRes_default_instance_;
class UpgradeContainerReq;
class UpgradeContainerReqDefaultTypeInternal;
extern UpgradeContainerReqDefaultTypeInternal _UpgradeContainerReq_default_instance_;
class UpgradeContainerRes;
class UpgradeContainerResDefaultTypeInternal;
extern UpgradeContainerResDefaultTypeInternal _UpgradeContainerRes_default_instance_;
}  // namespace cmongoproto
namespace masterproto {
class ActiveNodeInfo;
class ActiveNodeInfoDefaultTypeInternal;
extern ActiveNodeInfoDefaultTypeInternal _ActiveNodeInfo_default_instance_;
class AddContainerAsyncReq;
class AddContainerAsyncReqDefaultTypeInternal;
extern AddContainerAsyncReqDefaultTypeInternal _AddContainerAsyncReq_default_instance_;
class AddContainerAsyncRsp;
class AddContainerAsyncRspDefaultTypeInternal;
extern AddContainerAsyncRspDefaultTypeInternal _AddContainerAsyncRsp_default_instance_;
class AddContainerReq;
class AddContainerReqDefaultTypeInternal;
extern AddContainerReqDefaultTypeInternal _AddContainerReq_default_instance_;
class AddContainerRsp;
class AddContainerRspDefaultTypeInternal;
extern AddContainerRspDefaultTypeInternal _AddContainerRsp_default_instance_;
class AddResourceReq;
class AddResourceReqDefaultTypeInternal;
extern AddResourceReqDefaultTypeInternal _AddResourceReq_default_instance_;
class AddResourceRsp;
class AddResourceRspDefaultTypeInternal;
extern AddResourceRspDefaultTypeInternal _AddResourceRsp_default_instance_;
class AddRsReq;
class AddRsReqDefaultTypeInternal;
extern AddRsReqDefaultTypeInternal _AddRsReq_default_instance_;
class AddRsRsp;
class AddRsRspDefaultTypeInternal;
extern AddRsRspDefaultTypeInternal _AddRsRsp_default_instance_;
class AuthEntry;
class AuthEntryDefaultTypeInternal;
extern AuthEntryDefaultTypeInternal _AuthEntry_default_instance_;
class AuthRole;
class AuthRoleDefaultTypeInternal;
extern AuthRoleDefaultTypeInternal _AuthRole_default_instance_;
class BackupClusterReq;
class BackupClusterReqDefaultTypeInternal;
extern BackupClusterReqDefaultTypeInternal _BackupClusterReq_default_instance_;
class BackupClusterRsp;
class BackupClusterRspDefaultTypeInternal;
extern BackupClusterRspDefaultTypeInternal _BackupClusterRsp_default_instance_;
class BackupInfo;
class BackupInfoDefaultTypeInternal;
extern BackupInfoDefaultTypeInternal _BackupInfo_default_instance_;
class BalanceReq;
class BalanceReqDefaultTypeInternal;
extern BalanceReqDefaultTypeInternal _BalanceReq_default_instance_;
class BalanceRsp;
class BalanceRspDefaultTypeInternal;
extern BalanceRspDefaultTypeInternal _BalanceRsp_default_instance_;
class BalanceTask;
class BalanceTaskDefaultTypeInternal;
extern BalanceTaskDefaultTypeInternal _BalanceTask_default_instance_;
class BlockResourceReq;
class BlockResourceReqDefaultTypeInternal;
extern BlockResourceReqDefaultTypeInternal _BlockResourceReq_default_instance_;
class BlockResourceRsp;
class BlockResourceRspDefaultTypeInternal;
extern BlockResourceRspDefaultTypeInternal _BlockResourceRsp_default_instance_;
class ChPasswdReq;
class ChPasswdReqDefaultTypeInternal;
extern ChPasswdReqDefaultTypeInternal _ChPasswdReq_default_instance_;
class ChPasswdRsp;
class ChPasswdRspDefaultTypeInternal;
extern ChPasswdRspDefaultTypeInternal _ChPasswdRsp_default_instance_;
class ChangeRouteRsReq;
class ChangeRouteRsReqDefaultTypeInternal;
extern ChangeRouteRsReqDefaultTypeInternal _ChangeRouteRsReq_default_instance_;
class ChangeRouteRsRsp;
class ChangeRouteRsRspDefaultTypeInternal;
extern ChangeRouteRsRspDefaultTypeInternal _ChangeRouteRsRsp_default_instance_;
class ChangeRouteStateReq;
class ChangeRouteStateReqDefaultTypeInternal;
extern ChangeRouteStateReqDefaultTypeInternal _ChangeRouteStateReq_default_instance_;
class ChangeRouteStateRsp;
class ChangeRouteStateRspDefaultTypeInternal;
extern ChangeRouteStateRspDefaultTypeInternal _ChangeRouteStateRsp_default_instance_;
class CheckRestoreTsReq;
class CheckRestoreTsReqDefaultTypeInternal;
extern CheckRestoreTsReqDefaultTypeInternal _CheckRestoreTsReq_default_instance_;
class CheckRestoreTsRsp;
class CheckRestoreTsRspDefaultTypeInternal;
extern CheckRestoreTsRspDefaultTypeInternal _CheckRestoreTsRsp_default_instance_;
class CleanMigrateReq;
class CleanMigrateReqDefaultTypeInternal;
extern CleanMigrateReqDefaultTypeInternal _CleanMigrateReq_default_instance_;
class CleanMigrateRsp;
class CleanMigrateRspDefaultTypeInternal;
extern CleanMigrateRspDefaultTypeInternal _CleanMigrateRsp_default_instance_;
class ClusterBaseInfo;
class ClusterBaseInfoDefaultTypeInternal;
extern ClusterBaseInfoDefaultTypeInternal _ClusterBaseInfo_default_instance_;
class ClusterExtraInfo;
class ClusterExtraInfoDefaultTypeInternal;
extern ClusterExtraInfoDefaultTypeInternal _ClusterExtraInfo_default_instance_;
class ClusterInfo;
class ClusterInfoDefaultTypeInternal;
extern ClusterInfoDefaultTypeInternal _ClusterInfo_default_instance_;
class Collection;
class CollectionDefaultTypeInternal;
extern CollectionDefaultTypeInternal _Collection_default_instance_;
class ContainerInfo;
class ContainerInfoDefaultTypeInternal;
extern ContainerInfoDefaultTypeInternal _ContainerInfo_default_instance_;
class ContainerPair;
class ContainerPairDefaultTypeInternal;
extern ContainerPairDefaultTypeInternal _ContainerPair_default_instance_;
class CreateClusterReq;
class CreateClusterReqDefaultTypeInternal;
extern CreateClusterReqDefaultTypeInternal _CreateClusterReq_default_instance_;
class CreateClusterRsp;
class CreateClusterRspDefaultTypeInternal;
extern CreateClusterRspDefaultTypeInternal _CreateClusterRsp_default_instance_;
class CreateTableReq;
class CreateTableReqDefaultTypeInternal;
extern CreateTableReqDefaultTypeInternal _CreateTableReq_default_instance_;
class CreateTableRsp;
class CreateTableRspDefaultTypeInternal;
extern CreateTableRspDefaultTypeInternal _CreateTableRsp_default_instance_;
class CreateUserReq;
class CreateUserReqDefaultTypeInternal;
extern CreateUserReqDefaultTypeInternal _CreateUserReq_default_instance_;
class CreateUserRsp;
class CreateUserRspDefaultTypeInternal;
extern CreateUserRspDefaultTypeInternal _CreateUserRsp_default_instance_;
class DelClusterBackupConfigReq;
class DelClusterBackupConfigReqDefaultTypeInternal;
extern DelClusterBackupConfigReqDefaultTypeInternal _DelClusterBackupConfigReq_default_instance_;
class DelClusterBackupConfigRsp;
class DelClusterBackupConfigRspDefaultTypeInternal;
extern DelClusterBackupConfigRspDefaultTypeInternal _DelClusterBackupConfigRsp_default_instance_;
class DelClusterReq;
class DelClusterReqDefaultTypeInternal;
extern DelClusterReqDefaultTypeInternal _DelClusterReq_default_instance_;
class DelClusterRsp;
class DelClusterRspDefaultTypeInternal;
extern DelClusterRspDefaultTypeInternal _DelClusterRsp_default_instance_;
class DelContainerReq;
class DelContainerReqDefaultTypeInternal;
extern DelContainerReqDefaultTypeInternal _DelContainerReq_default_instance_;
class DelContainerRsp;
class DelContainerRspDefaultTypeInternal;
extern DelContainerRspDefaultTypeInternal _DelContainerRsp_default_instance_;
class DelResourceReq;
class DelResourceReqDefaultTypeInternal;
extern DelResourceReqDefaultTypeInternal _DelResourceReq_default_instance_;
class DelResourceRsp;
class DelResourceRspDefaultTypeInternal;
extern DelResourceRspDefaultTypeInternal _DelResourceRsp_default_instance_;
class DelRsReq;
class DelRsReqDefaultTypeInternal;
extern DelRsReqDefaultTypeInternal _DelRsReq_default_instance_;
class DelRsRsp;
class DelRsRspDefaultTypeInternal;
extern DelRsRspDefaultTypeInternal _DelRsRsp_default_instance_;
class DeleteUserReq;
class DeleteUserReqDefaultTypeInternal;
extern DeleteUserReqDefaultTypeInternal _DeleteUserReq_default_instance_;
class DeleteUserRsp;
class DeleteUserRspDefaultTypeInternal;
extern DeleteUserRspDefaultTypeInternal _DeleteUserRsp_default_instance_;
class DropDatabaseReq;
class DropDatabaseReqDefaultTypeInternal;
extern DropDatabaseReqDefaultTypeInternal _DropDatabaseReq_default_instance_;
class DropDatabaseRsp;
class DropDatabaseRspDefaultTypeInternal;
extern DropDatabaseRspDefaultTypeInternal _DropDatabaseRsp_default_instance_;
class DropIndexNameReq;
class DropIndexNameReqDefaultTypeInternal;
extern DropIndexNameReqDefaultTypeInternal _DropIndexNameReq_default_instance_;
class DropIndexNameRsp;
class DropIndexNameRspDefaultTypeInternal;
extern DropIndexNameRspDefaultTypeInternal _DropIndexNameRsp_default_instance_;
class DropIndexReq;
class DropIndexReqDefaultTypeInternal;
extern DropIndexReqDefaultTypeInternal _DropIndexReq_default_instance_;
class DropIndexRsp;
class DropIndexRspDefaultTypeInternal;
extern DropIndexRspDefaultTypeInternal _DropIndexRsp_default_instance_;
class DropTableReq;
class DropTableReqDefaultTypeInternal;
extern DropTableReqDefaultTypeInternal _DropTableReq_default_instance_;
class DropTableRsp;
class DropTableRspDefaultTypeInternal;
extern DropTableRspDefaultTypeInternal _DropTableRsp_default_instance_;
class EnsureIndexReq;
class EnsureIndexReqDefaultTypeInternal;
extern EnsureIndexReqDefaultTypeInternal _EnsureIndexReq_default_instance_;
class EnsureIndexRsp;
class EnsureIndexRspDefaultTypeInternal;
extern EnsureIndexRspDefaultTypeInternal _EnsureIndexRsp_default_instance_;
class ExchangeClusterReq;
class ExchangeClusterReqDefaultTypeInternal;
extern ExchangeClusterReqDefaultTypeInternal _ExchangeClusterReq_default_instance_;
class ExchangeClusterRsp;
class ExchangeClusterRspDefaultTypeInternal;
extern ExchangeClusterRspDefaultTypeInternal _ExchangeClusterRsp_default_instance_;
class GenBalanceTaskReq;
class GenBalanceTaskReqDefaultTypeInternal;
extern GenBalanceTaskReqDefaultTypeInternal _GenBalanceTaskReq_default_instance_;
class GenBalanceTaskRsp;
class GenBalanceTaskRspDefaultTypeInternal;
extern GenBalanceTaskRspDefaultTypeInternal _GenBalanceTaskRsp_default_instance_;
class GetClusterBackupConfigReq;
class GetClusterBackupConfigReqDefaultTypeInternal;
extern GetClusterBackupConfigReqDefaultTypeInternal _GetClusterBackupConfigReq_default_instance_;
class GetClusterBackupConfigRsp;
class GetClusterBackupConfigRspDefaultTypeInternal;
extern GetClusterBackupConfigRspDefaultTypeInternal _GetClusterBackupConfigRsp_default_instance_;
class GetClusterBanReq;
class GetClusterBanReqDefaultTypeInternal;
extern GetClusterBanReqDefaultTypeInternal _GetClusterBanReq_default_instance_;
class GetClusterBanRsp;
class GetClusterBanRspDefaultTypeInternal;
extern GetClusterBanRspDefaultTypeInternal _GetClusterBanRsp_default_instance_;
class GetClusterInfoReq;
class GetClusterInfoReqDefaultTypeInternal;
extern GetClusterInfoReqDefaultTypeInternal _GetClusterInfoReq_default_instance_;
class GetClusterInfoRsp;
class GetClusterInfoRspDefaultTypeInternal;
extern GetClusterInfoRspDefaultTypeInternal _GetClusterInfoRsp_default_instance_;
class GetClusterRoutesRawReq;
class GetClusterRoutesRawReqDefaultTypeInternal;
extern GetClusterRoutesRawReqDefaultTypeInternal _GetClusterRoutesRawReq_default_instance_;
class GetClusterRoutesRawRsp;
class GetClusterRoutesRawRspDefaultTypeInternal;
extern GetClusterRoutesRawRspDefaultTypeInternal _GetClusterRoutesRawRsp_default_instance_;
class GetClusterRoutesReq;
class GetClusterRoutesReqDefaultTypeInternal;
extern GetClusterRoutesReqDefaultTypeInternal _GetClusterRoutesReq_default_instance_;
class GetClusterRoutesRsp;
class GetClusterRoutesRspDefaultTypeInternal;
extern GetClusterRoutesRspDefaultTypeInternal _GetClusterRoutesRsp_default_instance_;
class GetIntersectMigrateJobsReq;
class GetIntersectMigrateJobsReqDefaultTypeInternal;
extern GetIntersectMigrateJobsReqDefaultTypeInternal _GetIntersectMigrateJobsReq_default_instance_;
class GetIntersectMigrateJobsRsp;
class GetIntersectMigrateJobsRspDefaultTypeInternal;
extern GetIntersectMigrateJobsRspDefaultTypeInternal _GetIntersectMigrateJobsRsp_default_instance_;
class GetMigrateStatusReq;
class GetMigrateStatusReqDefaultTypeInternal;
extern GetMigrateStatusReqDefaultTypeInternal _GetMigrateStatusReq_default_instance_;
class GetMigrateStatusRsp;
class GetMigrateStatusRspDefaultTypeInternal;
extern GetMigrateStatusRspDefaultTypeInternal _GetMigrateStatusRsp_default_instance_;
class GetProxyNotifyInfoReq;
class GetProxyNotifyInfoReqDefaultTypeInternal;
extern GetProxyNotifyInfoReqDefaultTypeInternal _GetProxyNotifyInfoReq_default_instance_;
class GetProxyNotifyInfoRsp;
class GetProxyNotifyInfoRspDefaultTypeInternal;
extern GetProxyNotifyInfoRspDefaultTypeInternal _GetProxyNotifyInfoRsp_default_instance_;
class GetRegionBackupConfigReq;
class GetRegionBackupConfigReqDefaultTypeInternal;
extern GetRegionBackupConfigReqDefaultTypeInternal _GetRegionBackupConfigReq_default_instance_;
class GetRegionBackupConfigRsp;
class GetRegionBackupConfigRspDefaultTypeInternal;
extern GetRegionBackupConfigRspDefaultTypeInternal _GetRegionBackupConfigRsp_default_instance_;
class GetSlowQueryReq;
class GetSlowQueryReqDefaultTypeInternal;
extern GetSlowQueryReqDefaultTypeInternal _GetSlowQueryReq_default_instance_;
class GetSlowQueryRsp;
class GetSlowQueryRspDefaultTypeInternal;
extern GetSlowQueryRspDefaultTypeInternal _GetSlowQueryRsp_default_instance_;
class GetVersionReq;
class GetVersionReqDefaultTypeInternal;
extern GetVersionReqDefaultTypeInternal _GetVersionReq_default_instance_;
class GetVersionRsp;
class GetVersionRspDefaultTypeInternal;
extern GetVersionRspDefaultTypeInternal _GetVersionRsp_default_instance_;
class InfoClusterReq;
class InfoClusterReqDefaultTypeInternal;
extern InfoClusterReqDefaultTypeInternal _InfoClusterReq_default_instance_;
class InfoClusterRsp;
class InfoClusterRspDefaultTypeInternal;
extern InfoClusterRspDefaultTypeInternal _InfoClusterRsp_default_instance_;
class InterfacePart;
class InterfacePartDefaultTypeInternal;
extern InterfacePartDefaultTypeInternal _InterfacePart_default_instance_;
class IsTableInMigratingReq;
class IsTableInMigratingReqDefaultTypeInternal;
extern IsTableInMigratingReqDefaultTypeInternal _IsTableInMigratingReq_default_instance_;
class IsTableInMigratingRsp;
class IsTableInMigratingRspDefaultTypeInternal;
extern IsTableInMigratingRspDefaultTypeInternal _IsTableInMigratingRsp_default_instance_;
class IsolationClusterReq;
class IsolationClusterReqDefaultTypeInternal;
extern IsolationClusterReqDefaultTypeInternal _IsolationClusterReq_default_instance_;
class IsolationClusterRsp;
class IsolationClusterRspDefaultTypeInternal;
extern IsolationClusterRspDefaultTypeInternal _IsolationClusterRsp_default_instance_;
class JobInfo;
class JobInfoDefaultTypeInternal;
extern JobInfoDefaultTypeInternal _JobInfo_default_instance_;
class JobStatusReq;
class JobStatusReqDefaultTypeInternal;
extern JobStatusReqDefaultTypeInternal _JobStatusReq_default_instance_;
class JobStatusRsp;
class JobStatusRspDefaultTypeInternal;
extern JobStatusRspDefaultTypeInternal _JobStatusRsp_default_instance_;
class ListClusterReq;
class ListClusterReqDefaultTypeInternal;
extern ListClusterReqDefaultTypeInternal _ListClusterReq_default_instance_;
class ListClusterRsp;
class ListClusterRspDefaultTypeInternal;
extern ListClusterRspDefaultTypeInternal _ListClusterRsp_default_instance_;
class MachineInfo;
class MachineInfoDefaultTypeInternal;
extern MachineInfoDefaultTypeInternal _MachineInfo_default_instance_;
class MigrateContainerReq;
class MigrateContainerReqDefaultTypeInternal;
extern MigrateContainerReqDefaultTypeInternal _MigrateContainerReq_default_instance_;
class MigrateContainerRsp;
class MigrateContainerRspDefaultTypeInternal;
extern MigrateContainerRspDefaultTypeInternal _MigrateContainerRsp_default_instance_;
class MigrateGroup;
class MigrateGroupDefaultTypeInternal;
extern MigrateGroupDefaultTypeInternal _MigrateGroup_default_instance_;
class MigrateInterval;
class MigrateIntervalDefaultTypeInternal;
extern MigrateIntervalDefaultTypeInternal _MigrateInterval_default_instance_;
class MigrateJob;
class MigrateJobDefaultTypeInternal;
extern MigrateJobDefaultTypeInternal _MigrateJob_default_instance_;
class MigrateMachineReq;
class MigrateMachineReqDefaultTypeInternal;
extern MigrateMachineReqDefaultTypeInternal _MigrateMachineReq_default_instance_;
class MigrateMachineRsp;
class MigrateMachineRspDefaultTypeInternal;
extern MigrateMachineRspDefaultTypeInternal _MigrateMachineRsp_default_instance_;
class MigrateReq;
class MigrateReqDefaultTypeInternal;
extern MigrateReqDefaultTypeInternal _MigrateReq_default_instance_;
class MigrateRsp;
class MigrateRspDefaultTypeInternal;
extern MigrateRspDefaultTypeInternal _MigrateRsp_default_instance_;
class MigrateStatus;
class MigrateStatusDefaultTypeInternal;
extern MigrateStatusDefaultTypeInternal _MigrateStatus_default_instance_;
class OpLogStatusReq;
class OpLogStatusReqDefaultTypeInternal;
extern OpLogStatusReqDefaultTypeInternal _OpLogStatusReq_default_instance_;
class OpLogStatusRsp;
class OpLogStatusRspDefaultTypeInternal;
extern OpLogStatusRspDefaultTypeInternal _OpLogStatusRsp_default_instance_;
class OplogInfo;
class OplogInfoDefaultTypeInternal;
extern OplogInfoDefaultTypeInternal _OplogInfo_default_instance_;
class ProxyChgInfo;
class ProxyChgInfoDefaultTypeInternal;
extern ProxyChgInfoDefaultTypeInternal _ProxyChgInfo_default_instance_;
class ProxyChgReq;
class ProxyChgReqDefaultTypeInternal;
extern ProxyChgReqDefaultTypeInternal _ProxyChgReq_default_instance_;
class ProxyChgRsp;
class ProxyChgRspDefaultTypeInternal;
extern ProxyChgRspDefaultTypeInternal _ProxyChgRsp_default_instance_;
class QrySlowInfoReq;
class QrySlowInfoReqDefaultTypeInternal;
extern QrySlowInfoReqDefaultTypeInternal _QrySlowInfoReq_default_instance_;
class QrySlowInfoRsp;
class QrySlowInfoRspDefaultTypeInternal;
extern QrySlowInfoRspDefaultTypeInternal _QrySlowInfoRsp_default_instance_;
class QueryBackupListReq;
class QueryBackupListReqDefaultTypeInternal;
extern QueryBackupListReqDefaultTypeInternal _QueryBackupListReq_default_instance_;
class QueryBackupListRsp;
class QueryBackupListRspDefaultTypeInternal;
extern QueryBackupListRspDefaultTypeInternal _QueryBackupListRsp_default_instance_;
class QueryMachineReq;
class QueryMachineReqDefaultTypeInternal;
extern QueryMachineReqDefaultTypeInternal _QueryMachineReq_default_instance_;
class QueryMachineRsp;
class QueryMachineRspDefaultTypeInternal;
extern QueryMachineRspDefaultTypeInternal _QueryMachineRsp_default_instance_;
class QueryResourceReq;
class QueryResourceReqDefaultTypeInternal;
extern QueryResourceReqDefaultTypeInternal _QueryResourceReq_default_instance_;
class QueryResourceRsp;
class QueryResourceRspDefaultTypeInternal;
extern QueryResourceRspDefaultTypeInternal _QueryResourceRsp_default_instance_;
class QueryUserListReq;
class QueryUserListReqDefaultTypeInternal;
extern QueryUserListReqDefaultTypeInternal _QueryUserListReq_default_instance_;
class QueryUserListRsp;
class QueryUserListRspDefaultTypeInternal;
extern QueryUserListRspDefaultTypeInternal _QueryUserListRsp_default_instance_;
class ReplicateSetInfo;
class ReplicateSetInfoDefaultTypeInternal;
extern ReplicateSetInfoDefaultTypeInternal _ReplicateSetInfo_default_instance_;
class ReportMigrateInfoReq;
class ReportMigrateInfoReqDefaultTypeInternal;
extern ReportMigrateInfoReqDefaultTypeInternal _ReportMigrateInfoReq_default_instance_;
class ReportMigrateInfoRsp;
class ReportMigrateInfoRspDefaultTypeInternal;
extern ReportMigrateInfoRspDefaultTypeInternal _ReportMigrateInfoRsp_default_instance_;
class ResizeClusterReq;
class ResizeClusterReqDefaultTypeInternal;
extern ResizeClusterReqDefaultTypeInternal _ResizeClusterReq_default_instance_;
class ResizeClusterRsp;
class ResizeClusterRspDefaultTypeInternal;
extern ResizeClusterRspDefaultTypeInternal _ResizeClusterRsp_default_instance_;
class ResizeOplogReq;
class ResizeOplogReqDefaultTypeInternal;
extern ResizeOplogReqDefaultTypeInternal _ResizeOplogReq_default_instance_;
class ResizeOplogRsp;
class ResizeOplogRspDefaultTypeInternal;
extern ResizeOplogRspDefaultTypeInternal _ResizeOplogRsp_default_instance_;
class RestartContainerReq;
class RestartContainerReqDefaultTypeInternal;
extern RestartContainerReqDefaultTypeInternal _RestartContainerReq_default_instance_;
class RestartContainerRsp;
class RestartContainerRspDefaultTypeInternal;
extern RestartContainerRspDefaultTypeInternal _RestartContainerRsp_default_instance_;
class RestoreClusterReq;
class RestoreClusterReqDefaultTypeInternal;
extern RestoreClusterReqDefaultTypeInternal _RestoreClusterReq_default_instance_;
class RestoreClusterRsp;
class RestoreClusterRspDefaultTypeInternal;
extern RestoreClusterRspDefaultTypeInternal _RestoreClusterRsp_default_instance_;
class RestoreFilesReq;
class RestoreFilesReqDefaultTypeInternal;
extern RestoreFilesReqDefaultTypeInternal _RestoreFilesReq_default_instance_;
class RestoreFilesRes;
class RestoreFilesResDefaultTypeInternal;
extern RestoreFilesResDefaultTypeInternal _RestoreFilesRes_default_instance_;
class RouteChunk;
class RouteChunkDefaultTypeInternal;
extern RouteChunkDefaultTypeInternal _RouteChunk_default_instance_;
class SetClusterBackupConfigReq;
class SetClusterBackupConfigReqDefaultTypeInternal;
extern SetClusterBackupConfigReqDefaultTypeInternal _SetClusterBackupConfigReq_default_instance_;
class SetClusterBackupConfigRsp;
class SetClusterBackupConfigRspDefaultTypeInternal;
extern SetClusterBackupConfigRspDefaultTypeInternal _SetClusterBackupConfigRsp_default_instance_;
class SetClusterBanReq;
class SetClusterBanReqDefaultTypeInternal;
extern SetClusterBanReqDefaultTypeInternal _SetClusterBanReq_default_instance_;
class SetClusterBanRsp;
class SetClusterBanRspDefaultTypeInternal;
extern SetClusterBanRspDefaultTypeInternal _SetClusterBanRsp_default_instance_;
class SetClusterMaxConnsReq;
class SetClusterMaxConnsReqDefaultTypeInternal;
extern SetClusterMaxConnsReqDefaultTypeInternal _SetClusterMaxConnsReq_default_instance_;
class SetClusterMaxConnsRsp;
class SetClusterMaxConnsRspDefaultTypeInternal;
extern SetClusterMaxConnsRspDefaultTypeInternal _SetClusterMaxConnsRsp_default_instance_;
class SetProxyNotifyInfoReq;
class SetProxyNotifyInfoReqDefaultTypeInternal;
extern SetProxyNotifyInfoReqDefaultTypeInternal _SetProxyNotifyInfoReq_default_instance_;
class SetProxyNotifyInfoRsp;
class SetProxyNotifyInfoRspDefaultTypeInternal;
extern SetProxyNotifyInfoRspDefaultTypeInternal _SetProxyNotifyInfoRsp_default_instance_;
class SetRegionBackupConfigReq;
class SetRegionBackupConfigReqDefaultTypeInternal;
extern SetRegionBackupConfigReqDefaultTypeInternal _SetRegionBackupConfigReq_default_instance_;
class SetRegionBackupConfigRsp;
class SetRegionBackupConfigRspDefaultTypeInternal;
extern SetRegionBackupConfigRspDefaultTypeInternal _SetRegionBackupConfigRsp_default_instance_;
class SetUserAuthReq;
class SetUserAuthReqDefaultTypeInternal;
extern SetUserAuthReqDefaultTypeInternal _SetUserAuthReq_default_instance_;
class SetUserAuthRsp;
class SetUserAuthRspDefaultTypeInternal;
extern SetUserAuthRspDefaultTypeInternal _SetUserAuthRsp_default_instance_;
class SetVersionReq;
class SetVersionReqDefaultTypeInternal;
extern SetVersionReqDefaultTypeInternal _SetVersionReq_default_instance_;
class SetVersionRsp;
class SetVersionRspDefaultTypeInternal;
extern SetVersionRspDefaultTypeInternal _SetVersionRsp_default_instance_;
class ShowCollsReq;
class ShowCollsReqDefaultTypeInternal;
extern ShowCollsReqDefaultTypeInternal _ShowCollsReq_default_instance_;
class ShowCollsRsp;
class ShowCollsRspDefaultTypeInternal;
extern ShowCollsRspDefaultTypeInternal _ShowCollsRsp_default_instance_;
class ShowDbReq;
class ShowDbReqDefaultTypeInternal;
extern ShowDbReqDefaultTypeInternal _ShowDbReq_default_instance_;
class ShowDbRsp;
class ShowDbRspDefaultTypeInternal;
extern ShowDbRspDefaultTypeInternal _ShowDbRsp_default_instance_;
class SlowQueryInfo;
class SlowQueryInfoDefaultTypeInternal;
extern SlowQueryInfoDefaultTypeInternal _SlowQueryInfo_default_instance_;
class TableRoutes;
class TableRoutesDefaultTypeInternal;
extern TableRoutesDefaultTypeInternal _TableRoutes_default_instance_;
class TableRoutesRaw;
class TableRoutesRawDefaultTypeInternal;
extern TableRoutesRawDefaultTypeInternal _TableRoutesRaw_default_instance_;
class UnblockResourceReq;
class UnblockResourceReqDefaultTypeInternal;
extern UnblockResourceReqDefaultTypeInternal _UnblockResourceReq_default_instance_;
class UnblockResourceRsp;
class UnblockResourceRspDefaultTypeInternal;
extern UnblockResourceRspDefaultTypeInternal _UnblockResourceRsp_default_instance_;
class UpgradeClusterModuleReq;
class UpgradeClusterModuleReqDefaultTypeInternal;
extern UpgradeClusterModuleReqDefaultTypeInternal _UpgradeClusterModuleReq_default_instance_;
class UpgradeClusterModuleRsp;
class UpgradeClusterModuleRspDefaultTypeInternal;
extern UpgradeClusterModuleRspDefaultTypeInternal _UpgradeClusterModuleRsp_default_instance_;
}  // namespace masterproto

namespace masterproto {

namespace protobuf_cmongo_2fmasterproto_2fmaster_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_cmongo_2fmasterproto_2fmaster_2eproto

enum StatusType {
  OK = 0,
  DOWN = 1,
  DEAD = 2,
  StatusType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  StatusType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool StatusType_IsValid(int value);
const StatusType StatusType_MIN = OK;
const StatusType StatusType_MAX = DEAD;
const int StatusType_ARRAYSIZE = StatusType_MAX + 1;

const ::google::protobuf::EnumDescriptor* StatusType_descriptor();
inline const ::std::string& StatusType_Name(StatusType value) {
  return ::google::protobuf::internal::NameOfEnum(
    StatusType_descriptor(), value);
}
inline bool StatusType_Parse(
    const ::std::string& name, StatusType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StatusType>(
    StatusType_descriptor(), name, value);
}
enum ClusterType {
  REPLICATE_SET = 0,
  SHARD = 1,
  DYNAMODB = 2,
  ClusterType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClusterType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClusterType_IsValid(int value);
const ClusterType ClusterType_MIN = REPLICATE_SET;
const ClusterType ClusterType_MAX = DYNAMODB;
const int ClusterType_ARRAYSIZE = ClusterType_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClusterType_descriptor();
inline const ::std::string& ClusterType_Name(ClusterType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClusterType_descriptor(), value);
}
inline bool ClusterType_Parse(
    const ::std::string& name, ClusterType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterType>(
    ClusterType_descriptor(), name, value);
}
enum JobType {
  CREATE_CLUSTER = 0,
  DELETE_CLUSTER = 1,
  CREATE_CLUSTER_RETRY = 2,
  DELETE_CLUSTER_RETRY = 3,
  EXPAND_CLUSTER = 4,
  EXPAND_CLUSTER_RETRY = 5,
  CONTRACT_CLUSTER = 6,
  CONTRACT_CLUSTER_RETRY = 7,
  BACKUP_CLUSTER = 8,
  BACKUP_CLUSTER_RETRY = 9,
  RESTORE_CLUSTER = 10,
  RESTORE_CLUSTER_RETRY = 11,
  ADD_REPLICATE = 12,
  ADD_REPLICATE_RETRY = 13,
  DEL_REPLICATE = 14,
  DEL_REPLICATE_RETRY = 15,
  ADD_CONTAINER = 16,
  ADD_CONTAINER_RETRY = 17,
  JobType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JobType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JobType_IsValid(int value);
const JobType JobType_MIN = CREATE_CLUSTER;
const JobType JobType_MAX = ADD_CONTAINER_RETRY;
const int JobType_ARRAYSIZE = JobType_MAX + 1;

const ::google::protobuf::EnumDescriptor* JobType_descriptor();
inline const ::std::string& JobType_Name(JobType value) {
  return ::google::protobuf::internal::NameOfEnum(
    JobType_descriptor(), value);
}
inline bool JobType_Parse(
    const ::std::string& name, JobType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JobType>(
    JobType_descriptor(), name, value);
}
enum JobStatus {
  NOT_EXIST = 0,
  NOT_START = 1,
  START = 2,
  FINISH = 3,
  FAILED = 4,
  OPLOG_ROLL = 5,
  JobStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  JobStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool JobStatus_IsValid(int value);
const JobStatus JobStatus_MIN = NOT_EXIST;
const JobStatus JobStatus_MAX = OPLOG_ROLL;
const int JobStatus_ARRAYSIZE = JobStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* JobStatus_descriptor();
inline const ::std::string& JobStatus_Name(JobStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    JobStatus_descriptor(), value);
}
inline bool JobStatus_Parse(
    const ::std::string& name, JobStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JobStatus>(
    JobStatus_descriptor(), name, value);
}
enum MachineType {
  MONGOD_HIGH_IO = 0,
  MONGOD_HIGH_CAP = 1,
  ARBITOR = 2,
  PROXY = 3,
  MONGOD_IO_T85 = 4,
  MONGOD_CAP_T6 = 5,
  MONGOD_TBD = 6,
  MONGOD_IO_TS80 = 7,
  MachineType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  MachineType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool MachineType_IsValid(int value);
const MachineType MachineType_MIN = MONGOD_HIGH_IO;
const MachineType MachineType_MAX = MONGOD_IO_TS80;
const int MachineType_ARRAYSIZE = MachineType_MAX + 1;

const ::google::protobuf::EnumDescriptor* MachineType_descriptor();
inline const ::std::string& MachineType_Name(MachineType value) {
  return ::google::protobuf::internal::NameOfEnum(
    MachineType_descriptor(), value);
}
inline bool MachineType_Parse(
    const ::std::string& name, MachineType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MachineType>(
    MachineType_descriptor(), name, value);
}
enum ClusterStatus {
  CLUSTER_INIT = 0,
  CLUSTER_RUNNING = 1,
  CLUSTER_RESIZE = 2,
  CLUSTER_BACKUP = 3,
  CLUSTER_RESTORE = 4,
  CLUSTER_ISOLATION = 5,
  CLUSTER_DELETING = 6,
  ClusterStatus_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  ClusterStatus_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool ClusterStatus_IsValid(int value);
const ClusterStatus ClusterStatus_MIN = CLUSTER_INIT;
const ClusterStatus ClusterStatus_MAX = CLUSTER_DELETING;
const int ClusterStatus_ARRAYSIZE = ClusterStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* ClusterStatus_descriptor();
inline const ::std::string& ClusterStatus_Name(ClusterStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    ClusterStatus_descriptor(), value);
}
inline bool ClusterStatus_Parse(
    const ::std::string& name, ClusterStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ClusterStatus>(
    ClusterStatus_descriptor(), name, value);
}
enum AuthMask {
  NONE = 0,
  READ_ONLY = 1,
  WRITE_ONLY = 2,
  READ_WRITE = 3,
  AuthMask_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AuthMask_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AuthMask_IsValid(int value);
const AuthMask AuthMask_MIN = NONE;
const AuthMask AuthMask_MAX = READ_WRITE;
const int AuthMask_ARRAYSIZE = AuthMask_MAX + 1;

const ::google::protobuf::EnumDescriptor* AuthMask_descriptor();
inline const ::std::string& AuthMask_Name(AuthMask value) {
  return ::google::protobuf::internal::NameOfEnum(
    AuthMask_descriptor(), value);
}
inline bool AuthMask_Parse(
    const ::std::string& name, AuthMask* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AuthMask>(
    AuthMask_descriptor(), name, value);
}
enum EnumProxyNotifyType {
  PROXY_NOTIFY_NONE = 0,
  NETAGENT = 1,
  CL5 = 2,
  EnumProxyNotifyType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EnumProxyNotifyType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EnumProxyNotifyType_IsValid(int value);
const EnumProxyNotifyType EnumProxyNotifyType_MIN = PROXY_NOTIFY_NONE;
const EnumProxyNotifyType EnumProxyNotifyType_MAX = CL5;
const int EnumProxyNotifyType_ARRAYSIZE = EnumProxyNotifyType_MAX + 1;

const ::google::protobuf::EnumDescriptor* EnumProxyNotifyType_descriptor();
inline const ::std::string& EnumProxyNotifyType_Name(EnumProxyNotifyType value) {
  return ::google::protobuf::internal::NameOfEnum(
    EnumProxyNotifyType_descriptor(), value);
}
inline bool EnumProxyNotifyType_Parse(
    const ::std::string& name, EnumProxyNotifyType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EnumProxyNotifyType>(
    EnumProxyNotifyType_descriptor(), name, value);
}
enum AutoBackup {
  OFF = 0,
  ON = 1,
  AutoBackup_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  AutoBackup_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool AutoBackup_IsValid(int value);
const AutoBackup AutoBackup_MIN = OFF;
const AutoBackup AutoBackup_MAX = ON;
const int AutoBackup_ARRAYSIZE = AutoBackup_MAX + 1;

const ::google::protobuf::EnumDescriptor* AutoBackup_descriptor();
inline const ::std::string& AutoBackup_Name(AutoBackup value) {
  return ::google::protobuf::internal::NameOfEnum(
    AutoBackup_descriptor(), value);
}
inline bool AutoBackup_Parse(
    const ::std::string& name, AutoBackup* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AutoBackup>(
    AutoBackup_descriptor(), name, value);
}
// ===================================================================

class ContainerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ContainerInfo) */ {
 public:
  ContainerInfo();
  virtual ~ContainerInfo();

  ContainerInfo(const ContainerInfo& from);

  inline ContainerInfo& operator=(const ContainerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContainerInfo& default_instance();

  static inline const ContainerInfo* internal_default_instance() {
    return reinterpret_cast<const ContainerInfo*>(
               &_ContainerInfo_default_instance_);
  }

  void Swap(ContainerInfo* other);

  // implements Message ----------------------------------------------

  inline ContainerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ContainerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContainerInfo& from);
  void MergeFrom(const ContainerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContainerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string container_name = 1;
  void clear_container_name();
  static const int kContainerNameFieldNumber = 1;
  const ::std::string& container_name() const;
  void set_container_name(const ::std::string& value);
  #if LANG_CXX11
  void set_container_name(::std::string&& value);
  #endif
  void set_container_name(const char* value);
  void set_container_name(const char* value, size_t size);
  ::std::string* mutable_container_name();
  ::std::string* release_container_name();
  void set_allocated_container_name(::std::string* container_name);

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string replicate_set = 3;
  void clear_replicate_set();
  static const int kReplicateSetFieldNumber = 3;
  const ::std::string& replicate_set() const;
  void set_replicate_set(const ::std::string& value);
  #if LANG_CXX11
  void set_replicate_set(::std::string&& value);
  #endif
  void set_replicate_set(const char* value);
  void set_replicate_set(const char* value, size_t size);
  ::std::string* mutable_replicate_set();
  ::std::string* release_replicate_set();
  void set_allocated_replicate_set(::std::string* replicate_set);

  // .cmongoproto.ResourceDesc quota = 7;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 7;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // .cmongoproto.MongoType container_type = 4;
  void clear_container_type();
  static const int kContainerTypeFieldNumber = 4;
  ::cmongoproto::MongoType container_type() const;
  void set_container_type(::cmongoproto::MongoType value);

  // .cmongoproto.MongoVersion container_version = 5;
  void clear_container_version();
  static const int kContainerVersionFieldNumber = 5;
  ::cmongoproto::MongoVersion container_version() const;
  void set_container_version(::cmongoproto::MongoVersion value);

  // .masterproto.StatusType status = 6;
  void clear_status();
  static const int kStatusFieldNumber = 6;
  ::masterproto::StatusType status() const;
  void set_status(::masterproto::StatusType value);

  // @@protoc_insertion_point(class_scope:masterproto.ContainerInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr container_name_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr replicate_set_;
  ::cmongoproto::ResourceDesc* quota_;
  int container_type_;
  int container_version_;
  int status_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MachineInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MachineInfo) */ {
 public:
  MachineInfo();
  virtual ~MachineInfo();

  MachineInfo(const MachineInfo& from);

  inline MachineInfo& operator=(const MachineInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MachineInfo& default_instance();

  static inline const MachineInfo* internal_default_instance() {
    return reinterpret_cast<const MachineInfo*>(
               &_MachineInfo_default_instance_);
  }

  void Swap(MachineInfo* other);

  // implements Message ----------------------------------------------

  inline MachineInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MachineInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MachineInfo& from);
  void MergeFrom(const MachineInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MachineInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string cluster_list = 5;
  int cluster_list_size() const;
  void clear_cluster_list();
  static const int kClusterListFieldNumber = 5;
  const ::std::string& cluster_list(int index) const;
  ::std::string* mutable_cluster_list(int index);
  void set_cluster_list(int index, const ::std::string& value);
  void set_cluster_list(int index, const char* value);
  void set_cluster_list(int index, const char* value, size_t size);
  ::std::string* add_cluster_list();
  void add_cluster_list(const ::std::string& value);
  void add_cluster_list(const char* value);
  void add_cluster_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& cluster_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_cluster_list();

  // repeated .masterproto.ContainerInfo container_list = 8;
  int container_list_size() const;
  void clear_container_list();
  static const int kContainerListFieldNumber = 8;
  const ::masterproto::ContainerInfo& container_list(int index) const;
  ::masterproto::ContainerInfo* mutable_container_list(int index);
  ::masterproto::ContainerInfo* add_container_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_container_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      container_list() const;

  // string machine_ip = 1;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 1;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // string worker_version = 15;
  void clear_worker_version();
  static const int kWorkerVersionFieldNumber = 15;
  const ::std::string& worker_version() const;
  void set_worker_version(const ::std::string& value);
  #if LANG_CXX11
  void set_worker_version(::std::string&& value);
  #endif
  void set_worker_version(const char* value);
  void set_worker_version(const char* value, size_t size);
  ::std::string* mutable_worker_version();
  ::std::string* release_worker_version();
  void set_allocated_worker_version(::std::string* worker_version);

  // .cmongoproto.ResourceDesc capacity = 6;
  bool has_capacity() const;
  void clear_capacity();
  static const int kCapacityFieldNumber = 6;
  const ::cmongoproto::ResourceDesc& capacity() const;
  ::cmongoproto::ResourceDesc* mutable_capacity();
  ::cmongoproto::ResourceDesc* release_capacity();
  void set_allocated_capacity(::cmongoproto::ResourceDesc* capacity);

  // .cmongoproto.ResourceDesc free = 7;
  bool has_free() const;
  void clear_free();
  static const int kFreeFieldNumber = 7;
  const ::cmongoproto::ResourceDesc& free() const;
  ::cmongoproto::ResourceDesc* mutable_free();
  ::cmongoproto::ResourceDesc* release_free();
  void set_allocated_free(::cmongoproto::ResourceDesc* free);

  // .masterproto.StatusType machine_status = 2;
  void clear_machine_status();
  static const int kMachineStatusFieldNumber = 2;
  ::masterproto::StatusType machine_status() const;
  void set_machine_status(::masterproto::StatusType value);

  // int32 container_num = 3;
  void clear_container_num();
  static const int kContainerNumFieldNumber = 3;
  ::google::protobuf::int32 container_num() const;
  void set_container_num(::google::protobuf::int32 value);

  // .masterproto.MachineType machine_type = 4;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 4;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 memory_URV = 9;
  void clear_memory_urv();
  static const int kMemoryURVFieldNumber = 9;
  ::google::protobuf::int32 memory_urv() const;
  void set_memory_urv(::google::protobuf::int32 value);

  // int32 num_URV = 10;
  void clear_num_urv();
  static const int kNumURVFieldNumber = 10;
  ::google::protobuf::int32 num_urv() const;
  void set_num_urv(::google::protobuf::int32 value);

  // int32 idc_parent_id = 11;
  void clear_idc_parent_id();
  static const int kIdcParentIdFieldNumber = 11;
  ::google::protobuf::int32 idc_parent_id() const;
  void set_idc_parent_id(::google::protobuf::int32 value);

  // int32 idc_id = 12;
  void clear_idc_id();
  static const int kIdcIdFieldNumber = 12;
  ::google::protobuf::int32 idc_id() const;
  void set_idc_id(::google::protobuf::int32 value);

  // int32 rack_id = 13;
  void clear_rack_id();
  static const int kRackIdFieldNumber = 13;
  ::google::protobuf::int32 rack_id() const;
  void set_rack_id(::google::protobuf::int32 value);

  // int32 idc_operation_id = 14;
  void clear_idc_operation_id();
  static const int kIdcOperationIdFieldNumber = 14;
  ::google::protobuf::int32 idc_operation_id() const;
  void set_idc_operation_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.MachineInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> cluster_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > container_list_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::google::protobuf::internal::ArenaStringPtr worker_version_;
  ::cmongoproto::ResourceDesc* capacity_;
  ::cmongoproto::ResourceDesc* free_;
  int machine_status_;
  ::google::protobuf::int32 container_num_;
  int machine_type_;
  ::google::protobuf::int32 memory_urv_;
  ::google::protobuf::int32 num_urv_;
  ::google::protobuf::int32 idc_parent_id_;
  ::google::protobuf::int32 idc_id_;
  ::google::protobuf::int32 rack_id_;
  ::google::protobuf::int32 idc_operation_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterBaseInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ClusterBaseInfo) */ {
 public:
  ClusterBaseInfo();
  virtual ~ClusterBaseInfo();

  ClusterBaseInfo(const ClusterBaseInfo& from);

  inline ClusterBaseInfo& operator=(const ClusterBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterBaseInfo& default_instance();

  static inline const ClusterBaseInfo* internal_default_instance() {
    return reinterpret_cast<const ClusterBaseInfo*>(
               &_ClusterBaseInfo_default_instance_);
  }

  void Swap(ClusterBaseInfo* other);

  // implements Message ----------------------------------------------

  inline ClusterBaseInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterBaseInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterBaseInfo& from);
  void MergeFrom(const ClusterBaseInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterBaseInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 1;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 1;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string storage_info = 4;
  void clear_storage_info();
  static const int kStorageInfoFieldNumber = 4;
  const ::std::string& storage_info() const;
  void set_storage_info(const ::std::string& value);
  #if LANG_CXX11
  void set_storage_info(::std::string&& value);
  #endif
  void set_storage_info(const char* value);
  void set_storage_info(const char* value, size_t size);
  ::std::string* mutable_storage_info();
  ::std::string* release_storage_info();
  void set_allocated_storage_info(::std::string* storage_info);

  // string logic_cluster_id = 10;
  void clear_logic_cluster_id();
  static const int kLogicClusterIdFieldNumber = 10;
  const ::std::string& logic_cluster_id() const;
  void set_logic_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_logic_cluster_id(::std::string&& value);
  #endif
  void set_logic_cluster_id(const char* value);
  void set_logic_cluster_id(const char* value, size_t size);
  ::std::string* mutable_logic_cluster_id();
  ::std::string* release_logic_cluster_id();
  void set_allocated_logic_cluster_id(::std::string* logic_cluster_id);

  // string proxy_version = 13;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 13;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 14;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 14;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 15;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 15;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ResourceDesc quota = 8;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 8;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // .masterproto.ClusterType cluster_type = 3;
  void clear_cluster_type();
  static const int kClusterTypeFieldNumber = 3;
  ::masterproto::ClusterType cluster_type() const;
  void set_cluster_type(::masterproto::ClusterType value);

  // int32 replicate_set_num = 5;
  void clear_replicate_set_num();
  static const int kReplicateSetNumFieldNumber = 5;
  ::google::protobuf::int32 replicate_set_num() const;
  void set_replicate_set_num(::google::protobuf::int32 value);

  // int32 secondary_num = 6;
  void clear_secondary_num();
  static const int kSecondaryNumFieldNumber = 6;
  ::google::protobuf::int32 secondary_num() const;
  void set_secondary_num(::google::protobuf::int32 value);

  // .cmongoproto.MongoVersion mongo_version = 7;
  void clear_mongo_version();
  static const int kMongoVersionFieldNumber = 7;
  ::cmongoproto::MongoVersion mongo_version() const;
  void set_mongo_version(::cmongoproto::MongoVersion value);

  // .masterproto.ClusterStatus status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  ::masterproto::ClusterStatus status() const;
  void set_status(::masterproto::ClusterStatus value);

  // .masterproto.MachineType machine_type = 11;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 11;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 cluster_version = 12;
  void clear_cluster_version();
  static const int kClusterVersionFieldNumber = 12;
  ::google::protobuf::int32 cluster_version() const;
  void set_cluster_version(::google::protobuf::int32 value);

  // int32 max_client_conns = 16;
  void clear_max_client_conns();
  static const int kMaxClientConnsFieldNumber = 16;
  ::google::protobuf::int32 max_client_conns() const;
  void set_max_client_conns(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ClusterBaseInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr storage_info_;
  ::google::protobuf::internal::ArenaStringPtr logic_cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ResourceDesc* quota_;
  ::google::protobuf::int64 app_id_;
  int cluster_type_;
  ::google::protobuf::int32 replicate_set_num_;
  ::google::protobuf::int32 secondary_num_;
  int mongo_version_;
  int status_;
  int machine_type_;
  ::google::protobuf::int32 cluster_version_;
  ::google::protobuf::int32 max_client_conns_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterExtraInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ClusterExtraInfo) */ {
 public:
  ClusterExtraInfo();
  virtual ~ClusterExtraInfo();

  ClusterExtraInfo(const ClusterExtraInfo& from);

  inline ClusterExtraInfo& operator=(const ClusterExtraInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterExtraInfo& default_instance();

  static inline const ClusterExtraInfo* internal_default_instance() {
    return reinterpret_cast<const ClusterExtraInfo*>(
               &_ClusterExtraInfo_default_instance_);
  }

  void Swap(ClusterExtraInfo* other);

  // implements Message ----------------------------------------------

  inline ClusterExtraInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterExtraInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterExtraInfo& from);
  void MergeFrom(const ClusterExtraInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterExtraInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string custom_data = 1;
  void clear_custom_data();
  static const int kCustomDataFieldNumber = 1;
  const ::std::string& custom_data() const;
  void set_custom_data(const ::std::string& value);
  #if LANG_CXX11
  void set_custom_data(::std::string&& value);
  #endif
  void set_custom_data(const char* value);
  void set_custom_data(const char* value, size_t size);
  ::std::string* mutable_custom_data();
  ::std::string* release_custom_data();
  void set_allocated_custom_data(::std::string* custom_data);

  // @@protoc_insertion_point(class_scope:masterproto.ClusterExtraInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr custom_data_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReplicateSetInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ReplicateSetInfo) */ {
 public:
  ReplicateSetInfo();
  virtual ~ReplicateSetInfo();

  ReplicateSetInfo(const ReplicateSetInfo& from);

  inline ReplicateSetInfo& operator=(const ReplicateSetInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReplicateSetInfo& default_instance();

  static inline const ReplicateSetInfo* internal_default_instance() {
    return reinterpret_cast<const ReplicateSetInfo*>(
               &_ReplicateSetInfo_default_instance_);
  }

  void Swap(ReplicateSetInfo* other);

  // implements Message ----------------------------------------------

  inline ReplicateSetInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ReplicateSetInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReplicateSetInfo& from);
  void MergeFrom(const ReplicateSetInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReplicateSetInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.ContainerInfo mongod_list = 2;
  int mongod_list_size() const;
  void clear_mongod_list();
  static const int kMongodListFieldNumber = 2;
  const ::masterproto::ContainerInfo& mongod_list(int index) const;
  ::masterproto::ContainerInfo* mutable_mongod_list(int index);
  ::masterproto::ContainerInfo* add_mongod_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_mongod_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      mongod_list() const;

  // repeated .masterproto.ContainerInfo proxy_list = 3;
  int proxy_list_size() const;
  void clear_proxy_list();
  static const int kProxyListFieldNumber = 3;
  const ::masterproto::ContainerInfo& proxy_list(int index) const;
  ::masterproto::ContainerInfo* mutable_proxy_list(int index);
  ::masterproto::ContainerInfo* add_proxy_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_proxy_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      proxy_list() const;

  // string rsName = 1;
  void clear_rsname();
  static const int kRsNameFieldNumber = 1;
  const ::std::string& rsname() const;
  void set_rsname(const ::std::string& value);
  #if LANG_CXX11
  void set_rsname(::std::string&& value);
  #endif
  void set_rsname(const char* value);
  void set_rsname(const char* value, size_t size);
  ::std::string* mutable_rsname();
  ::std::string* release_rsname();
  void set_allocated_rsname(::std::string* rsname);

  // @@protoc_insertion_point(class_scope:masterproto.ReplicateSetInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > mongod_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > proxy_list_;
  ::google::protobuf::internal::ArenaStringPtr rsname_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ClusterInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ClusterInfo) */ {
 public:
  ClusterInfo();
  virtual ~ClusterInfo();

  ClusterInfo(const ClusterInfo& from);

  inline ClusterInfo& operator=(const ClusterInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClusterInfo& default_instance();

  static inline const ClusterInfo* internal_default_instance() {
    return reinterpret_cast<const ClusterInfo*>(
               &_ClusterInfo_default_instance_);
  }

  void Swap(ClusterInfo* other);

  // implements Message ----------------------------------------------

  inline ClusterInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ClusterInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ClusterInfo& from);
  void MergeFrom(const ClusterInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ClusterInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.ReplicateSetInfo rs_list = 2;
  int rs_list_size() const;
  void clear_rs_list();
  static const int kRsListFieldNumber = 2;
  const ::masterproto::ReplicateSetInfo& rs_list(int index) const;
  ::masterproto::ReplicateSetInfo* mutable_rs_list(int index);
  ::masterproto::ReplicateSetInfo* add_rs_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ReplicateSetInfo >*
      mutable_rs_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ReplicateSetInfo >&
      rs_list() const;

  // repeated .masterproto.ContainerInfo mongos_list = 3;
  int mongos_list_size() const;
  void clear_mongos_list();
  static const int kMongosListFieldNumber = 3;
  const ::masterproto::ContainerInfo& mongos_list(int index) const;
  ::masterproto::ContainerInfo* mutable_mongos_list(int index);
  ::masterproto::ContainerInfo* add_mongos_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_mongos_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      mongos_list() const;

  // repeated .masterproto.ContainerInfo config_list = 4;
  int config_list_size() const;
  void clear_config_list();
  static const int kConfigListFieldNumber = 4;
  const ::masterproto::ContainerInfo& config_list(int index) const;
  ::masterproto::ContainerInfo* mutable_config_list(int index);
  ::masterproto::ContainerInfo* add_config_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_config_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      config_list() const;

  // repeated .masterproto.ContainerInfo proxy_list = 5;
  int proxy_list_size() const;
  void clear_proxy_list();
  static const int kProxyListFieldNumber = 5;
  const ::masterproto::ContainerInfo& proxy_list(int index) const;
  ::masterproto::ContainerInfo* mutable_proxy_list(int index);
  ::masterproto::ContainerInfo* add_proxy_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_proxy_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      proxy_list() const;

  // repeated .masterproto.ContainerInfo dynamo_proxy_list = 6;
  int dynamo_proxy_list_size() const;
  void clear_dynamo_proxy_list();
  static const int kDynamoProxyListFieldNumber = 6;
  const ::masterproto::ContainerInfo& dynamo_proxy_list(int index) const;
  ::masterproto::ContainerInfo* mutable_dynamo_proxy_list(int index);
  ::masterproto::ContainerInfo* add_dynamo_proxy_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_dynamo_proxy_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      dynamo_proxy_list() const;

  // .masterproto.ClusterBaseInfo base_info = 1;
  bool has_base_info() const;
  void clear_base_info();
  static const int kBaseInfoFieldNumber = 1;
  const ::masterproto::ClusterBaseInfo& base_info() const;
  ::masterproto::ClusterBaseInfo* mutable_base_info();
  ::masterproto::ClusterBaseInfo* release_base_info();
  void set_allocated_base_info(::masterproto::ClusterBaseInfo* base_info);

  // .masterproto.ClusterExtraInfo extra_info = 7;
  bool has_extra_info() const;
  void clear_extra_info();
  static const int kExtraInfoFieldNumber = 7;
  const ::masterproto::ClusterExtraInfo& extra_info() const;
  ::masterproto::ClusterExtraInfo* mutable_extra_info();
  ::masterproto::ClusterExtraInfo* release_extra_info();
  void set_allocated_extra_info(::masterproto::ClusterExtraInfo* extra_info);

  // @@protoc_insertion_point(class_scope:masterproto.ClusterInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ReplicateSetInfo > rs_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > mongos_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > config_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > proxy_list_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > dynamo_proxy_list_;
  ::masterproto::ClusterBaseInfo* base_info_;
  ::masterproto::ClusterExtraInfo* extra_info_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.JobInfo) */ {
 public:
  JobInfo();
  virtual ~JobInfo();

  JobInfo(const JobInfo& from);

  inline JobInfo& operator=(const JobInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobInfo& default_instance();

  static inline const JobInfo* internal_default_instance() {
    return reinterpret_cast<const JobInfo*>(
               &_JobInfo_default_instance_);
  }

  void Swap(JobInfo* other);

  // implements Message ----------------------------------------------

  inline JobInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  JobInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JobInfo& from);
  void MergeFrom(const JobInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JobInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int64 job_id = 1;
  void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 2;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 2;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // .masterproto.JobStatus job_status = 3;
  void clear_job_status();
  static const int kJobStatusFieldNumber = 3;
  ::masterproto::JobStatus job_status() const;
  void set_job_status(::masterproto::JobStatus value);

  // @@protoc_insertion_point(class_scope:masterproto.JobInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 job_id_;
  int job_type_;
  int job_status_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackupInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BackupInfo) */ {
 public:
  BackupInfo();
  virtual ~BackupInfo();

  BackupInfo(const BackupInfo& from);

  inline BackupInfo& operator=(const BackupInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackupInfo& default_instance();

  static inline const BackupInfo* internal_default_instance() {
    return reinterpret_cast<const BackupInfo*>(
               &_BackupInfo_default_instance_);
  }

  void Swap(BackupInfo* other);

  // implements Message ----------------------------------------------

  inline BackupInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  BackupInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackupInfo& from);
  void MergeFrom(const BackupInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackupInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start_time = 1;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 1;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // string end_time = 2;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 2;
  const ::std::string& end_time() const;
  void set_end_time(const ::std::string& value);
  #if LANG_CXX11
  void set_end_time(::std::string&& value);
  #endif
  void set_end_time(const char* value);
  void set_end_time(const char* value, size_t size);
  ::std::string* mutable_end_time();
  ::std::string* release_end_time();
  void set_allocated_end_time(::std::string* end_time);

  // int64 backup_size = 3;
  void clear_backup_size();
  static const int kBackupSizeFieldNumber = 3;
  ::google::protobuf::int64 backup_size() const;
  void set_backup_size(::google::protobuf::int64 value);

  // int32 backup_num = 4;
  void clear_backup_num();
  static const int kBackupNumFieldNumber = 4;
  ::google::protobuf::int32 backup_num() const;
  void set_backup_num(::google::protobuf::int32 value);

  // bool type = 5;
  void clear_type();
  static const int kTypeFieldNumber = 5;
  bool type() const;
  void set_type(bool value);

  // .masterproto.JobStatus backup_status = 6;
  void clear_backup_status();
  static const int kBackupStatusFieldNumber = 6;
  ::masterproto::JobStatus backup_status() const;
  void set_backup_status(::masterproto::JobStatus value);

  // @@protoc_insertion_point(class_scope:masterproto.BackupInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::internal::ArenaStringPtr end_time_;
  ::google::protobuf::int64 backup_size_;
  ::google::protobuf::int32 backup_num_;
  bool type_;
  int backup_status_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyChgInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ProxyChgInfo) */ {
 public:
  ProxyChgInfo();
  virtual ~ProxyChgInfo();

  ProxyChgInfo(const ProxyChgInfo& from);

  inline ProxyChgInfo& operator=(const ProxyChgInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyChgInfo& default_instance();

  static inline const ProxyChgInfo* internal_default_instance() {
    return reinterpret_cast<const ProxyChgInfo*>(
               &_ProxyChgInfo_default_instance_);
  }

  void Swap(ProxyChgInfo* other);

  // implements Message ----------------------------------------------

  inline ProxyChgInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ProxyChgInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProxyChgInfo& from);
  void MergeFrom(const ProxyChgInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProxyChgInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.ContainerInfo off_work = 2;
  int off_work_size() const;
  void clear_off_work();
  static const int kOffWorkFieldNumber = 2;
  const ::masterproto::ContainerInfo& off_work(int index) const;
  ::masterproto::ContainerInfo* mutable_off_work(int index);
  ::masterproto::ContainerInfo* add_off_work();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_off_work();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      off_work() const;

  // repeated .masterproto.ContainerInfo on_work = 3;
  int on_work_size() const;
  void clear_on_work();
  static const int kOnWorkFieldNumber = 3;
  const ::masterproto::ContainerInfo& on_work(int index) const;
  ::masterproto::ContainerInfo* mutable_on_work(int index);
  ::masterproto::ContainerInfo* add_on_work();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_on_work();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      on_work() const;

  // string cluster_id = 1;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 1;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // @@protoc_insertion_point(class_scope:masterproto.ProxyChgInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > off_work_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > on_work_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OplogInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.OplogInfo) */ {
 public:
  OplogInfo();
  virtual ~OplogInfo();

  OplogInfo(const OplogInfo& from);

  inline OplogInfo& operator=(const OplogInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OplogInfo& default_instance();

  static inline const OplogInfo* internal_default_instance() {
    return reinterpret_cast<const OplogInfo*>(
               &_OplogInfo_default_instance_);
  }

  void Swap(OplogInfo* other);

  // implements Message ----------------------------------------------

  inline OplogInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  OplogInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OplogInfo& from);
  void MergeFrom(const OplogInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OplogInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string rs_name = 1;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 1;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // uint64 log_size = 2;
  void clear_log_size();
  static const int kLogSizeFieldNumber = 2;
  ::google::protobuf::uint64 log_size() const;
  void set_log_size(::google::protobuf::uint64 value);

  // uint64 used = 3;
  void clear_used();
  static const int kUsedFieldNumber = 3;
  ::google::protobuf::uint64 used() const;
  void set_used(::google::protobuf::uint64 value);

  // int32 time_diff_secs = 4;
  void clear_time_diff_secs();
  static const int kTimeDiffSecsFieldNumber = 4;
  ::google::protobuf::int32 time_diff_secs() const;
  void set_time_diff_secs(::google::protobuf::int32 value);

  // int32 t_first = 5;
  void clear_t_first();
  static const int kTFirstFieldNumber = 5;
  ::google::protobuf::int32 t_first() const;
  void set_t_first(::google::protobuf::int32 value);

  // int64 oplog_first = 7;
  void clear_oplog_first();
  static const int kOplogFirstFieldNumber = 7;
  ::google::protobuf::int64 oplog_first() const;
  void set_oplog_first(::google::protobuf::int64 value);

  // int64 oplog_last = 8;
  void clear_oplog_last();
  static const int kOplogLastFieldNumber = 8;
  ::google::protobuf::int64 oplog_last() const;
  void set_oplog_last(::google::protobuf::int64 value);

  // int32 t_last = 6;
  void clear_t_last();
  static const int kTLastFieldNumber = 6;
  ::google::protobuf::int32 t_last() const;
  void set_t_last(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.OplogInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::google::protobuf::uint64 log_size_;
  ::google::protobuf::uint64 used_;
  ::google::protobuf::int32 time_diff_secs_;
  ::google::protobuf::int32 t_first_;
  ::google::protobuf::int64 oplog_first_;
  ::google::protobuf::int64 oplog_last_;
  ::google::protobuf::int32 t_last_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InterfacePart : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.InterfacePart) */ {
 public:
  InterfacePart();
  virtual ~InterfacePart();

  InterfacePart(const InterfacePart& from);

  inline InterfacePart& operator=(const InterfacePart& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InterfacePart& default_instance();

  static inline const InterfacePart* internal_default_instance() {
    return reinterpret_cast<const InterfacePart*>(
               &_InterfacePart_default_instance_);
  }

  void Swap(InterfacePart* other);

  // implements Message ----------------------------------------------

  inline InterfacePart* New() const PROTOBUF_FINAL { return New(NULL); }

  InterfacePart* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InterfacePart& from);
  void MergeFrom(const InterfacePart& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InterfacePart* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string interfaceName = 1;
  void clear_interfacename();
  static const int kInterfaceNameFieldNumber = 1;
  const ::std::string& interfacename() const;
  void set_interfacename(const ::std::string& value);
  #if LANG_CXX11
  void set_interfacename(::std::string&& value);
  #endif
  void set_interfacename(const char* value);
  void set_interfacename(const char* value, size_t size);
  ::std::string* mutable_interfacename();
  ::std::string* release_interfacename();
  void set_allocated_interfacename(::std::string* interfacename);

  // .masterproto.ProxyChgInfo para = 2;
  bool has_para() const;
  void clear_para();
  static const int kParaFieldNumber = 2;
  const ::masterproto::ProxyChgInfo& para() const;
  ::masterproto::ProxyChgInfo* mutable_para();
  ::masterproto::ProxyChgInfo* release_para();
  void set_allocated_para(::masterproto::ProxyChgInfo* para);

  // @@protoc_insertion_point(class_scope:masterproto.InterfacePart)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr interfacename_;
  ::masterproto::ProxyChgInfo* para_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyChgReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ProxyChgReq) */ {
 public:
  ProxyChgReq();
  virtual ~ProxyChgReq();

  ProxyChgReq(const ProxyChgReq& from);

  inline ProxyChgReq& operator=(const ProxyChgReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyChgReq& default_instance();

  static inline const ProxyChgReq* internal_default_instance() {
    return reinterpret_cast<const ProxyChgReq*>(
               &_ProxyChgReq_default_instance_);
  }

  void Swap(ProxyChgReq* other);

  // implements Message ----------------------------------------------

  inline ProxyChgReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ProxyChgReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProxyChgReq& from);
  void MergeFrom(const ProxyChgReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProxyChgReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string caller = 2;
  void clear_caller();
  static const int kCallerFieldNumber = 2;
  const ::std::string& caller() const;
  void set_caller(const ::std::string& value);
  #if LANG_CXX11
  void set_caller(::std::string&& value);
  #endif
  void set_caller(const char* value);
  void set_caller(const char* value, size_t size);
  ::std::string* mutable_caller();
  ::std::string* release_caller();
  void set_allocated_caller(::std::string* caller);

  // string callee = 3;
  void clear_callee();
  static const int kCalleeFieldNumber = 3;
  const ::std::string& callee() const;
  void set_callee(const ::std::string& value);
  #if LANG_CXX11
  void set_callee(::std::string&& value);
  #endif
  void set_callee(const char* value);
  void set_callee(const char* value, size_t size);
  ::std::string* mutable_callee();
  ::std::string* release_callee();
  void set_allocated_callee(::std::string* callee);

  // string password = 4;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .masterproto.InterfacePart interface = 7;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 7;
  const ::masterproto::InterfacePart& interface() const;
  ::masterproto::InterfacePart* mutable_interface();
  ::masterproto::InterfacePart* release_interface();
  void set_allocated_interface(::masterproto::InterfacePart* interface);

  // int64 event_id = 5;
  void clear_event_id();
  static const int kEventIdFieldNumber = 5;
  ::google::protobuf::int64 event_id() const;
  void set_event_id(::google::protobuf::int64 value);

  // int64 timestamp = 6;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 6;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.ProxyChgReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr caller_;
  ::google::protobuf::internal::ArenaStringPtr callee_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::masterproto::InterfacePart* interface_;
  ::google::protobuf::int64 event_id_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ProxyChgRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ProxyChgRsp) */ {
 public:
  ProxyChgRsp();
  virtual ~ProxyChgRsp();

  ProxyChgRsp(const ProxyChgRsp& from);

  inline ProxyChgRsp& operator=(const ProxyChgRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProxyChgRsp& default_instance();

  static inline const ProxyChgRsp* internal_default_instance() {
    return reinterpret_cast<const ProxyChgRsp*>(
               &_ProxyChgRsp_default_instance_);
  }

  void Swap(ProxyChgRsp* other);

  // implements Message ----------------------------------------------

  inline ProxyChgRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ProxyChgRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProxyChgRsp& from);
  void MergeFrom(const ProxyChgRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProxyChgRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // string caller = 2;
  void clear_caller();
  static const int kCallerFieldNumber = 2;
  const ::std::string& caller() const;
  void set_caller(const ::std::string& value);
  #if LANG_CXX11
  void set_caller(::std::string&& value);
  #endif
  void set_caller(const char* value);
  void set_caller(const char* value, size_t size);
  ::std::string* mutable_caller();
  ::std::string* release_caller();
  void set_allocated_caller(::std::string* caller);

  // string callee = 3;
  void clear_callee();
  static const int kCalleeFieldNumber = 3;
  const ::std::string& callee() const;
  void set_callee(const ::std::string& value);
  #if LANG_CXX11
  void set_callee(::std::string&& value);
  #endif
  void set_callee(const char* value);
  void set_callee(const char* value, size_t size);
  ::std::string* mutable_callee();
  ::std::string* release_callee();
  void set_allocated_callee(::std::string* callee);

  // string return_msg = 7;
  void clear_return_msg();
  static const int kReturnMsgFieldNumber = 7;
  const ::std::string& return_msg() const;
  void set_return_msg(const ::std::string& value);
  #if LANG_CXX11
  void set_return_msg(::std::string&& value);
  #endif
  void set_return_msg(const char* value);
  void set_return_msg(const char* value, size_t size);
  ::std::string* mutable_return_msg();
  ::std::string* release_return_msg();
  void set_allocated_return_msg(::std::string* return_msg);

  // int64 event_id = 4;
  void clear_event_id();
  static const int kEventIdFieldNumber = 4;
  ::google::protobuf::int64 event_id() const;
  void set_event_id(::google::protobuf::int64 value);

  // int64 timestamp = 5;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 5;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // int32 return_code = 6;
  void clear_return_code();
  static const int kReturnCodeFieldNumber = 6;
  ::google::protobuf::int32 return_code() const;
  void set_return_code(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ProxyChgRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr caller_;
  ::google::protobuf::internal::ArenaStringPtr callee_;
  ::google::protobuf::internal::ArenaStringPtr return_msg_;
  ::google::protobuf::int64 event_id_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::int32 return_code_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddResourceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddResourceReq) */ {
 public:
  AddResourceReq();
  virtual ~AddResourceReq();

  AddResourceReq(const AddResourceReq& from);

  inline AddResourceReq& operator=(const AddResourceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResourceReq& default_instance();

  static inline const AddResourceReq* internal_default_instance() {
    return reinterpret_cast<const AddResourceReq*>(
               &_AddResourceReq_default_instance_);
  }

  void Swap(AddResourceReq* other);

  // implements Message ----------------------------------------------

  inline AddResourceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddResourceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddResourceReq& from);
  void MergeFrom(const AddResourceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddResourceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string machine_ip = 2;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 2;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // string worker_version = 11;
  void clear_worker_version();
  static const int kWorkerVersionFieldNumber = 11;
  const ::std::string& worker_version() const;
  void set_worker_version(const ::std::string& value);
  #if LANG_CXX11
  void set_worker_version(::std::string&& value);
  #endif
  void set_worker_version(const char* value);
  void set_worker_version(const char* value, size_t size);
  ::std::string* mutable_worker_version();
  ::std::string* release_worker_version();
  void set_allocated_worker_version(::std::string* worker_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc res_desc = 6;
  bool has_res_desc() const;
  void clear_res_desc();
  static const int kResDescFieldNumber = 6;
  const ::cmongoproto::ResourceDesc& res_desc() const;
  ::cmongoproto::ResourceDesc* mutable_res_desc();
  ::cmongoproto::ResourceDesc* release_res_desc();
  void set_allocated_res_desc(::cmongoproto::ResourceDesc* res_desc);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .masterproto.MachineType machine_type = 5;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 5;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 memory_URV = 7;
  void clear_memory_urv();
  static const int kMemoryURVFieldNumber = 7;
  ::google::protobuf::int32 memory_urv() const;
  void set_memory_urv(::google::protobuf::int32 value);

  // int32 num_URV = 8;
  void clear_num_urv();
  static const int kNumURVFieldNumber = 8;
  ::google::protobuf::int32 num_urv() const;
  void set_num_urv(::google::protobuf::int32 value);

  // int32 idc_id = 9;
  void clear_idc_id();
  static const int kIdcIdFieldNumber = 9;
  ::google::protobuf::int32 idc_id() const;
  void set_idc_id(::google::protobuf::int32 value);

  // int32 rack_id = 10;
  void clear_rack_id();
  static const int kRackIdFieldNumber = 10;
  ::google::protobuf::int32 rack_id() const;
  void set_rack_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.AddResourceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::google::protobuf::internal::ArenaStringPtr worker_version_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* res_desc_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int machine_type_;
  ::google::protobuf::int32 memory_urv_;
  ::google::protobuf::int32 num_urv_;
  ::google::protobuf::int32 idc_id_;
  ::google::protobuf::int32 rack_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddResourceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddResourceRsp) */ {
 public:
  AddResourceRsp();
  virtual ~AddResourceRsp();

  AddResourceRsp(const AddResourceRsp& from);

  inline AddResourceRsp& operator=(const AddResourceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddResourceRsp& default_instance();

  static inline const AddResourceRsp* internal_default_instance() {
    return reinterpret_cast<const AddResourceRsp*>(
               &_AddResourceRsp_default_instance_);
  }

  void Swap(AddResourceRsp* other);

  // implements Message ----------------------------------------------

  inline AddResourceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddResourceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddResourceRsp& from);
  void MergeFrom(const AddResourceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddResourceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.AddResourceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockResourceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BlockResourceReq) */ {
 public:
  BlockResourceReq();
  virtual ~BlockResourceReq();

  BlockResourceReq(const BlockResourceReq& from);

  inline BlockResourceReq& operator=(const BlockResourceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockResourceReq& default_instance();

  static inline const BlockResourceReq* internal_default_instance() {
    return reinterpret_cast<const BlockResourceReq*>(
               &_BlockResourceReq_default_instance_);
  }

  void Swap(BlockResourceReq* other);

  // implements Message ----------------------------------------------

  inline BlockResourceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockResourceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockResourceReq& from);
  void MergeFrom(const BlockResourceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockResourceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string machine_ip = 2;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 2;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.BlockResourceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnblockResourceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.UnblockResourceReq) */ {
 public:
  UnblockResourceReq();
  virtual ~UnblockResourceReq();

  UnblockResourceReq(const UnblockResourceReq& from);

  inline UnblockResourceReq& operator=(const UnblockResourceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnblockResourceReq& default_instance();

  static inline const UnblockResourceReq* internal_default_instance() {
    return reinterpret_cast<const UnblockResourceReq*>(
               &_UnblockResourceReq_default_instance_);
  }

  void Swap(UnblockResourceReq* other);

  // implements Message ----------------------------------------------

  inline UnblockResourceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UnblockResourceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnblockResourceReq& from);
  void MergeFrom(const UnblockResourceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnblockResourceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string machine_ip = 2;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 2;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.UnblockResourceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BlockResourceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BlockResourceRsp) */ {
 public:
  BlockResourceRsp();
  virtual ~BlockResourceRsp();

  BlockResourceRsp(const BlockResourceRsp& from);

  inline BlockResourceRsp& operator=(const BlockResourceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BlockResourceRsp& default_instance();

  static inline const BlockResourceRsp* internal_default_instance() {
    return reinterpret_cast<const BlockResourceRsp*>(
               &_BlockResourceRsp_default_instance_);
  }

  void Swap(BlockResourceRsp* other);

  // implements Message ----------------------------------------------

  inline BlockResourceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BlockResourceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BlockResourceRsp& from);
  void MergeFrom(const BlockResourceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BlockResourceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.BlockResourceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UnblockResourceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.UnblockResourceRsp) */ {
 public:
  UnblockResourceRsp();
  virtual ~UnblockResourceRsp();

  UnblockResourceRsp(const UnblockResourceRsp& from);

  inline UnblockResourceRsp& operator=(const UnblockResourceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnblockResourceRsp& default_instance();

  static inline const UnblockResourceRsp* internal_default_instance() {
    return reinterpret_cast<const UnblockResourceRsp*>(
               &_UnblockResourceRsp_default_instance_);
  }

  void Swap(UnblockResourceRsp* other);

  // implements Message ----------------------------------------------

  inline UnblockResourceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UnblockResourceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UnblockResourceRsp& from);
  void MergeFrom(const UnblockResourceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UnblockResourceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.UnblockResourceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelResourceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelResourceReq) */ {
 public:
  DelResourceReq();
  virtual ~DelResourceReq();

  DelResourceReq(const DelResourceReq& from);

  inline DelResourceReq& operator=(const DelResourceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelResourceReq& default_instance();

  static inline const DelResourceReq* internal_default_instance() {
    return reinterpret_cast<const DelResourceReq*>(
               &_DelResourceReq_default_instance_);
  }

  void Swap(DelResourceReq* other);

  // implements Message ----------------------------------------------

  inline DelResourceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelResourceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelResourceReq& from);
  void MergeFrom(const DelResourceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelResourceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string machine_ip = 2;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 2;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.DelResourceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelResourceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelResourceRsp) */ {
 public:
  DelResourceRsp();
  virtual ~DelResourceRsp();

  DelResourceRsp(const DelResourceRsp& from);

  inline DelResourceRsp& operator=(const DelResourceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelResourceRsp& default_instance();

  static inline const DelResourceRsp* internal_default_instance() {
    return reinterpret_cast<const DelResourceRsp*>(
               &_DelResourceRsp_default_instance_);
  }

  void Swap(DelResourceRsp* other);

  // implements Message ----------------------------------------------

  inline DelResourceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelResourceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelResourceRsp& from);
  void MergeFrom(const DelResourceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelResourceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DelResourceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryResourceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryResourceReq) */ {
 public:
  QueryResourceReq();
  virtual ~QueryResourceReq();

  QueryResourceReq(const QueryResourceReq& from);

  inline QueryResourceReq& operator=(const QueryResourceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResourceReq& default_instance();

  static inline const QueryResourceReq* internal_default_instance() {
    return reinterpret_cast<const QueryResourceReq*>(
               &_QueryResourceReq_default_instance_);
  }

  void Swap(QueryResourceReq* other);

  // implements Message ----------------------------------------------

  inline QueryResourceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryResourceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryResourceReq& from);
  void MergeFrom(const QueryResourceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryResourceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.QueryResourceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryResourceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryResourceRsp) */ {
 public:
  QueryResourceRsp();
  virtual ~QueryResourceRsp();

  QueryResourceRsp(const QueryResourceRsp& from);

  inline QueryResourceRsp& operator=(const QueryResourceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryResourceRsp& default_instance();

  static inline const QueryResourceRsp* internal_default_instance() {
    return reinterpret_cast<const QueryResourceRsp*>(
               &_QueryResourceRsp_default_instance_);
  }

  void Swap(QueryResourceRsp* other);

  // implements Message ----------------------------------------------

  inline QueryResourceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryResourceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryResourceRsp& from);
  void MergeFrom(const QueryResourceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryResourceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.MachineInfo machine_list = 4;
  int machine_list_size() const;
  void clear_machine_list();
  static const int kMachineListFieldNumber = 4;
  const ::masterproto::MachineInfo& machine_list(int index) const;
  ::masterproto::MachineInfo* mutable_machine_list(int index);
  ::masterproto::MachineInfo* add_machine_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >*
      mutable_machine_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >&
      machine_list() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.QueryResourceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo > machine_list_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateContainerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateContainerReq) */ {
 public:
  MigrateContainerReq();
  virtual ~MigrateContainerReq();

  MigrateContainerReq(const MigrateContainerReq& from);

  inline MigrateContainerReq& operator=(const MigrateContainerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateContainerReq& default_instance();

  static inline const MigrateContainerReq* internal_default_instance() {
    return reinterpret_cast<const MigrateContainerReq*>(
               &_MigrateContainerReq_default_instance_);
  }

  void Swap(MigrateContainerReq* other);

  // implements Message ----------------------------------------------

  inline MigrateContainerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateContainerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateContainerReq& from);
  void MergeFrom(const MigrateContainerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateContainerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string machine_ip = 3;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 3;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // string dest_ip = 7;
  void clear_dest_ip();
  static const int kDestIpFieldNumber = 7;
  const ::std::string& dest_ip() const;
  void set_dest_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_ip(::std::string&& value);
  #endif
  void set_dest_ip(const char* value);
  void set_dest_ip(const char* value, size_t size);
  ::std::string* mutable_dest_ip();
  ::std::string* release_dest_ip();
  void set_allocated_dest_ip(::std::string* dest_ip);

  // string proxy_version = 18;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 18;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 19;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 19;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 20;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 20;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc quota = 6;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 6;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // int32 container_id = 4;
  void clear_container_id();
  static const int kContainerIdFieldNumber = 4;
  ::google::protobuf::int32 container_id() const;
  void set_container_id(::google::protobuf::int32 value);

  // int32 container_port = 5;
  void clear_container_port();
  static const int kContainerPortFieldNumber = 5;
  ::google::protobuf::int32 container_port() const;
  void set_container_port(::google::protobuf::int32 value);

  // int32 close_cgroup = 8;
  void clear_close_cgroup();
  static const int kCloseCgroupFieldNumber = 8;
  ::google::protobuf::int32 close_cgroup() const;
  void set_close_cgroup(::google::protobuf::int32 value);

  // .masterproto.MachineType machine_type = 9;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 9;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateContainerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::google::protobuf::internal::ArenaStringPtr dest_ip_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* quota_;
  ::google::protobuf::int32 container_id_;
  ::google::protobuf::int32 container_port_;
  ::google::protobuf::int32 close_cgroup_;
  int machine_type_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateContainerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateContainerRsp) */ {
 public:
  MigrateContainerRsp();
  virtual ~MigrateContainerRsp();

  MigrateContainerRsp(const MigrateContainerRsp& from);

  inline MigrateContainerRsp& operator=(const MigrateContainerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateContainerRsp& default_instance();

  static inline const MigrateContainerRsp* internal_default_instance() {
    return reinterpret_cast<const MigrateContainerRsp*>(
               &_MigrateContainerRsp_default_instance_);
  }

  void Swap(MigrateContainerRsp* other);

  // implements Message ----------------------------------------------

  inline MigrateContainerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateContainerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateContainerRsp& from);
  void MergeFrom(const MigrateContainerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateContainerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.ContainerInfo container = 2;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 2;
  const ::masterproto::ContainerInfo& container() const;
  ::masterproto::ContainerInfo* mutable_container();
  ::masterproto::ContainerInfo* release_container();
  void set_allocated_container(::masterproto::ContainerInfo* container);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateContainerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::masterproto::ContainerInfo* container_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddContainerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddContainerReq) */ {
 public:
  AddContainerReq();
  virtual ~AddContainerReq();

  AddContainerReq(const AddContainerReq& from);

  inline AddContainerReq& operator=(const AddContainerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddContainerReq& default_instance();

  static inline const AddContainerReq* internal_default_instance() {
    return reinterpret_cast<const AddContainerReq*>(
               &_AddContainerReq_default_instance_);
  }

  void Swap(AddContainerReq* other);

  // implements Message ----------------------------------------------

  inline AddContainerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddContainerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddContainerReq& from);
  void MergeFrom(const AddContainerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddContainerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string rs_name = 3;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 3;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // string dest_ip = 7;
  void clear_dest_ip();
  static const int kDestIpFieldNumber = 7;
  const ::std::string& dest_ip() const;
  void set_dest_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_ip(::std::string&& value);
  #endif
  void set_dest_ip(const char* value);
  void set_dest_ip(const char* value, size_t size);
  ::std::string* mutable_dest_ip();
  ::std::string* release_dest_ip();
  void set_allocated_dest_ip(::std::string* dest_ip);

  // string proxy_version = 9;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 9;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 10;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 10;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 11;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 11;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc quota = 5;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 5;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // .masterproto.MachineType machine_type = 4;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 4;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 close_cgroup = 6;
  void clear_close_cgroup();
  static const int kCloseCgroupFieldNumber = 6;
  ::google::protobuf::int32 close_cgroup() const;
  void set_close_cgroup(::google::protobuf::int32 value);

  // .cmongoproto.MongoType container_type = 8;
  void clear_container_type();
  static const int kContainerTypeFieldNumber = 8;
  ::cmongoproto::MongoType container_type() const;
  void set_container_type(::cmongoproto::MongoType value);

  // @@protoc_insertion_point(class_scope:masterproto.AddContainerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::google::protobuf::internal::ArenaStringPtr dest_ip_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* quota_;
  int machine_type_;
  ::google::protobuf::int32 close_cgroup_;
  int container_type_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddContainerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddContainerRsp) */ {
 public:
  AddContainerRsp();
  virtual ~AddContainerRsp();

  AddContainerRsp(const AddContainerRsp& from);

  inline AddContainerRsp& operator=(const AddContainerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddContainerRsp& default_instance();

  static inline const AddContainerRsp* internal_default_instance() {
    return reinterpret_cast<const AddContainerRsp*>(
               &_AddContainerRsp_default_instance_);
  }

  void Swap(AddContainerRsp* other);

  // implements Message ----------------------------------------------

  inline AddContainerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddContainerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddContainerRsp& from);
  void MergeFrom(const AddContainerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddContainerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.ContainerInfo container = 2;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 2;
  const ::masterproto::ContainerInfo& container() const;
  ::masterproto::ContainerInfo* mutable_container();
  ::masterproto::ContainerInfo* release_container();
  void set_allocated_container(::masterproto::ContainerInfo* container);

  // @@protoc_insertion_point(class_scope:masterproto.AddContainerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::masterproto::ContainerInfo* container_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelContainerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelContainerReq) */ {
 public:
  DelContainerReq();
  virtual ~DelContainerReq();

  DelContainerReq(const DelContainerReq& from);

  inline DelContainerReq& operator=(const DelContainerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelContainerReq& default_instance();

  static inline const DelContainerReq* internal_default_instance() {
    return reinterpret_cast<const DelContainerReq*>(
               &_DelContainerReq_default_instance_);
  }

  void Swap(DelContainerReq* other);

  // implements Message ----------------------------------------------

  inline DelContainerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelContainerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelContainerReq& from);
  void MergeFrom(const DelContainerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelContainerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string rs_name = 3;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 3;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .masterproto.ContainerInfo container = 4;
  bool has_container() const;
  void clear_container();
  static const int kContainerFieldNumber = 4;
  const ::masterproto::ContainerInfo& container() const;
  ::masterproto::ContainerInfo* mutable_container();
  ::masterproto::ContainerInfo* release_container();
  void set_allocated_container(::masterproto::ContainerInfo* container);

  // @@protoc_insertion_point(class_scope:masterproto.DelContainerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::cmongoproto::ReqHeader* header_;
  ::masterproto::ContainerInfo* container_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelContainerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelContainerRsp) */ {
 public:
  DelContainerRsp();
  virtual ~DelContainerRsp();

  DelContainerRsp(const DelContainerRsp& from);

  inline DelContainerRsp& operator=(const DelContainerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelContainerRsp& default_instance();

  static inline const DelContainerRsp* internal_default_instance() {
    return reinterpret_cast<const DelContainerRsp*>(
               &_DelContainerRsp_default_instance_);
  }

  void Swap(DelContainerRsp* other);

  // implements Message ----------------------------------------------

  inline DelContainerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelContainerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelContainerRsp& from);
  void MergeFrom(const DelContainerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelContainerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DelContainerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddContainerAsyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddContainerAsyncReq) */ {
 public:
  AddContainerAsyncReq();
  virtual ~AddContainerAsyncReq();

  AddContainerAsyncReq(const AddContainerAsyncReq& from);

  inline AddContainerAsyncReq& operator=(const AddContainerAsyncReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddContainerAsyncReq& default_instance();

  static inline const AddContainerAsyncReq* internal_default_instance() {
    return reinterpret_cast<const AddContainerAsyncReq*>(
               &_AddContainerAsyncReq_default_instance_);
  }

  void Swap(AddContainerAsyncReq* other);

  // implements Message ----------------------------------------------

  inline AddContainerAsyncReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddContainerAsyncReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddContainerAsyncReq& from);
  void MergeFrom(const AddContainerAsyncReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddContainerAsyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string rs_name = 3;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 3;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // string dest_ip = 7;
  void clear_dest_ip();
  static const int kDestIpFieldNumber = 7;
  const ::std::string& dest_ip() const;
  void set_dest_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_ip(::std::string&& value);
  #endif
  void set_dest_ip(const char* value);
  void set_dest_ip(const char* value, size_t size);
  ::std::string* mutable_dest_ip();
  ::std::string* release_dest_ip();
  void set_allocated_dest_ip(::std::string* dest_ip);

  // string proxy_version = 9;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 9;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 10;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 10;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 11;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 11;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc quota = 5;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 5;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // .masterproto.MachineType machine_type = 4;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 4;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 close_cgroup = 6;
  void clear_close_cgroup();
  static const int kCloseCgroupFieldNumber = 6;
  ::google::protobuf::int32 close_cgroup() const;
  void set_close_cgroup(::google::protobuf::int32 value);

  // .cmongoproto.MongoType container_type = 8;
  void clear_container_type();
  static const int kContainerTypeFieldNumber = 8;
  ::cmongoproto::MongoType container_type() const;
  void set_container_type(::cmongoproto::MongoType value);

  // .masterproto.JobType job_type = 13;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 13;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int64 job_id = 12;
  void clear_job_id();
  static const int kJobIdFieldNumber = 12;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.AddContainerAsyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::google::protobuf::internal::ArenaStringPtr dest_ip_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* quota_;
  int machine_type_;
  ::google::protobuf::int32 close_cgroup_;
  int container_type_;
  int job_type_;
  ::google::protobuf::int64 job_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddContainerAsyncRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddContainerAsyncRsp) */ {
 public:
  AddContainerAsyncRsp();
  virtual ~AddContainerAsyncRsp();

  AddContainerAsyncRsp(const AddContainerAsyncRsp& from);

  inline AddContainerAsyncRsp& operator=(const AddContainerAsyncRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddContainerAsyncRsp& default_instance();

  static inline const AddContainerAsyncRsp* internal_default_instance() {
    return reinterpret_cast<const AddContainerAsyncRsp*>(
               &_AddContainerAsyncRsp_default_instance_);
  }

  void Swap(AddContainerAsyncRsp* other);

  // implements Message ----------------------------------------------

  inline AddContainerAsyncRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddContainerAsyncRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddContainerAsyncRsp& from);
  void MergeFrom(const AddContainerAsyncRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddContainerAsyncRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.AddContainerAsyncRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateMachineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateMachineReq) */ {
 public:
  MigrateMachineReq();
  virtual ~MigrateMachineReq();

  MigrateMachineReq(const MigrateMachineReq& from);

  inline MigrateMachineReq& operator=(const MigrateMachineReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateMachineReq& default_instance();

  static inline const MigrateMachineReq* internal_default_instance() {
    return reinterpret_cast<const MigrateMachineReq*>(
               &_MigrateMachineReq_default_instance_);
  }

  void Swap(MigrateMachineReq* other);

  // implements Message ----------------------------------------------

  inline MigrateMachineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateMachineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateMachineReq& from);
  void MergeFrom(const MigrateMachineReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateMachineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string machine_ip = 2;
  void clear_machine_ip();
  static const int kMachineIpFieldNumber = 2;
  const ::std::string& machine_ip() const;
  void set_machine_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_machine_ip(::std::string&& value);
  #endif
  void set_machine_ip(const char* value);
  void set_machine_ip(const char* value, size_t size);
  ::std::string* mutable_machine_ip();
  ::std::string* release_machine_ip();
  void set_allocated_machine_ip(::std::string* machine_ip);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateMachineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr machine_ip_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ContainerPair : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ContainerPair) */ {
 public:
  ContainerPair();
  virtual ~ContainerPair();

  ContainerPair(const ContainerPair& from);

  inline ContainerPair& operator=(const ContainerPair& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ContainerPair& default_instance();

  static inline const ContainerPair* internal_default_instance() {
    return reinterpret_cast<const ContainerPair*>(
               &_ContainerPair_default_instance_);
  }

  void Swap(ContainerPair* other);

  // implements Message ----------------------------------------------

  inline ContainerPair* New() const PROTOBUF_FINAL { return New(NULL); }

  ContainerPair* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ContainerPair& from);
  void MergeFrom(const ContainerPair& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ContainerPair* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .masterproto.ContainerInfo old_container = 1;
  bool has_old_container() const;
  void clear_old_container();
  static const int kOldContainerFieldNumber = 1;
  const ::masterproto::ContainerInfo& old_container() const;
  ::masterproto::ContainerInfo* mutable_old_container();
  ::masterproto::ContainerInfo* release_old_container();
  void set_allocated_old_container(::masterproto::ContainerInfo* old_container);

  // .masterproto.ContainerInfo new_container = 2;
  bool has_new_container() const;
  void clear_new_container();
  static const int kNewContainerFieldNumber = 2;
  const ::masterproto::ContainerInfo& new_container() const;
  ::masterproto::ContainerInfo* mutable_new_container();
  ::masterproto::ContainerInfo* release_new_container();
  void set_allocated_new_container(::masterproto::ContainerInfo* new_container);

  // @@protoc_insertion_point(class_scope:masterproto.ContainerPair)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::masterproto::ContainerInfo* old_container_;
  ::masterproto::ContainerInfo* new_container_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateMachineRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateMachineRsp) */ {
 public:
  MigrateMachineRsp();
  virtual ~MigrateMachineRsp();

  MigrateMachineRsp(const MigrateMachineRsp& from);

  inline MigrateMachineRsp& operator=(const MigrateMachineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateMachineRsp& default_instance();

  static inline const MigrateMachineRsp* internal_default_instance() {
    return reinterpret_cast<const MigrateMachineRsp*>(
               &_MigrateMachineRsp_default_instance_);
  }

  void Swap(MigrateMachineRsp* other);

  // implements Message ----------------------------------------------

  inline MigrateMachineRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateMachineRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateMachineRsp& from);
  void MergeFrom(const MigrateMachineRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateMachineRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.ContainerPair migrated_container_pairs = 2;
  int migrated_container_pairs_size() const;
  void clear_migrated_container_pairs();
  static const int kMigratedContainerPairsFieldNumber = 2;
  const ::masterproto::ContainerPair& migrated_container_pairs(int index) const;
  ::masterproto::ContainerPair* mutable_migrated_container_pairs(int index);
  ::masterproto::ContainerPair* add_migrated_container_pairs();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerPair >*
      mutable_migrated_container_pairs();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerPair >&
      migrated_container_pairs() const;

  // repeated .masterproto.ContainerInfo migrate_failed_containers = 3;
  int migrate_failed_containers_size() const;
  void clear_migrate_failed_containers();
  static const int kMigrateFailedContainersFieldNumber = 3;
  const ::masterproto::ContainerInfo& migrate_failed_containers(int index) const;
  ::masterproto::ContainerInfo* mutable_migrate_failed_containers(int index);
  ::masterproto::ContainerInfo* add_migrate_failed_containers();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
      mutable_migrate_failed_containers();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
      migrate_failed_containers() const;

  // repeated string errors = 4;
  int errors_size() const;
  void clear_errors();
  static const int kErrorsFieldNumber = 4;
  const ::std::string& errors(int index) const;
  ::std::string* mutable_errors(int index);
  void set_errors(int index, const ::std::string& value);
  void set_errors(int index, const char* value);
  void set_errors(int index, const char* value, size_t size);
  ::std::string* add_errors();
  void add_errors(const ::std::string& value);
  void add_errors(const char* value);
  void add_errors(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& errors() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_errors();

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateMachineRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerPair > migrated_container_pairs_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo > migrate_failed_containers_;
  ::google::protobuf::RepeatedPtrField< ::std::string> errors_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryMachineReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryMachineReq) */ {
 public:
  QueryMachineReq();
  virtual ~QueryMachineReq();

  QueryMachineReq(const QueryMachineReq& from);

  inline QueryMachineReq& operator=(const QueryMachineReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryMachineReq& default_instance();

  static inline const QueryMachineReq* internal_default_instance() {
    return reinterpret_cast<const QueryMachineReq*>(
               &_QueryMachineReq_default_instance_);
  }

  void Swap(QueryMachineReq* other);

  // implements Message ----------------------------------------------

  inline QueryMachineReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryMachineReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryMachineReq& from);
  void MergeFrom(const QueryMachineReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryMachineReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string ip_list = 2;
  int ip_list_size() const;
  void clear_ip_list();
  static const int kIpListFieldNumber = 2;
  const ::std::string& ip_list(int index) const;
  ::std::string* mutable_ip_list(int index);
  void set_ip_list(int index, const ::std::string& value);
  void set_ip_list(int index, const char* value);
  void set_ip_list(int index, const char* value, size_t size);
  ::std::string* add_ip_list();
  void add_ip_list(const ::std::string& value);
  void add_ip_list(const char* value);
  void add_ip_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& ip_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_ip_list();

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.QueryMachineReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> ip_list_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryMachineRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryMachineRsp) */ {
 public:
  QueryMachineRsp();
  virtual ~QueryMachineRsp();

  QueryMachineRsp(const QueryMachineRsp& from);

  inline QueryMachineRsp& operator=(const QueryMachineRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryMachineRsp& default_instance();

  static inline const QueryMachineRsp* internal_default_instance() {
    return reinterpret_cast<const QueryMachineRsp*>(
               &_QueryMachineRsp_default_instance_);
  }

  void Swap(QueryMachineRsp* other);

  // implements Message ----------------------------------------------

  inline QueryMachineRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryMachineRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryMachineRsp& from);
  void MergeFrom(const QueryMachineRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryMachineRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.MachineInfo machine_list = 2;
  int machine_list_size() const;
  void clear_machine_list();
  static const int kMachineListFieldNumber = 2;
  const ::masterproto::MachineInfo& machine_list(int index) const;
  ::masterproto::MachineInfo* mutable_machine_list(int index);
  ::masterproto::MachineInfo* add_machine_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >*
      mutable_machine_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >&
      machine_list() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.QueryMachineRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo > machine_list_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateClusterReq) */ {
 public:
  CreateClusterReq();
  virtual ~CreateClusterReq();

  CreateClusterReq(const CreateClusterReq& from);

  inline CreateClusterReq& operator=(const CreateClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterReq& default_instance();

  static inline const CreateClusterReq* internal_default_instance() {
    return reinterpret_cast<const CreateClusterReq*>(
               &_CreateClusterReq_default_instance_);
  }

  void Swap(CreateClusterReq* other);

  // implements Message ----------------------------------------------

  inline CreateClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateClusterReq& from);
  void MergeFrom(const CreateClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 6;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 6;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string proxy_version = 19;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 19;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 20;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 20;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 21;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 21;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc quota = 11;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 11;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // .masterproto.ClusterExtraInfo extra_info = 17;
  bool has_extra_info() const;
  void clear_extra_info();
  static const int kExtraInfoFieldNumber = 17;
  const ::masterproto::ClusterExtraInfo& extra_info() const;
  ::masterproto::ClusterExtraInfo* mutable_extra_info();
  ::masterproto::ClusterExtraInfo* release_extra_info();
  void set_allocated_extra_info(::masterproto::ClusterExtraInfo* extra_info);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // int64 app_id = 3;
  void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 4;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 4;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 5;
  void clear_set_id();
  static const int kSetIdFieldNumber = 5;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // int32 replicate_set_num = 7;
  void clear_replicate_set_num();
  static const int kReplicateSetNumFieldNumber = 7;
  ::google::protobuf::int32 replicate_set_num() const;
  void set_replicate_set_num(::google::protobuf::int32 value);

  // int32 secondary_num = 8;
  void clear_secondary_num();
  static const int kSecondaryNumFieldNumber = 8;
  ::google::protobuf::int32 secondary_num() const;
  void set_secondary_num(::google::protobuf::int32 value);

  // .masterproto.ClusterType cluster_type = 9;
  void clear_cluster_type();
  static const int kClusterTypeFieldNumber = 9;
  ::masterproto::ClusterType cluster_type() const;
  void set_cluster_type(::masterproto::ClusterType value);

  // .masterproto.MachineType machine_type = 10;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 10;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // .cmongoproto.MongoVersion version = 12;
  void clear_version();
  static const int kVersionFieldNumber = 12;
  ::cmongoproto::MongoVersion version() const;
  void set_version(::cmongoproto::MongoVersion value);

  // .masterproto.JobType job_type = 13;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 13;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int32 closeCgroup = 14;
  void clear_closecgroup();
  static const int kCloseCgroupFieldNumber = 14;
  ::google::protobuf::int32 closecgroup() const;
  void set_closecgroup(::google::protobuf::int32 value);

  // int32 proxy_num = 15;
  void clear_proxy_num();
  static const int kProxyNumFieldNumber = 15;
  ::google::protobuf::int32 proxy_num() const;
  void set_proxy_num(::google::protobuf::int32 value);

  // int32 cluster_ver = 16;
  void clear_cluster_ver();
  static const int kClusterVerFieldNumber = 16;
  ::google::protobuf::int32 cluster_ver() const;
  void set_cluster_ver(::google::protobuf::int32 value);

  // int32 use_dynamo = 18;
  void clear_use_dynamo();
  static const int kUseDynamoFieldNumber = 18;
  ::google::protobuf::int32 use_dynamo() const;
  void set_use_dynamo(::google::protobuf::int32 value);

  // int32 max_client_conns = 22;
  void clear_max_client_conns();
  static const int kMaxClientConnsFieldNumber = 22;
  ::google::protobuf::int32 max_client_conns() const;
  void set_max_client_conns(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.CreateClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* quota_;
  ::masterproto::ClusterExtraInfo* extra_info_;
  ::google::protobuf::int64 job_id_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  ::google::protobuf::int32 replicate_set_num_;
  ::google::protobuf::int32 secondary_num_;
  int cluster_type_;
  int machine_type_;
  int version_;
  int job_type_;
  ::google::protobuf::int32 closecgroup_;
  ::google::protobuf::int32 proxy_num_;
  ::google::protobuf::int32 cluster_ver_;
  ::google::protobuf::int32 use_dynamo_;
  ::google::protobuf::int32 max_client_conns_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateClusterRsp) */ {
 public:
  CreateClusterRsp();
  virtual ~CreateClusterRsp();

  CreateClusterRsp(const CreateClusterRsp& from);

  inline CreateClusterRsp& operator=(const CreateClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateClusterRsp& default_instance();

  static inline const CreateClusterRsp* internal_default_instance() {
    return reinterpret_cast<const CreateClusterRsp*>(
               &_CreateClusterRsp_default_instance_);
  }

  void Swap(CreateClusterRsp* other);

  // implements Message ----------------------------------------------

  inline CreateClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateClusterRsp& from);
  void MergeFrom(const CreateClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.CreateClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpgradeClusterModuleReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.UpgradeClusterModuleReq) */ {
 public:
  UpgradeClusterModuleReq();
  virtual ~UpgradeClusterModuleReq();

  UpgradeClusterModuleReq(const UpgradeClusterModuleReq& from);

  inline UpgradeClusterModuleReq& operator=(const UpgradeClusterModuleReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeClusterModuleReq& default_instance();

  static inline const UpgradeClusterModuleReq* internal_default_instance() {
    return reinterpret_cast<const UpgradeClusterModuleReq*>(
               &_UpgradeClusterModuleReq_default_instance_);
  }

  void Swap(UpgradeClusterModuleReq* other);

  // implements Message ----------------------------------------------

  inline UpgradeClusterModuleReq* New() const PROTOBUF_FINAL { return New(NULL); }

  UpgradeClusterModuleReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpgradeClusterModuleReq& from);
  void MergeFrom(const UpgradeClusterModuleReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpgradeClusterModuleReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string container_version = 6;
  void clear_container_version();
  static const int kContainerVersionFieldNumber = 6;
  const ::std::string& container_version() const;
  void set_container_version(const ::std::string& value);
  #if LANG_CXX11
  void set_container_version(::std::string&& value);
  #endif
  void set_container_version(const char* value);
  void set_container_version(const char* value, size_t size);
  ::std::string* mutable_container_version();
  ::std::string* release_container_version();
  void set_allocated_container_version(::std::string* container_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .cmongoproto.MongoType container_type = 5;
  void clear_container_type();
  static const int kContainerTypeFieldNumber = 5;
  ::cmongoproto::MongoType container_type() const;
  void set_container_type(::cmongoproto::MongoType value);

  // int32 restart = 7;
  void clear_restart();
  static const int kRestartFieldNumber = 7;
  ::google::protobuf::int32 restart() const;
  void set_restart(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.UpgradeClusterModuleReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr container_version_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int container_type_;
  ::google::protobuf::int32 restart_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpgradeClusterModuleRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.UpgradeClusterModuleRsp) */ {
 public:
  UpgradeClusterModuleRsp();
  virtual ~UpgradeClusterModuleRsp();

  UpgradeClusterModuleRsp(const UpgradeClusterModuleRsp& from);

  inline UpgradeClusterModuleRsp& operator=(const UpgradeClusterModuleRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpgradeClusterModuleRsp& default_instance();

  static inline const UpgradeClusterModuleRsp* internal_default_instance() {
    return reinterpret_cast<const UpgradeClusterModuleRsp*>(
               &_UpgradeClusterModuleRsp_default_instance_);
  }

  void Swap(UpgradeClusterModuleRsp* other);

  // implements Message ----------------------------------------------

  inline UpgradeClusterModuleRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  UpgradeClusterModuleRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpgradeClusterModuleRsp& from);
  void MergeFrom(const UpgradeClusterModuleRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpgradeClusterModuleRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.UpgradeClusterModuleRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfoClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.InfoClusterReq) */ {
 public:
  InfoClusterReq();
  virtual ~InfoClusterReq();

  InfoClusterReq(const InfoClusterReq& from);

  inline InfoClusterReq& operator=(const InfoClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoClusterReq& default_instance();

  static inline const InfoClusterReq* internal_default_instance() {
    return reinterpret_cast<const InfoClusterReq*>(
               &_InfoClusterReq_default_instance_);
  }

  void Swap(InfoClusterReq* other);

  // implements Message ----------------------------------------------

  inline InfoClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  InfoClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InfoClusterReq& from);
  void MergeFrom(const InfoClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InfoClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 5;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.InfoClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InfoClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.InfoClusterRsp) */ {
 public:
  InfoClusterRsp();
  virtual ~InfoClusterRsp();

  InfoClusterRsp(const InfoClusterRsp& from);

  inline InfoClusterRsp& operator=(const InfoClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InfoClusterRsp& default_instance();

  static inline const InfoClusterRsp* internal_default_instance() {
    return reinterpret_cast<const InfoClusterRsp*>(
               &_InfoClusterRsp_default_instance_);
  }

  void Swap(InfoClusterRsp* other);

  // implements Message ----------------------------------------------

  inline InfoClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  InfoClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InfoClusterRsp& from);
  void MergeFrom(const InfoClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InfoClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.ClusterInfo cluster_info = 2;
  bool has_cluster_info() const;
  void clear_cluster_info();
  static const int kClusterInfoFieldNumber = 2;
  const ::masterproto::ClusterInfo& cluster_info() const;
  ::masterproto::ClusterInfo* mutable_cluster_info();
  ::masterproto::ClusterInfo* release_cluster_info();
  void set_allocated_cluster_info(::masterproto::ClusterInfo* cluster_info);

  // @@protoc_insertion_point(class_scope:masterproto.InfoClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::masterproto::ClusterInfo* cluster_info_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelClusterReq) */ {
 public:
  DelClusterReq();
  virtual ~DelClusterReq();

  DelClusterReq(const DelClusterReq& from);

  inline DelClusterReq& operator=(const DelClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelClusterReq& default_instance();

  static inline const DelClusterReq* internal_default_instance() {
    return reinterpret_cast<const DelClusterReq*>(
               &_DelClusterReq_default_instance_);
  }

  void Swap(DelClusterReq* other);

  // implements Message ----------------------------------------------

  inline DelClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelClusterReq& from);
  void MergeFrom(const DelClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 6;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 6;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // int64 app_id = 3;
  void clear_app_id();
  static const int kAppIdFieldNumber = 3;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 4;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 4;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 5;
  void clear_set_id();
  static const int kSetIdFieldNumber = 5;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .masterproto.JobType job_type = 7;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 7;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // @@protoc_insertion_point(class_scope:masterproto.DelClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int job_type_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelClusterRsp) */ {
 public:
  DelClusterRsp();
  virtual ~DelClusterRsp();

  DelClusterRsp(const DelClusterRsp& from);

  inline DelClusterRsp& operator=(const DelClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelClusterRsp& default_instance();

  static inline const DelClusterRsp* internal_default_instance() {
    return reinterpret_cast<const DelClusterRsp*>(
               &_DelClusterRsp_default_instance_);
  }

  void Swap(DelClusterRsp* other);

  // implements Message ----------------------------------------------

  inline DelClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelClusterRsp& from);
  void MergeFrom(const DelClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DelClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ListClusterReq) */ {
 public:
  ListClusterReq();
  virtual ~ListClusterReq();

  ListClusterReq(const ListClusterReq& from);

  inline ListClusterReq& operator=(const ListClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClusterReq& default_instance();

  static inline const ListClusterReq* internal_default_instance() {
    return reinterpret_cast<const ListClusterReq*>(
               &_ListClusterReq_default_instance_);
  }

  void Swap(ListClusterReq* other);

  // implements Message ----------------------------------------------

  inline ListClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ListClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListClusterReq& from);
  void MergeFrom(const ListClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ListClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ListClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ListClusterRsp) */ {
 public:
  ListClusterRsp();
  virtual ~ListClusterRsp();

  ListClusterRsp(const ListClusterRsp& from);

  inline ListClusterRsp& operator=(const ListClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ListClusterRsp& default_instance();

  static inline const ListClusterRsp* internal_default_instance() {
    return reinterpret_cast<const ListClusterRsp*>(
               &_ListClusterRsp_default_instance_);
  }

  void Swap(ListClusterRsp* other);

  // implements Message ----------------------------------------------

  inline ListClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ListClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ListClusterRsp& from);
  void MergeFrom(const ListClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ListClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.ClusterInfo cluster_list = 5;
  int cluster_list_size() const;
  void clear_cluster_list();
  static const int kClusterListFieldNumber = 5;
  const ::masterproto::ClusterInfo& cluster_list(int index) const;
  ::masterproto::ClusterInfo* mutable_cluster_list(int index);
  ::masterproto::ClusterInfo* add_cluster_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::ClusterInfo >*
      mutable_cluster_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::ClusterInfo >&
      cluster_list() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ListClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::ClusterInfo > cluster_list_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChPasswdReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChPasswdReq) */ {
 public:
  ChPasswdReq();
  virtual ~ChPasswdReq();

  ChPasswdReq(const ChPasswdReq& from);

  inline ChPasswdReq& operator=(const ChPasswdReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChPasswdReq& default_instance();

  static inline const ChPasswdReq* internal_default_instance() {
    return reinterpret_cast<const ChPasswdReq*>(
               &_ChPasswdReq_default_instance_);
  }

  void Swap(ChPasswdReq* other);

  // implements Message ----------------------------------------------

  inline ChPasswdReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChPasswdReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChPasswdReq& from);
  void MergeFrom(const ChPasswdReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChPasswdReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 5;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string user_name = 6;
  void clear_user_name();
  static const int kUserNameFieldNumber = 6;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string old_passwd = 7;
  void clear_old_passwd();
  static const int kOldPasswdFieldNumber = 7;
  const ::std::string& old_passwd() const;
  void set_old_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_old_passwd(::std::string&& value);
  #endif
  void set_old_passwd(const char* value);
  void set_old_passwd(const char* value, size_t size);
  ::std::string* mutable_old_passwd();
  ::std::string* release_old_passwd();
  void set_allocated_old_passwd(::std::string* old_passwd);

  // string new_passwd = 8;
  void clear_new_passwd();
  static const int kNewPasswdFieldNumber = 8;
  const ::std::string& new_passwd() const;
  void set_new_passwd(const ::std::string& value);
  #if LANG_CXX11
  void set_new_passwd(::std::string&& value);
  #endif
  void set_new_passwd(const char* value);
  void set_new_passwd(const char* value, size_t size);
  ::std::string* mutable_new_passwd();
  ::std::string* release_new_passwd();
  void set_allocated_new_passwd(::std::string* new_passwd);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ChPasswdReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr old_passwd_;
  ::google::protobuf::internal::ArenaStringPtr new_passwd_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChPasswdRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChPasswdRsp) */ {
 public:
  ChPasswdRsp();
  virtual ~ChPasswdRsp();

  ChPasswdRsp(const ChPasswdRsp& from);

  inline ChPasswdRsp& operator=(const ChPasswdRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChPasswdRsp& default_instance();

  static inline const ChPasswdRsp* internal_default_instance() {
    return reinterpret_cast<const ChPasswdRsp*>(
               &_ChPasswdRsp_default_instance_);
  }

  void Swap(ChPasswdRsp* other);

  // implements Message ----------------------------------------------

  inline ChPasswdRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChPasswdRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChPasswdRsp& from);
  void MergeFrom(const ChPasswdRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChPasswdRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ChPasswdRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.JobStatusReq) */ {
 public:
  JobStatusReq();
  virtual ~JobStatusReq();

  JobStatusReq(const JobStatusReq& from);

  inline JobStatusReq& operator=(const JobStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobStatusReq& default_instance();

  static inline const JobStatusReq* internal_default_instance() {
    return reinterpret_cast<const JobStatusReq*>(
               &_JobStatusReq_default_instance_);
  }

  void Swap(JobStatusReq* other);

  // implements Message ----------------------------------------------

  inline JobStatusReq* New() const PROTOBUF_FINAL { return New(NULL); }

  JobStatusReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JobStatusReq& from);
  void MergeFrom(const JobStatusReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JobStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.JobStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JobStatusRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.JobStatusRsp) */ {
 public:
  JobStatusRsp();
  virtual ~JobStatusRsp();

  JobStatusRsp(const JobStatusRsp& from);

  inline JobStatusRsp& operator=(const JobStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JobStatusRsp& default_instance();

  static inline const JobStatusRsp* internal_default_instance() {
    return reinterpret_cast<const JobStatusRsp*>(
               &_JobStatusRsp_default_instance_);
  }

  void Swap(JobStatusRsp* other);

  // implements Message ----------------------------------------------

  inline JobStatusRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  JobStatusRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JobStatusRsp& from);
  void MergeFrom(const JobStatusRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JobStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.JobInfo job_info = 2;
  bool has_job_info() const;
  void clear_job_info();
  static const int kJobInfoFieldNumber = 2;
  const ::masterproto::JobInfo& job_info() const;
  ::masterproto::JobInfo* mutable_job_info();
  ::masterproto::JobInfo* release_job_info();
  void set_allocated_job_info(::masterproto::JobInfo* job_info);

  // @@protoc_insertion_point(class_scope:masterproto.JobStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::masterproto::JobInfo* job_info_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResizeClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ResizeClusterReq) */ {
 public:
  ResizeClusterReq();
  virtual ~ResizeClusterReq();

  ResizeClusterReq(const ResizeClusterReq& from);

  inline ResizeClusterReq& operator=(const ResizeClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResizeClusterReq& default_instance();

  static inline const ResizeClusterReq* internal_default_instance() {
    return reinterpret_cast<const ResizeClusterReq*>(
               &_ResizeClusterReq_default_instance_);
  }

  void Swap(ResizeClusterReq* other);

  // implements Message ----------------------------------------------

  inline ResizeClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ResizeClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResizeClusterReq& from);
  void MergeFrom(const ResizeClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResizeClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 7;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 7;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.ResourceDesc quota = 9;
  bool has_quota() const;
  void clear_quota();
  static const int kQuotaFieldNumber = 9;
  const ::cmongoproto::ResourceDesc& quota() const;
  ::cmongoproto::ResourceDesc* mutable_quota();
  ::cmongoproto::ResourceDesc* release_quota();
  void set_allocated_quota(::cmongoproto::ResourceDesc* quota);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // int64 app_id = 4;
  void clear_app_id();
  static const int kAppIdFieldNumber = 4;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 3;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 3;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int32 region_id = 5;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 5;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 6;
  void clear_set_id();
  static const int kSetIdFieldNumber = 6;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .masterproto.MachineType machine_type = 8;
  void clear_machine_type();
  static const int kMachineTypeFieldNumber = 8;
  ::masterproto::MachineType machine_type() const;
  void set_machine_type(::masterproto::MachineType value);

  // int32 close_cgroup = 10;
  void clear_close_cgroup();
  static const int kCloseCgroupFieldNumber = 10;
  ::google::protobuf::int32 close_cgroup() const;
  void set_close_cgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ResizeClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::cmongoproto::ResourceDesc* quota_;
  ::google::protobuf::int64 job_id_;
  ::google::protobuf::int64 app_id_;
  int job_type_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int machine_type_;
  ::google::protobuf::int32 close_cgroup_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResizeClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ResizeClusterRsp) */ {
 public:
  ResizeClusterRsp();
  virtual ~ResizeClusterRsp();

  ResizeClusterRsp(const ResizeClusterRsp& from);

  inline ResizeClusterRsp& operator=(const ResizeClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResizeClusterRsp& default_instance();

  static inline const ResizeClusterRsp* internal_default_instance() {
    return reinterpret_cast<const ResizeClusterRsp*>(
               &_ResizeClusterRsp_default_instance_);
  }

  void Swap(ResizeClusterRsp* other);

  // implements Message ----------------------------------------------

  inline ResizeClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResizeClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResizeClusterRsp& from);
  void MergeFrom(const ResizeClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResizeClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ResizeClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackupClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BackupClusterReq) */ {
 public:
  BackupClusterReq();
  virtual ~BackupClusterReq();

  BackupClusterReq(const BackupClusterReq& from);

  inline BackupClusterReq& operator=(const BackupClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackupClusterReq& default_instance();

  static inline const BackupClusterReq* internal_default_instance() {
    return reinterpret_cast<const BackupClusterReq*>(
               &_BackupClusterReq_default_instance_);
  }

  void Swap(BackupClusterReq* other);

  // implements Message ----------------------------------------------

  inline BackupClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BackupClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackupClusterReq& from);
  void MergeFrom(const BackupClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackupClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 7;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 7;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string db = 10;
  void clear_db();
  static const int kDbFieldNumber = 10;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string table = 11;
  void clear_table();
  static const int kTableFieldNumber = 11;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // int64 app_id = 4;
  void clear_app_id();
  static const int kAppIdFieldNumber = 4;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 3;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 3;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int32 region_id = 5;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 5;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 6;
  void clear_set_id();
  static const int kSetIdFieldNumber = 6;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // bool back_type = 9;
  void clear_back_type();
  static const int kBackTypeFieldNumber = 9;
  bool back_type() const;
  void set_back_type(bool value);

  // int64 peroid = 8;
  void clear_peroid();
  static const int kPeroidFieldNumber = 8;
  ::google::protobuf::int64 peroid() const;
  void set_peroid(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.BackupClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  ::google::protobuf::int64 app_id_;
  int job_type_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  bool back_type_;
  ::google::protobuf::int64 peroid_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BackupClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BackupClusterRsp) */ {
 public:
  BackupClusterRsp();
  virtual ~BackupClusterRsp();

  BackupClusterRsp(const BackupClusterRsp& from);

  inline BackupClusterRsp& operator=(const BackupClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BackupClusterRsp& default_instance();

  static inline const BackupClusterRsp* internal_default_instance() {
    return reinterpret_cast<const BackupClusterRsp*>(
               &_BackupClusterRsp_default_instance_);
  }

  void Swap(BackupClusterRsp* other);

  // implements Message ----------------------------------------------

  inline BackupClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BackupClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BackupClusterRsp& from);
  void MergeFrom(const BackupClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BackupClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string start_time = 2;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 2;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.BackupClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryBackupListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryBackupListReq) */ {
 public:
  QueryBackupListReq();
  virtual ~QueryBackupListReq();

  QueryBackupListReq(const QueryBackupListReq& from);

  inline QueryBackupListReq& operator=(const QueryBackupListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBackupListReq& default_instance();

  static inline const QueryBackupListReq* internal_default_instance() {
    return reinterpret_cast<const QueryBackupListReq*>(
               &_QueryBackupListReq_default_instance_);
  }

  void Swap(QueryBackupListReq* other);

  // implements Message ----------------------------------------------

  inline QueryBackupListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryBackupListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryBackupListReq& from);
  void MergeFrom(const QueryBackupListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryBackupListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 5;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string start_time = 6;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 6;
  const ::std::string& start_time() const;
  void set_start_time(const ::std::string& value);
  #if LANG_CXX11
  void set_start_time(::std::string&& value);
  #endif
  void set_start_time(const char* value);
  void set_start_time(const char* value, size_t size);
  ::std::string* mutable_start_time();
  ::std::string* release_start_time();
  void set_allocated_start_time(::std::string* start_time);

  // string end_time = 7;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 7;
  const ::std::string& end_time() const;
  void set_end_time(const ::std::string& value);
  #if LANG_CXX11
  void set_end_time(::std::string&& value);
  #endif
  void set_end_time(const char* value);
  void set_end_time(const char* value, size_t size);
  ::std::string* mutable_end_time();
  ::std::string* release_end_time();
  void set_allocated_end_time(::std::string* end_time);

  // string db = 8;
  void clear_db();
  static const int kDbFieldNumber = 8;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string table = 9;
  void clear_table();
  static const int kTableFieldNumber = 9;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.QueryBackupListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr start_time_;
  ::google::protobuf::internal::ArenaStringPtr end_time_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryBackupListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryBackupListRsp) */ {
 public:
  QueryBackupListRsp();
  virtual ~QueryBackupListRsp();

  QueryBackupListRsp(const QueryBackupListRsp& from);

  inline QueryBackupListRsp& operator=(const QueryBackupListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryBackupListRsp& default_instance();

  static inline const QueryBackupListRsp* internal_default_instance() {
    return reinterpret_cast<const QueryBackupListRsp*>(
               &_QueryBackupListRsp_default_instance_);
  }

  void Swap(QueryBackupListRsp* other);

  // implements Message ----------------------------------------------

  inline QueryBackupListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryBackupListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryBackupListRsp& from);
  void MergeFrom(const QueryBackupListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryBackupListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.BackupInfo backup_list = 2;
  int backup_list_size() const;
  void clear_backup_list();
  static const int kBackupListFieldNumber = 2;
  const ::masterproto::BackupInfo& backup_list(int index) const;
  ::masterproto::BackupInfo* mutable_backup_list(int index);
  ::masterproto::BackupInfo* add_backup_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::BackupInfo >*
      mutable_backup_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::BackupInfo >&
      backup_list() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.QueryBackupListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::BackupInfo > backup_list_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckRestoreTsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CheckRestoreTsReq) */ {
 public:
  CheckRestoreTsReq();
  virtual ~CheckRestoreTsReq();

  CheckRestoreTsReq(const CheckRestoreTsReq& from);

  inline CheckRestoreTsReq& operator=(const CheckRestoreTsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRestoreTsReq& default_instance();

  static inline const CheckRestoreTsReq* internal_default_instance() {
    return reinterpret_cast<const CheckRestoreTsReq*>(
               &_CheckRestoreTsReq_default_instance_);
  }

  void Swap(CheckRestoreTsReq* other);

  // implements Message ----------------------------------------------

  inline CheckRestoreTsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckRestoreTsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckRestoreTsReq& from);
  void MergeFrom(const CheckRestoreTsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckRestoreTsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 5;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 5;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string time_stamp = 6;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 6;
  const ::std::string& time_stamp() const;
  void set_time_stamp(const ::std::string& value);
  #if LANG_CXX11
  void set_time_stamp(::std::string&& value);
  #endif
  void set_time_stamp(const char* value);
  void set_time_stamp(const char* value, size_t size);
  ::std::string* mutable_time_stamp();
  ::std::string* release_time_stamp();
  void set_allocated_time_stamp(::std::string* time_stamp);

  // string db = 7;
  void clear_db();
  static const int kDbFieldNumber = 7;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string table = 8;
  void clear_table();
  static const int kTableFieldNumber = 8;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 app_id = 2;
  void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // int32 region_id = 3;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 3;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 4;
  void clear_set_id();
  static const int kSetIdFieldNumber = 4;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.CheckRestoreTsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr time_stamp_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 app_id_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CheckRestoreTsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CheckRestoreTsRsp) */ {
 public:
  CheckRestoreTsRsp();
  virtual ~CheckRestoreTsRsp();

  CheckRestoreTsRsp(const CheckRestoreTsRsp& from);

  inline CheckRestoreTsRsp& operator=(const CheckRestoreTsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckRestoreTsRsp& default_instance();

  static inline const CheckRestoreTsRsp* internal_default_instance() {
    return reinterpret_cast<const CheckRestoreTsRsp*>(
               &_CheckRestoreTsRsp_default_instance_);
  }

  void Swap(CheckRestoreTsRsp* other);

  // implements Message ----------------------------------------------

  inline CheckRestoreTsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CheckRestoreTsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CheckRestoreTsRsp& from);
  void MergeFrom(const CheckRestoreTsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CheckRestoreTsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // bool check_result = 2;
  void clear_check_result();
  static const int kCheckResultFieldNumber = 2;
  bool check_result() const;
  void set_check_result(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.CheckRestoreTsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  bool check_result_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestoreClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestoreClusterReq) */ {
 public:
  RestoreClusterReq();
  virtual ~RestoreClusterReq();

  RestoreClusterReq(const RestoreClusterReq& from);

  inline RestoreClusterReq& operator=(const RestoreClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreClusterReq& default_instance();

  static inline const RestoreClusterReq* internal_default_instance() {
    return reinterpret_cast<const RestoreClusterReq*>(
               &_RestoreClusterReq_default_instance_);
  }

  void Swap(RestoreClusterReq* other);

  // implements Message ----------------------------------------------

  inline RestoreClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RestoreClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestoreClusterReq& from);
  void MergeFrom(const RestoreClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestoreClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string src_cluster = 7;
  void clear_src_cluster();
  static const int kSrcClusterFieldNumber = 7;
  const ::std::string& src_cluster() const;
  void set_src_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_src_cluster(::std::string&& value);
  #endif
  void set_src_cluster(const char* value);
  void set_src_cluster(const char* value, size_t size);
  ::std::string* mutable_src_cluster();
  ::std::string* release_src_cluster();
  void set_allocated_src_cluster(::std::string* src_cluster);

  // string dest_cluster = 8;
  void clear_dest_cluster();
  static const int kDestClusterFieldNumber = 8;
  const ::std::string& dest_cluster() const;
  void set_dest_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_cluster(::std::string&& value);
  #endif
  void set_dest_cluster(const char* value);
  void set_dest_cluster(const char* value, size_t size);
  ::std::string* mutable_dest_cluster();
  ::std::string* release_dest_cluster();
  void set_allocated_dest_cluster(::std::string* dest_cluster);

  // string time_stamp = 9;
  void clear_time_stamp();
  static const int kTimeStampFieldNumber = 9;
  const ::std::string& time_stamp() const;
  void set_time_stamp(const ::std::string& value);
  #if LANG_CXX11
  void set_time_stamp(::std::string&& value);
  #endif
  void set_time_stamp(const char* value);
  void set_time_stamp(const char* value, size_t size);
  ::std::string* mutable_time_stamp();
  ::std::string* release_time_stamp();
  void set_allocated_time_stamp(::std::string* time_stamp);

  // string src_db = 10;
  void clear_src_db();
  static const int kSrcDbFieldNumber = 10;
  const ::std::string& src_db() const;
  void set_src_db(const ::std::string& value);
  #if LANG_CXX11
  void set_src_db(::std::string&& value);
  #endif
  void set_src_db(const char* value);
  void set_src_db(const char* value, size_t size);
  ::std::string* mutable_src_db();
  ::std::string* release_src_db();
  void set_allocated_src_db(::std::string* src_db);

  // string src_table = 11;
  void clear_src_table();
  static const int kSrcTableFieldNumber = 11;
  const ::std::string& src_table() const;
  void set_src_table(const ::std::string& value);
  #if LANG_CXX11
  void set_src_table(::std::string&& value);
  #endif
  void set_src_table(const char* value);
  void set_src_table(const char* value, size_t size);
  ::std::string* mutable_src_table();
  ::std::string* release_src_table();
  void set_allocated_src_table(::std::string* src_table);

  // string dst_db = 12;
  void clear_dst_db();
  static const int kDstDbFieldNumber = 12;
  const ::std::string& dst_db() const;
  void set_dst_db(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_db(::std::string&& value);
  #endif
  void set_dst_db(const char* value);
  void set_dst_db(const char* value, size_t size);
  ::std::string* mutable_dst_db();
  ::std::string* release_dst_db();
  void set_allocated_dst_db(::std::string* dst_db);

  // string dst_table = 13;
  void clear_dst_table();
  static const int kDstTableFieldNumber = 13;
  const ::std::string& dst_table() const;
  void set_dst_table(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_table(::std::string&& value);
  #endif
  void set_dst_table(const char* value);
  void set_dst_table(const char* value, size_t size);
  ::std::string* mutable_dst_table();
  ::std::string* release_dst_table();
  void set_allocated_dst_table(::std::string* dst_table);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // int64 app_id = 4;
  void clear_app_id();
  static const int kAppIdFieldNumber = 4;
  ::google::protobuf::int64 app_id() const;
  void set_app_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 3;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 3;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int32 region_id = 5;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 5;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 6;
  void clear_set_id();
  static const int kSetIdFieldNumber = 6;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.RestoreClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_cluster_;
  ::google::protobuf::internal::ArenaStringPtr dest_cluster_;
  ::google::protobuf::internal::ArenaStringPtr time_stamp_;
  ::google::protobuf::internal::ArenaStringPtr src_db_;
  ::google::protobuf::internal::ArenaStringPtr src_table_;
  ::google::protobuf::internal::ArenaStringPtr dst_db_;
  ::google::protobuf::internal::ArenaStringPtr dst_table_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  ::google::protobuf::int64 app_id_;
  int job_type_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestoreClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestoreClusterRsp) */ {
 public:
  RestoreClusterRsp();
  virtual ~RestoreClusterRsp();

  RestoreClusterRsp(const RestoreClusterRsp& from);

  inline RestoreClusterRsp& operator=(const RestoreClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreClusterRsp& default_instance();

  static inline const RestoreClusterRsp* internal_default_instance() {
    return reinterpret_cast<const RestoreClusterRsp*>(
               &_RestoreClusterRsp_default_instance_);
  }

  void Swap(RestoreClusterRsp* other);

  // implements Message ----------------------------------------------

  inline RestoreClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RestoreClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestoreClusterRsp& from);
  void MergeFrom(const RestoreClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestoreClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.RestoreClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExchangeClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ExchangeClusterReq) */ {
 public:
  ExchangeClusterReq();
  virtual ~ExchangeClusterReq();

  ExchangeClusterReq(const ExchangeClusterReq& from);

  inline ExchangeClusterReq& operator=(const ExchangeClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeClusterReq& default_instance();

  static inline const ExchangeClusterReq* internal_default_instance() {
    return reinterpret_cast<const ExchangeClusterReq*>(
               &_ExchangeClusterReq_default_instance_);
  }

  void Swap(ExchangeClusterReq* other);

  // implements Message ----------------------------------------------

  inline ExchangeClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ExchangeClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExchangeClusterReq& from);
  void MergeFrom(const ExchangeClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExchangeClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string src_cluster = 2;
  void clear_src_cluster();
  static const int kSrcClusterFieldNumber = 2;
  const ::std::string& src_cluster() const;
  void set_src_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_src_cluster(::std::string&& value);
  #endif
  void set_src_cluster(const char* value);
  void set_src_cluster(const char* value, size_t size);
  ::std::string* mutable_src_cluster();
  ::std::string* release_src_cluster();
  void set_allocated_src_cluster(::std::string* src_cluster);

  // string dest_cluster = 3;
  void clear_dest_cluster();
  static const int kDestClusterFieldNumber = 3;
  const ::std::string& dest_cluster() const;
  void set_dest_cluster(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_cluster(::std::string&& value);
  #endif
  void set_dest_cluster(const char* value);
  void set_dest_cluster(const char* value, size_t size);
  ::std::string* mutable_dest_cluster();
  ::std::string* release_dest_cluster();
  void set_allocated_dest_cluster(::std::string* dest_cluster);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ExchangeClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_cluster_;
  ::google::protobuf::internal::ArenaStringPtr dest_cluster_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExchangeClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ExchangeClusterRsp) */ {
 public:
  ExchangeClusterRsp();
  virtual ~ExchangeClusterRsp();

  ExchangeClusterRsp(const ExchangeClusterRsp& from);

  inline ExchangeClusterRsp& operator=(const ExchangeClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExchangeClusterRsp& default_instance();

  static inline const ExchangeClusterRsp* internal_default_instance() {
    return reinterpret_cast<const ExchangeClusterRsp*>(
               &_ExchangeClusterRsp_default_instance_);
  }

  void Swap(ExchangeClusterRsp* other);

  // implements Message ----------------------------------------------

  inline ExchangeClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ExchangeClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExchangeClusterRsp& from);
  void MergeFrom(const ExchangeClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExchangeClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ExchangeClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsolationClusterReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.IsolationClusterReq) */ {
 public:
  IsolationClusterReq();
  virtual ~IsolationClusterReq();

  IsolationClusterReq(const IsolationClusterReq& from);

  inline IsolationClusterReq& operator=(const IsolationClusterReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsolationClusterReq& default_instance();

  static inline const IsolationClusterReq* internal_default_instance() {
    return reinterpret_cast<const IsolationClusterReq*>(
               &_IsolationClusterReq_default_instance_);
  }

  void Swap(IsolationClusterReq* other);

  // implements Message ----------------------------------------------

  inline IsolationClusterReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IsolationClusterReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsolationClusterReq& from);
  void MergeFrom(const IsolationClusterReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsolationClusterReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .masterproto.ClusterStatus status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::masterproto::ClusterStatus status() const;
  void set_status(::masterproto::ClusterStatus value);

  // @@protoc_insertion_point(class_scope:masterproto.IsolationClusterReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  int status_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsolationClusterRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.IsolationClusterRsp) */ {
 public:
  IsolationClusterRsp();
  virtual ~IsolationClusterRsp();

  IsolationClusterRsp(const IsolationClusterRsp& from);

  inline IsolationClusterRsp& operator=(const IsolationClusterRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsolationClusterRsp& default_instance();

  static inline const IsolationClusterRsp* internal_default_instance() {
    return reinterpret_cast<const IsolationClusterRsp*>(
               &_IsolationClusterRsp_default_instance_);
  }

  void Swap(IsolationClusterRsp* other);

  // implements Message ----------------------------------------------

  inline IsolationClusterRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IsolationClusterRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsolationClusterRsp& from);
  void MergeFrom(const IsolationClusterRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsolationClusterRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.IsolationClusterRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddRsReq) */ {
 public:
  AddRsReq();
  virtual ~AddRsReq();

  AddRsReq(const AddRsReq& from);

  inline AddRsReq& operator=(const AddRsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRsReq& default_instance();

  static inline const AddRsReq* internal_default_instance() {
    return reinterpret_cast<const AddRsReq*>(
               &_AddRsReq_default_instance_);
  }

  void Swap(AddRsReq* other);

  // implements Message ----------------------------------------------

  inline AddRsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRsReq& from);
  void MergeFrom(const AddRsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 3;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 3;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string rs_name = 4;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 4;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // string proxy_version = 7;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 7;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string mongod_subversion = 8;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 8;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string dynamo_proxy_version = 9;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 9;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 5;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 5;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // int32 closeCgroup = 6;
  void clear_closecgroup();
  static const int kCloseCgroupFieldNumber = 6;
  ::google::protobuf::int32 closecgroup() const;
  void set_closecgroup(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.AddRsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  int job_type_;
  ::google::protobuf::int32 closecgroup_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddRsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AddRsRsp) */ {
 public:
  AddRsRsp();
  virtual ~AddRsRsp();

  AddRsRsp(const AddRsRsp& from);

  inline AddRsRsp& operator=(const AddRsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddRsRsp& default_instance();

  static inline const AddRsRsp* internal_default_instance() {
    return reinterpret_cast<const AddRsRsp*>(
               &_AddRsRsp_default_instance_);
  }

  void Swap(AddRsRsp* other);

  // implements Message ----------------------------------------------

  inline AddRsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  AddRsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddRsRsp& from);
  void MergeFrom(const AddRsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddRsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.AddRsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelRsReq) */ {
 public:
  DelRsReq();
  virtual ~DelRsReq();

  DelRsReq(const DelRsReq& from);

  inline DelRsReq& operator=(const DelRsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRsReq& default_instance();

  static inline const DelRsReq* internal_default_instance() {
    return reinterpret_cast<const DelRsReq*>(
               &_DelRsReq_default_instance_);
  }

  void Swap(DelRsReq* other);

  // implements Message ----------------------------------------------

  inline DelRsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRsReq& from);
  void MergeFrom(const DelRsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 3;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 3;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string rs_name = 4;
  void clear_rs_name();
  static const int kRsNameFieldNumber = 4;
  const ::std::string& rs_name() const;
  void set_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_rs_name(::std::string&& value);
  #endif
  void set_rs_name(const char* value);
  void set_rs_name(const char* value, size_t size);
  ::std::string* mutable_rs_name();
  ::std::string* release_rs_name();
  void set_allocated_rs_name(::std::string* rs_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 job_id = 2;
  void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  ::google::protobuf::int64 job_id() const;
  void set_job_id(::google::protobuf::int64 value);

  // .masterproto.JobType job_type = 5;
  void clear_job_type();
  static const int kJobTypeFieldNumber = 5;
  ::masterproto::JobType job_type() const;
  void set_job_type(::masterproto::JobType value);

  // @@protoc_insertion_point(class_scope:masterproto.DelRsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr rs_name_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 job_id_;
  int job_type_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelRsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelRsRsp) */ {
 public:
  DelRsRsp();
  virtual ~DelRsRsp();

  DelRsRsp(const DelRsRsp& from);

  inline DelRsRsp& operator=(const DelRsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelRsRsp& default_instance();

  static inline const DelRsRsp* internal_default_instance() {
    return reinterpret_cast<const DelRsRsp*>(
               &_DelRsRsp_default_instance_);
  }

  void Swap(DelRsRsp* other);

  // implements Message ----------------------------------------------

  inline DelRsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelRsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelRsRsp& from);
  void MergeFrom(const DelRsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelRsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DelRsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpLogStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.OpLogStatusReq) */ {
 public:
  OpLogStatusReq();
  virtual ~OpLogStatusReq();

  OpLogStatusReq(const OpLogStatusReq& from);

  inline OpLogStatusReq& operator=(const OpLogStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpLogStatusReq& default_instance();

  static inline const OpLogStatusReq* internal_default_instance() {
    return reinterpret_cast<const OpLogStatusReq*>(
               &_OpLogStatusReq_default_instance_);
  }

  void Swap(OpLogStatusReq* other);

  // implements Message ----------------------------------------------

  inline OpLogStatusReq* New() const PROTOBUF_FINAL { return New(NULL); }

  OpLogStatusReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpLogStatusReq& from);
  void MergeFrom(const OpLogStatusReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpLogStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.OpLogStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OpLogStatusRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.OpLogStatusRsp) */ {
 public:
  OpLogStatusRsp();
  virtual ~OpLogStatusRsp();

  OpLogStatusRsp(const OpLogStatusRsp& from);

  inline OpLogStatusRsp& operator=(const OpLogStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OpLogStatusRsp& default_instance();

  static inline const OpLogStatusRsp* internal_default_instance() {
    return reinterpret_cast<const OpLogStatusRsp*>(
               &_OpLogStatusRsp_default_instance_);
  }

  void Swap(OpLogStatusRsp* other);

  // implements Message ----------------------------------------------

  inline OpLogStatusRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  OpLogStatusRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpLogStatusRsp& from);
  void MergeFrom(const OpLogStatusRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpLogStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.OplogInfo oplog_infos = 2;
  int oplog_infos_size() const;
  void clear_oplog_infos();
  static const int kOplogInfosFieldNumber = 2;
  const ::masterproto::OplogInfo& oplog_infos(int index) const;
  ::masterproto::OplogInfo* mutable_oplog_infos(int index);
  ::masterproto::OplogInfo* add_oplog_infos();
  ::google::protobuf::RepeatedPtrField< ::masterproto::OplogInfo >*
      mutable_oplog_infos();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::OplogInfo >&
      oplog_infos() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.OpLogStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::OplogInfo > oplog_infos_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowDbReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ShowDbReq) */ {
 public:
  ShowDbReq();
  virtual ~ShowDbReq();

  ShowDbReq(const ShowDbReq& from);

  inline ShowDbReq& operator=(const ShowDbReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowDbReq& default_instance();

  static inline const ShowDbReq* internal_default_instance() {
    return reinterpret_cast<const ShowDbReq*>(
               &_ShowDbReq_default_instance_);
  }

  void Swap(ShowDbReq* other);

  // implements Message ----------------------------------------------

  inline ShowDbReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowDbReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowDbReq& from);
  void MergeFrom(const ShowDbReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowDbReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ShowDbReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowDbRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ShowDbRsp) */ {
 public:
  ShowDbRsp();
  virtual ~ShowDbRsp();

  ShowDbRsp(const ShowDbRsp& from);

  inline ShowDbRsp& operator=(const ShowDbRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowDbRsp& default_instance();

  static inline const ShowDbRsp* internal_default_instance() {
    return reinterpret_cast<const ShowDbRsp*>(
               &_ShowDbRsp_default_instance_);
  }

  void Swap(ShowDbRsp* other);

  // implements Message ----------------------------------------------

  inline ShowDbRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowDbRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowDbRsp& from);
  void MergeFrom(const ShowDbRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowDbRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string db_list = 2;
  int db_list_size() const;
  void clear_db_list();
  static const int kDbListFieldNumber = 2;
  const ::std::string& db_list(int index) const;
  ::std::string* mutable_db_list(int index);
  void set_db_list(int index, const ::std::string& value);
  void set_db_list(int index, const char* value);
  void set_db_list(int index, const char* value, size_t size);
  ::std::string* add_db_list();
  void add_db_list(const ::std::string& value);
  void add_db_list(const char* value);
  void add_db_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& db_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_db_list();

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ShowDbRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> db_list_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Collection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.Collection) */ {
 public:
  Collection();
  virtual ~Collection();

  Collection(const Collection& from);

  inline Collection& operator=(const Collection& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Collection& default_instance();

  static inline const Collection* internal_default_instance() {
    return reinterpret_cast<const Collection*>(
               &_Collection_default_instance_);
  }

  void Swap(Collection* other);

  // implements Message ----------------------------------------------

  inline Collection* New() const PROTOBUF_FINAL { return New(NULL); }

  Collection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Collection& from);
  void MergeFrom(const Collection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Collection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string coll_list = 1;
  int coll_list_size() const;
  void clear_coll_list();
  static const int kCollListFieldNumber = 1;
  const ::std::string& coll_list(int index) const;
  ::std::string* mutable_coll_list(int index);
  void set_coll_list(int index, const ::std::string& value);
  void set_coll_list(int index, const char* value);
  void set_coll_list(int index, const char* value, size_t size);
  ::std::string* add_coll_list();
  void add_coll_list(const ::std::string& value);
  void add_coll_list(const char* value);
  void add_coll_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& coll_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_coll_list();

  // @@protoc_insertion_point(class_scope:masterproto.Collection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> coll_list_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShowCollsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ShowCollsReq) */ {
 public:
  ShowCollsReq();
  virtual ~ShowCollsReq();

  ShowCollsReq(const ShowCollsReq& from);

  inline ShowCollsReq& operator=(const ShowCollsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCollsReq& default_instance();

  static inline const ShowCollsReq* internal_default_instance() {
    return reinterpret_cast<const ShowCollsReq*>(
               &_ShowCollsReq_default_instance_);
  }

  void Swap(ShowCollsReq* other);

  // implements Message ----------------------------------------------

  inline ShowCollsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCollsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCollsReq& from);
  void MergeFrom(const ShowCollsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCollsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string db_list = 3;
  int db_list_size() const;
  void clear_db_list();
  static const int kDbListFieldNumber = 3;
  const ::std::string& db_list(int index) const;
  ::std::string* mutable_db_list(int index);
  void set_db_list(int index, const ::std::string& value);
  void set_db_list(int index, const char* value);
  void set_db_list(int index, const char* value, size_t size);
  ::std::string* add_db_list();
  void add_db_list(const ::std::string& value);
  void add_db_list(const char* value);
  void add_db_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& db_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_db_list();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ShowCollsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> db_list_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class ShowCollsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ShowCollsRsp) */ {
 public:
  ShowCollsRsp();
  virtual ~ShowCollsRsp();

  ShowCollsRsp(const ShowCollsRsp& from);

  inline ShowCollsRsp& operator=(const ShowCollsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShowCollsRsp& default_instance();

  static inline const ShowCollsRsp* internal_default_instance() {
    return reinterpret_cast<const ShowCollsRsp*>(
               &_ShowCollsRsp_default_instance_);
  }

  void Swap(ShowCollsRsp* other);

  // implements Message ----------------------------------------------

  inline ShowCollsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ShowCollsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShowCollsRsp& from);
  void MergeFrom(const ShowCollsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShowCollsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .masterproto.Collection> database_list = 2;
  int database_list_size() const;
  void clear_database_list();
  static const int kDatabaseListFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::masterproto::Collection >&
      database_list() const;
  ::google::protobuf::Map< ::std::string, ::masterproto::Collection >*
      mutable_database_list();

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ShowCollsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::masterproto::Collection,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      ShowCollsRsp_DatabaseListEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::masterproto::Collection,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > database_list_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSlowQueryReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetSlowQueryReq) */ {
 public:
  GetSlowQueryReq();
  virtual ~GetSlowQueryReq();

  GetSlowQueryReq(const GetSlowQueryReq& from);

  inline GetSlowQueryReq& operator=(const GetSlowQueryReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSlowQueryReq& default_instance();

  static inline const GetSlowQueryReq* internal_default_instance() {
    return reinterpret_cast<const GetSlowQueryReq*>(
               &_GetSlowQueryReq_default_instance_);
  }

  void Swap(GetSlowQueryReq* other);

  // implements Message ----------------------------------------------

  inline GetSlowQueryReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSlowQueryReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSlowQueryReq& from);
  void MergeFrom(const GetSlowQueryReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSlowQueryReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string begin_time = 2;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  const ::std::string& begin_time() const;
  void set_begin_time(const ::std::string& value);
  #if LANG_CXX11
  void set_begin_time(::std::string&& value);
  #endif
  void set_begin_time(const char* value);
  void set_begin_time(const char* value, size_t size);
  ::std::string* mutable_begin_time();
  ::std::string* release_begin_time();
  void set_allocated_begin_time(::std::string* begin_time);

  // string end_time = 3;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  const ::std::string& end_time() const;
  void set_end_time(const ::std::string& value);
  #if LANG_CXX11
  void set_end_time(::std::string&& value);
  #endif
  void set_end_time(const char* value);
  void set_end_time(const char* value, size_t size);
  ::std::string* mutable_end_time();
  ::std::string* release_end_time();
  void set_allocated_end_time(::std::string* end_time);

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 slow_ms = 5;
  void clear_slow_ms();
  static const int kSlowMsFieldNumber = 5;
  ::google::protobuf::int32 slow_ms() const;
  void set_slow_ms(::google::protobuf::int32 value);

  // int32 start = 6;
  void clear_start();
  static const int kStartFieldNumber = 6;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // int32 limit = 7;
  void clear_limit();
  static const int kLimitFieldNumber = 7;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetSlowQueryReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr begin_time_;
  ::google::protobuf::internal::ArenaStringPtr end_time_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 slow_ms_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SlowQueryInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SlowQueryInfo) */ {
 public:
  SlowQueryInfo();
  virtual ~SlowQueryInfo();

  SlowQueryInfo(const SlowQueryInfo& from);

  inline SlowQueryInfo& operator=(const SlowQueryInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SlowQueryInfo& default_instance();

  static inline const SlowQueryInfo* internal_default_instance() {
    return reinterpret_cast<const SlowQueryInfo*>(
               &_SlowQueryInfo_default_instance_);
  }

  void Swap(SlowQueryInfo* other);

  // implements Message ----------------------------------------------

  inline SlowQueryInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  SlowQueryInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SlowQueryInfo& from);
  void MergeFrom(const SlowQueryInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SlowQueryInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string detail = 1;
  void clear_detail();
  static const int kDetailFieldNumber = 1;
  const ::std::string& detail() const;
  void set_detail(const ::std::string& value);
  #if LANG_CXX11
  void set_detail(::std::string&& value);
  #endif
  void set_detail(const char* value);
  void set_detail(const char* value, size_t size);
  ::std::string* mutable_detail();
  ::std::string* release_detail();
  void set_allocated_detail(::std::string* detail);

  // int32 avg_time = 2;
  void clear_avg_time();
  static const int kAvgTimeFieldNumber = 2;
  ::google::protobuf::int32 avg_time() const;
  void set_avg_time(::google::protobuf::int32 value);

  // int32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int32 count() const;
  void set_count(::google::protobuf::int32 value);

  // int32 max_time = 4;
  void clear_max_time();
  static const int kMaxTimeFieldNumber = 4;
  ::google::protobuf::int32 max_time() const;
  void set_max_time(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.SlowQueryInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr detail_;
  ::google::protobuf::int32 avg_time_;
  ::google::protobuf::int32 count_;
  ::google::protobuf::int32 max_time_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetSlowQueryRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetSlowQueryRsp) */ {
 public:
  GetSlowQueryRsp();
  virtual ~GetSlowQueryRsp();

  GetSlowQueryRsp(const GetSlowQueryRsp& from);

  inline GetSlowQueryRsp& operator=(const GetSlowQueryRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetSlowQueryRsp& default_instance();

  static inline const GetSlowQueryRsp* internal_default_instance() {
    return reinterpret_cast<const GetSlowQueryRsp*>(
               &_GetSlowQueryRsp_default_instance_);
  }

  void Swap(GetSlowQueryRsp* other);

  // implements Message ----------------------------------------------

  inline GetSlowQueryRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetSlowQueryRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetSlowQueryRsp& from);
  void MergeFrom(const GetSlowQueryRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetSlowQueryRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string slow_query = 4;
  int slow_query_size() const;
  void clear_slow_query();
  static const int kSlowQueryFieldNumber = 4;
  const ::std::string& slow_query(int index) const;
  ::std::string* mutable_slow_query(int index);
  void set_slow_query(int index, const ::std::string& value);
  void set_slow_query(int index, const char* value);
  void set_slow_query(int index, const char* value, size_t size);
  ::std::string* add_slow_query();
  void add_slow_query(const ::std::string& value);
  void add_slow_query(const char* value);
  void add_slow_query(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& slow_query() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_slow_query();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // int64 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetSlowQueryRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> slow_query_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QrySlowInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QrySlowInfoReq) */ {
 public:
  QrySlowInfoReq();
  virtual ~QrySlowInfoReq();

  QrySlowInfoReq(const QrySlowInfoReq& from);

  inline QrySlowInfoReq& operator=(const QrySlowInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QrySlowInfoReq& default_instance();

  static inline const QrySlowInfoReq* internal_default_instance() {
    return reinterpret_cast<const QrySlowInfoReq*>(
               &_QrySlowInfoReq_default_instance_);
  }

  void Swap(QrySlowInfoReq* other);

  // implements Message ----------------------------------------------

  inline QrySlowInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QrySlowInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QrySlowInfoReq& from);
  void MergeFrom(const QrySlowInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QrySlowInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string begin_time = 2;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 2;
  const ::std::string& begin_time() const;
  void set_begin_time(const ::std::string& value);
  #if LANG_CXX11
  void set_begin_time(::std::string&& value);
  #endif
  void set_begin_time(const char* value);
  void set_begin_time(const char* value, size_t size);
  ::std::string* mutable_begin_time();
  ::std::string* release_begin_time();
  void set_allocated_begin_time(::std::string* begin_time);

  // string end_time = 3;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 3;
  const ::std::string& end_time() const;
  void set_end_time(const ::std::string& value);
  #if LANG_CXX11
  void set_end_time(::std::string&& value);
  #endif
  void set_end_time(const char* value);
  void set_end_time(const char* value, size_t size);
  ::std::string* mutable_end_time();
  ::std::string* release_end_time();
  void set_allocated_end_time(::std::string* end_time);

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 slow_ms = 5;
  void clear_slow_ms();
  static const int kSlowMsFieldNumber = 5;
  ::google::protobuf::int32 slow_ms() const;
  void set_slow_ms(::google::protobuf::int32 value);

  // int32 start = 6;
  void clear_start();
  static const int kStartFieldNumber = 6;
  ::google::protobuf::int32 start() const;
  void set_start(::google::protobuf::int32 value);

  // int32 limit = 7;
  void clear_limit();
  static const int kLimitFieldNumber = 7;
  ::google::protobuf::int32 limit() const;
  void set_limit(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.QrySlowInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr begin_time_;
  ::google::protobuf::internal::ArenaStringPtr end_time_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 slow_ms_;
  ::google::protobuf::int32 start_;
  ::google::protobuf::int32 limit_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------

class QrySlowInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QrySlowInfoRsp) */ {
 public:
  QrySlowInfoRsp();
  virtual ~QrySlowInfoRsp();

  QrySlowInfoRsp(const QrySlowInfoRsp& from);

  inline QrySlowInfoRsp& operator=(const QrySlowInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QrySlowInfoRsp& default_instance();

  static inline const QrySlowInfoRsp* internal_default_instance() {
    return reinterpret_cast<const QrySlowInfoRsp*>(
               &_QrySlowInfoRsp_default_instance_);
  }

  void Swap(QrySlowInfoRsp* other);

  // implements Message ----------------------------------------------

  inline QrySlowInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QrySlowInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QrySlowInfoRsp& from);
  void MergeFrom(const QrySlowInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QrySlowInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .masterproto.SlowQueryInfo> slow_qmap = 4;
  int slow_qmap_size() const;
  void clear_slow_qmap();
  static const int kSlowQmapFieldNumber = 4;
  const ::google::protobuf::Map< ::std::string, ::masterproto::SlowQueryInfo >&
      slow_qmap() const;
  ::google::protobuf::Map< ::std::string, ::masterproto::SlowQueryInfo >*
      mutable_slow_qmap();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // int64 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::int64 count() const;
  void set_count(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.QrySlowInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  typedef ::google::protobuf::internal::MapEntryLite<
      ::std::string, ::masterproto::SlowQueryInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 >
      QrySlowInfoRsp_SlowQmapEntry;
  ::google::protobuf::internal::MapField<
      ::std::string, ::masterproto::SlowQueryInfo,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > slow_qmap_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::int64 count_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthRole : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AuthRole) */ {
 public:
  AuthRole();
  virtual ~AuthRole();

  AuthRole(const AuthRole& from);

  inline AuthRole& operator=(const AuthRole& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthRole& default_instance();

  static inline const AuthRole* internal_default_instance() {
    return reinterpret_cast<const AuthRole*>(
               &_AuthRole_default_instance_);
  }

  void Swap(AuthRole* other);

  // implements Message ----------------------------------------------

  inline AuthRole* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthRole* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthRole& from);
  void MergeFrom(const AuthRole& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthRole* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ns = 1;
  void clear_ns();
  static const int kNsFieldNumber = 1;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // .masterproto.AuthMask mask = 2;
  void clear_mask();
  static const int kMaskFieldNumber = 2;
  ::masterproto::AuthMask mask() const;
  void set_mask(::masterproto::AuthMask value);

  // @@protoc_insertion_point(class_scope:masterproto.AuthRole)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  int mask_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AuthEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.AuthEntry) */ {
 public:
  AuthEntry();
  virtual ~AuthEntry();

  AuthEntry(const AuthEntry& from);

  inline AuthEntry& operator=(const AuthEntry& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AuthEntry& default_instance();

  static inline const AuthEntry* internal_default_instance() {
    return reinterpret_cast<const AuthEntry*>(
               &_AuthEntry_default_instance_);
  }

  void Swap(AuthEntry* other);

  // implements Message ----------------------------------------------

  inline AuthEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  AuthEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AuthEntry& from);
  void MergeFrom(const AuthEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AuthEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.AuthRole roles = 2;
  int roles_size() const;
  void clear_roles();
  static const int kRolesFieldNumber = 2;
  const ::masterproto::AuthRole& roles(int index) const;
  ::masterproto::AuthRole* mutable_roles(int index);
  ::masterproto::AuthRole* add_roles();
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
      mutable_roles();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
      roles() const;

  // string user = 1;
  void clear_user();
  static const int kUserFieldNumber = 1;
  const ::std::string& user() const;
  void set_user(const ::std::string& value);
  #if LANG_CXX11
  void set_user(::std::string&& value);
  #endif
  void set_user(const char* value);
  void set_user(const char* value, size_t size);
  ::std::string* mutable_user();
  ::std::string* release_user();
  void set_allocated_user(::std::string* user);

  // @@protoc_insertion_point(class_scope:masterproto.AuthEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole > roles_;
  ::google::protobuf::internal::ArenaStringPtr user_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateUserReq) */ {
 public:
  CreateUserReq();
  virtual ~CreateUserReq();

  CreateUserReq(const CreateUserReq& from);

  inline CreateUserReq& operator=(const CreateUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateUserReq& default_instance();

  static inline const CreateUserReq* internal_default_instance() {
    return reinterpret_cast<const CreateUserReq*>(
               &_CreateUserReq_default_instance_);
  }

  void Swap(CreateUserReq* other);

  // implements Message ----------------------------------------------

  inline CreateUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateUserReq& from);
  void MergeFrom(const CreateUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.AuthRole auth_role = 5;
  int auth_role_size() const;
  void clear_auth_role();
  static const int kAuthRoleFieldNumber = 5;
  const ::masterproto::AuthRole& auth_role(int index) const;
  ::masterproto::AuthRole* mutable_auth_role(int index);
  ::masterproto::AuthRole* add_auth_role();
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
      mutable_auth_role();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
      auth_role() const;

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string user_name = 3;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // string password = 4;
  void clear_password();
  static const int kPasswordFieldNumber = 4;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.CreateUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole > auth_role_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateUserRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateUserRsp) */ {
 public:
  CreateUserRsp();
  virtual ~CreateUserRsp();

  CreateUserRsp(const CreateUserRsp& from);

  inline CreateUserRsp& operator=(const CreateUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateUserRsp& default_instance();

  static inline const CreateUserRsp* internal_default_instance() {
    return reinterpret_cast<const CreateUserRsp*>(
               &_CreateUserRsp_default_instance_);
  }

  void Swap(CreateUserRsp* other);

  // implements Message ----------------------------------------------

  inline CreateUserRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateUserRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateUserRsp& from);
  void MergeFrom(const CreateUserRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateUserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.CreateUserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUserListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryUserListReq) */ {
 public:
  QueryUserListReq();
  virtual ~QueryUserListReq();

  QueryUserListReq(const QueryUserListReq& from);

  inline QueryUserListReq& operator=(const QueryUserListReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserListReq& default_instance();

  static inline const QueryUserListReq* internal_default_instance() {
    return reinterpret_cast<const QueryUserListReq*>(
               &_QueryUserListReq_default_instance_);
  }

  void Swap(QueryUserListReq* other);

  // implements Message ----------------------------------------------

  inline QueryUserListReq* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUserListReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUserListReq& from);
  void MergeFrom(const QueryUserListReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUserListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.QueryUserListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class QueryUserListRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.QueryUserListRsp) */ {
 public:
  QueryUserListRsp();
  virtual ~QueryUserListRsp();

  QueryUserListRsp(const QueryUserListRsp& from);

  inline QueryUserListRsp& operator=(const QueryUserListRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const QueryUserListRsp& default_instance();

  static inline const QueryUserListRsp* internal_default_instance() {
    return reinterpret_cast<const QueryUserListRsp*>(
               &_QueryUserListRsp_default_instance_);
  }

  void Swap(QueryUserListRsp* other);

  // implements Message ----------------------------------------------

  inline QueryUserListRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  QueryUserListRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const QueryUserListRsp& from);
  void MergeFrom(const QueryUserListRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(QueryUserListRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.AuthEntry auth_list = 2;
  int auth_list_size() const;
  void clear_auth_list();
  static const int kAuthListFieldNumber = 2;
  const ::masterproto::AuthEntry& auth_list(int index) const;
  ::masterproto::AuthEntry* mutable_auth_list(int index);
  ::masterproto::AuthEntry* add_auth_list();
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthEntry >*
      mutable_auth_list();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthEntry >&
      auth_list() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.QueryUserListRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthEntry > auth_list_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteUserReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DeleteUserReq) */ {
 public:
  DeleteUserReq();
  virtual ~DeleteUserReq();

  DeleteUserReq(const DeleteUserReq& from);

  inline DeleteUserReq& operator=(const DeleteUserReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteUserReq& default_instance();

  static inline const DeleteUserReq* internal_default_instance() {
    return reinterpret_cast<const DeleteUserReq*>(
               &_DeleteUserReq_default_instance_);
  }

  void Swap(DeleteUserReq* other);

  // implements Message ----------------------------------------------

  inline DeleteUserReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteUserReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteUserReq& from);
  void MergeFrom(const DeleteUserReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteUserReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string user_name = 3;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DeleteUserReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeleteUserRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DeleteUserRsp) */ {
 public:
  DeleteUserRsp();
  virtual ~DeleteUserRsp();

  DeleteUserRsp(const DeleteUserRsp& from);

  inline DeleteUserRsp& operator=(const DeleteUserRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeleteUserRsp& default_instance();

  static inline const DeleteUserRsp* internal_default_instance() {
    return reinterpret_cast<const DeleteUserRsp*>(
               &_DeleteUserRsp_default_instance_);
  }

  void Swap(DeleteUserRsp* other);

  // implements Message ----------------------------------------------

  inline DeleteUserRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DeleteUserRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeleteUserRsp& from);
  void MergeFrom(const DeleteUserRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeleteUserRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DeleteUserRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetUserAuthReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetUserAuthReq) */ {
 public:
  SetUserAuthReq();
  virtual ~SetUserAuthReq();

  SetUserAuthReq(const SetUserAuthReq& from);

  inline SetUserAuthReq& operator=(const SetUserAuthReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserAuthReq& default_instance();

  static inline const SetUserAuthReq* internal_default_instance() {
    return reinterpret_cast<const SetUserAuthReq*>(
               &_SetUserAuthReq_default_instance_);
  }

  void Swap(SetUserAuthReq* other);

  // implements Message ----------------------------------------------

  inline SetUserAuthReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetUserAuthReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetUserAuthReq& from);
  void MergeFrom(const SetUserAuthReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetUserAuthReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.AuthRole auth_role = 4;
  int auth_role_size() const;
  void clear_auth_role();
  static const int kAuthRoleFieldNumber = 4;
  const ::masterproto::AuthRole& auth_role(int index) const;
  ::masterproto::AuthRole* mutable_auth_role(int index);
  ::masterproto::AuthRole* add_auth_role();
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
      mutable_auth_role();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
      auth_role() const;

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string user_name = 3;
  void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  const ::std::string& user_name() const;
  void set_user_name(const ::std::string& value);
  #if LANG_CXX11
  void set_user_name(::std::string&& value);
  #endif
  void set_user_name(const char* value);
  void set_user_name(const char* value, size_t size);
  ::std::string* mutable_user_name();
  ::std::string* release_user_name();
  void set_allocated_user_name(::std::string* user_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetUserAuthReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole > auth_role_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr user_name_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetUserAuthRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetUserAuthRsp) */ {
 public:
  SetUserAuthRsp();
  virtual ~SetUserAuthRsp();

  SetUserAuthRsp(const SetUserAuthRsp& from);

  inline SetUserAuthRsp& operator=(const SetUserAuthRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetUserAuthRsp& default_instance();

  static inline const SetUserAuthRsp* internal_default_instance() {
    return reinterpret_cast<const SetUserAuthRsp*>(
               &_SetUserAuthRsp_default_instance_);
  }

  void Swap(SetUserAuthRsp* other);

  // implements Message ----------------------------------------------

  inline SetUserAuthRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetUserAuthRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetUserAuthRsp& from);
  void MergeFrom(const SetUserAuthRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetUserAuthRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetUserAuthRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateTableReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateTableReq) */ {
 public:
  CreateTableReq();
  virtual ~CreateTableReq();

  CreateTableReq(const CreateTableReq& from);

  inline CreateTableReq& operator=(const CreateTableReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableReq& default_instance();

  static inline const CreateTableReq* internal_default_instance() {
    return reinterpret_cast<const CreateTableReq*>(
               &_CreateTableReq_default_instance_);
  }

  void Swap(CreateTableReq* other);

  // implements Message ----------------------------------------------

  inline CreateTableReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateTableReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateTableReq& from);
  void MergeFrom(const CreateTableReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateTableReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string shard_keys = 5;
  int shard_keys_size() const;
  void clear_shard_keys();
  static const int kShardKeysFieldNumber = 5;
  const ::std::string& shard_keys(int index) const;
  ::std::string* mutable_shard_keys(int index);
  void set_shard_keys(int index, const ::std::string& value);
  void set_shard_keys(int index, const char* value);
  void set_shard_keys(int index, const char* value, size_t size);
  ::std::string* add_shard_keys();
  void add_shard_keys(const ::std::string& value);
  void add_shard_keys(const char* value);
  void add_shard_keys(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& shard_keys() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_shard_keys();

  // repeated string shard_list = 7;
  int shard_list_size() const;
  void clear_shard_list();
  static const int kShardListFieldNumber = 7;
  const ::std::string& shard_list(int index) const;
  ::std::string* mutable_shard_list(int index);
  void set_shard_list(int index, const ::std::string& value);
  void set_shard_list(int index, const char* value);
  void set_shard_list(int index, const char* value, size_t size);
  ::std::string* add_shard_list();
  void add_shard_list(const ::std::string& value);
  void add_shard_list(const char* value);
  void add_shard_list(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& shard_list() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_shard_list();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string table_type = 3;
  void clear_table_type();
  static const int kTableTypeFieldNumber = 3;
  const ::std::string& table_type() const;
  void set_table_type(const ::std::string& value);
  #if LANG_CXX11
  void set_table_type(::std::string&& value);
  #endif
  void set_table_type(const char* value);
  void set_table_type(const char* value, size_t size);
  ::std::string* mutable_table_type();
  ::std::string* release_table_type();
  void set_allocated_table_type(::std::string* table_type);

  // string namespace = 4;
  void clear_namespace_();
  static const int kNamespaceFieldNumber = 4;
  const ::std::string& namespace_() const;
  void set_namespace_(const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_(::std::string&& value);
  #endif
  void set_namespace_(const char* value);
  void set_namespace_(const char* value, size_t size);
  ::std::string* mutable_namespace_();
  ::std::string* release_namespace_();
  void set_allocated_namespace_(::std::string* namespace_);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // bool is_uniq_key = 6;
  void clear_is_uniq_key();
  static const int kIsUniqKeyFieldNumber = 6;
  bool is_uniq_key() const;
  void set_is_uniq_key(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.CreateTableReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> shard_keys_;
  ::google::protobuf::RepeatedPtrField< ::std::string> shard_list_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr table_type_;
  ::google::protobuf::internal::ArenaStringPtr namespace__;
  ::cmongoproto::ReqHeader* header_;
  bool is_uniq_key_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateTableRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CreateTableRsp) */ {
 public:
  CreateTableRsp();
  virtual ~CreateTableRsp();

  CreateTableRsp(const CreateTableRsp& from);

  inline CreateTableRsp& operator=(const CreateTableRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateTableRsp& default_instance();

  static inline const CreateTableRsp* internal_default_instance() {
    return reinterpret_cast<const CreateTableRsp*>(
               &_CreateTableRsp_default_instance_);
  }

  void Swap(CreateTableRsp* other);

  // implements Message ----------------------------------------------

  inline CreateTableRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CreateTableRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CreateTableRsp& from);
  void MergeFrom(const CreateTableRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CreateTableRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.CreateTableRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropTableReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropTableReq) */ {
 public:
  DropTableReq();
  virtual ~DropTableReq();

  DropTableReq(const DropTableReq& from);

  inline DropTableReq& operator=(const DropTableReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropTableReq& default_instance();

  static inline const DropTableReq* internal_default_instance() {
    return reinterpret_cast<const DropTableReq*>(
               &_DropTableReq_default_instance_);
  }

  void Swap(DropTableReq* other);

  // implements Message ----------------------------------------------

  inline DropTableReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DropTableReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropTableReq& from);
  void MergeFrom(const DropTableReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropTableReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string namespace = 3;
  void clear_namespace_();
  static const int kNamespaceFieldNumber = 3;
  const ::std::string& namespace_() const;
  void set_namespace_(const ::std::string& value);
  #if LANG_CXX11
  void set_namespace_(::std::string&& value);
  #endif
  void set_namespace_(const char* value);
  void set_namespace_(const char* value, size_t size);
  ::std::string* mutable_namespace_();
  ::std::string* release_namespace_();
  void set_allocated_namespace_(::std::string* namespace_);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropTableReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr namespace__;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropTableRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropTableRsp) */ {
 public:
  DropTableRsp();
  virtual ~DropTableRsp();

  DropTableRsp(const DropTableRsp& from);

  inline DropTableRsp& operator=(const DropTableRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropTableRsp& default_instance();

  static inline const DropTableRsp* internal_default_instance() {
    return reinterpret_cast<const DropTableRsp*>(
               &_DropTableRsp_default_instance_);
  }

  void Swap(DropTableRsp* other);

  // implements Message ----------------------------------------------

  inline DropTableRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DropTableRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropTableRsp& from);
  void MergeFrom(const DropTableRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropTableRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropTableRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropDatabaseReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropDatabaseReq) */ {
 public:
  DropDatabaseReq();
  virtual ~DropDatabaseReq();

  DropDatabaseReq(const DropDatabaseReq& from);

  inline DropDatabaseReq& operator=(const DropDatabaseReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropDatabaseReq& default_instance();

  static inline const DropDatabaseReq* internal_default_instance() {
    return reinterpret_cast<const DropDatabaseReq*>(
               &_DropDatabaseReq_default_instance_);
  }

  void Swap(DropDatabaseReq* other);

  // implements Message ----------------------------------------------

  inline DropDatabaseReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DropDatabaseReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropDatabaseReq& from);
  void MergeFrom(const DropDatabaseReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropDatabaseReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string db_name = 3;
  void clear_db_name();
  static const int kDbNameFieldNumber = 3;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  #if LANG_CXX11
  void set_db_name(::std::string&& value);
  #endif
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropDatabaseReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropDatabaseRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropDatabaseRsp) */ {
 public:
  DropDatabaseRsp();
  virtual ~DropDatabaseRsp();

  DropDatabaseRsp(const DropDatabaseRsp& from);

  inline DropDatabaseRsp& operator=(const DropDatabaseRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropDatabaseRsp& default_instance();

  static inline const DropDatabaseRsp* internal_default_instance() {
    return reinterpret_cast<const DropDatabaseRsp*>(
               &_DropDatabaseRsp_default_instance_);
  }

  void Swap(DropDatabaseRsp* other);

  // implements Message ----------------------------------------------

  inline DropDatabaseRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DropDatabaseRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropDatabaseRsp& from);
  void MergeFrom(const DropDatabaseRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropDatabaseRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropDatabaseRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnsureIndexReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.EnsureIndexReq) */ {
 public:
  EnsureIndexReq();
  virtual ~EnsureIndexReq();

  EnsureIndexReq(const EnsureIndexReq& from);

  inline EnsureIndexReq& operator=(const EnsureIndexReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnsureIndexReq& default_instance();

  static inline const EnsureIndexReq* internal_default_instance() {
    return reinterpret_cast<const EnsureIndexReq*>(
               &_EnsureIndexReq_default_instance_);
  }

  void Swap(EnsureIndexReq* other);

  // implements Message ----------------------------------------------

  inline EnsureIndexReq* New() const PROTOBUF_FINAL { return New(NULL); }

  EnsureIndexReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnsureIndexReq& from);
  void MergeFrom(const EnsureIndexReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnsureIndexReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string key = 4;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key(int index) const;
  ::std::string* mutable_key(int index);
  void set_key(int index, const ::std::string& value);
  void set_key(int index, const char* value);
  void set_key(int index, const char* value, size_t size);
  ::std::string* add_key();
  void add_key(const ::std::string& value);
  void add_key(const char* value);
  void add_key(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 3;
  void clear_ns();
  static const int kNsFieldNumber = 3;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string name = 10;
  void clear_name();
  static const int kNameFieldNumber = 10;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // bool unique = 5;
  void clear_unique();
  static const int kUniqueFieldNumber = 5;
  bool unique() const;
  void set_unique(bool value);

  // bool drop_dups = 6;
  void clear_drop_dups();
  static const int kDropDupsFieldNumber = 6;
  bool drop_dups() const;
  void set_drop_dups(bool value);

  // bool background = 7;
  void clear_background();
  static const int kBackgroundFieldNumber = 7;
  bool background() const;
  void set_background(bool value);

  // bool sparse = 8;
  void clear_sparse();
  static const int kSparseFieldNumber = 8;
  bool sparse() const;
  void set_sparse(bool value);

  // int32 expire_after = 9;
  void clear_expire_after();
  static const int kExpireAfterFieldNumber = 9;
  ::google::protobuf::int32 expire_after() const;
  void set_expire_after(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.EnsureIndexReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::cmongoproto::ReqHeader* header_;
  bool unique_;
  bool drop_dups_;
  bool background_;
  bool sparse_;
  ::google::protobuf::int32 expire_after_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnsureIndexRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.EnsureIndexRsp) */ {
 public:
  EnsureIndexRsp();
  virtual ~EnsureIndexRsp();

  EnsureIndexRsp(const EnsureIndexRsp& from);

  inline EnsureIndexRsp& operator=(const EnsureIndexRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnsureIndexRsp& default_instance();

  static inline const EnsureIndexRsp* internal_default_instance() {
    return reinterpret_cast<const EnsureIndexRsp*>(
               &_EnsureIndexRsp_default_instance_);
  }

  void Swap(EnsureIndexRsp* other);

  // implements Message ----------------------------------------------

  inline EnsureIndexRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  EnsureIndexRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnsureIndexRsp& from);
  void MergeFrom(const EnsureIndexRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnsureIndexRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.EnsureIndexRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropIndexReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropIndexReq) */ {
 public:
  DropIndexReq();
  virtual ~DropIndexReq();

  DropIndexReq(const DropIndexReq& from);

  inline DropIndexReq& operator=(const DropIndexReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropIndexReq& default_instance();

  static inline const DropIndexReq* internal_default_instance() {
    return reinterpret_cast<const DropIndexReq*>(
               &_DropIndexReq_default_instance_);
  }

  void Swap(DropIndexReq* other);

  // implements Message ----------------------------------------------

  inline DropIndexReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DropIndexReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropIndexReq& from);
  void MergeFrom(const DropIndexReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropIndexReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string key = 4;
  int key_size() const;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key(int index) const;
  ::std::string* mutable_key(int index);
  void set_key(int index, const ::std::string& value);
  void set_key(int index, const char* value);
  void set_key(int index, const char* value, size_t size);
  ::std::string* add_key();
  void add_key(const ::std::string& value);
  void add_key(const char* value);
  void add_key(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_key();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 3;
  void clear_ns();
  static const int kNsFieldNumber = 3;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropIndexReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> key_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropIndexRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropIndexRsp) */ {
 public:
  DropIndexRsp();
  virtual ~DropIndexRsp();

  DropIndexRsp(const DropIndexRsp& from);

  inline DropIndexRsp& operator=(const DropIndexRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropIndexRsp& default_instance();

  static inline const DropIndexRsp* internal_default_instance() {
    return reinterpret_cast<const DropIndexRsp*>(
               &_DropIndexRsp_default_instance_);
  }

  void Swap(DropIndexRsp* other);

  // implements Message ----------------------------------------------

  inline DropIndexRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DropIndexRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropIndexRsp& from);
  void MergeFrom(const DropIndexRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropIndexRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropIndexRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropIndexNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropIndexNameReq) */ {
 public:
  DropIndexNameReq();
  virtual ~DropIndexNameReq();

  DropIndexNameReq(const DropIndexNameReq& from);

  inline DropIndexNameReq& operator=(const DropIndexNameReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropIndexNameReq& default_instance();

  static inline const DropIndexNameReq* internal_default_instance() {
    return reinterpret_cast<const DropIndexNameReq*>(
               &_DropIndexNameReq_default_instance_);
  }

  void Swap(DropIndexNameReq* other);

  // implements Message ----------------------------------------------

  inline DropIndexNameReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DropIndexNameReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropIndexNameReq& from);
  void MergeFrom(const DropIndexNameReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropIndexNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 3;
  void clear_ns();
  static const int kNsFieldNumber = 3;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string key = 4;
  void clear_key();
  static const int kKeyFieldNumber = 4;
  const ::std::string& key() const;
  void set_key(const ::std::string& value);
  #if LANG_CXX11
  void set_key(::std::string&& value);
  #endif
  void set_key(const char* value);
  void set_key(const char* value, size_t size);
  ::std::string* mutable_key();
  ::std::string* release_key();
  void set_allocated_key(::std::string* key);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropIndexNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr key_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DropIndexNameRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DropIndexNameRsp) */ {
 public:
  DropIndexNameRsp();
  virtual ~DropIndexNameRsp();

  DropIndexNameRsp(const DropIndexNameRsp& from);

  inline DropIndexNameRsp& operator=(const DropIndexNameRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DropIndexNameRsp& default_instance();

  static inline const DropIndexNameRsp* internal_default_instance() {
    return reinterpret_cast<const DropIndexNameRsp*>(
               &_DropIndexNameRsp_default_instance_);
  }

  void Swap(DropIndexNameRsp* other);

  // implements Message ----------------------------------------------

  inline DropIndexNameRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DropIndexNameRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DropIndexNameRsp& from);
  void MergeFrom(const DropIndexNameRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DropIndexNameRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DropIndexNameRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateReq) */ {
 public:
  MigrateReq();
  virtual ~MigrateReq();

  MigrateReq(const MigrateReq& from);

  inline MigrateReq& operator=(const MigrateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateReq& default_instance();

  static inline const MigrateReq* internal_default_instance() {
    return reinterpret_cast<const MigrateReq*>(
               &_MigrateReq_default_instance_);
  }

  void Swap(MigrateReq* other);

  // implements Message ----------------------------------------------

  inline MigrateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateReq& from);
  void MergeFrom(const MigrateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 7;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 7;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string src_set_name = 3;
  void clear_src_set_name();
  static const int kSrcSetNameFieldNumber = 3;
  const ::std::string& src_set_name() const;
  void set_src_set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_src_set_name(::std::string&& value);
  #endif
  void set_src_set_name(const char* value);
  void set_src_set_name(const char* value, size_t size);
  ::std::string* mutable_src_set_name();
  ::std::string* release_src_set_name();
  void set_allocated_src_set_name(::std::string* src_set_name);

  // string dst_set_name = 4;
  void clear_dst_set_name();
  static const int kDstSetNameFieldNumber = 4;
  const ::std::string& dst_set_name() const;
  void set_dst_set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_set_name(::std::string&& value);
  #endif
  void set_dst_set_name(const char* value);
  void set_dst_set_name(const char* value, size_t size);
  ::std::string* mutable_dst_set_name();
  ::std::string* release_dst_set_name();
  void set_allocated_dst_set_name(::std::string* dst_set_name);

  // string ns = 5;
  void clear_ns();
  static const int kNsFieldNumber = 5;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string creator = 6;
  void clear_creator();
  static const int kCreatorFieldNumber = 6;
  const ::std::string& creator() const;
  void set_creator(const ::std::string& value);
  #if LANG_CXX11
  void set_creator(::std::string&& value);
  #endif
  void set_creator(const char* value);
  void set_creator(const char* value, size_t size);
  ::std::string* mutable_creator();
  ::std::string* release_creator();
  void set_allocated_creator(::std::string* creator);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // bool auto_clean = 8;
  void clear_auto_clean();
  static const int kAutoCleanFieldNumber = 8;
  bool auto_clean() const;
  void set_auto_clean(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr src_set_name_;
  ::google::protobuf::internal::ArenaStringPtr dst_set_name_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr creator_;
  ::cmongoproto::ReqHeader* header_;
  bool auto_clean_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateRsp) */ {
 public:
  MigrateRsp();
  virtual ~MigrateRsp();

  MigrateRsp(const MigrateRsp& from);

  inline MigrateRsp& operator=(const MigrateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateRsp& default_instance();

  static inline const MigrateRsp* internal_default_instance() {
    return reinterpret_cast<const MigrateRsp*>(
               &_MigrateRsp_default_instance_);
  }

  void Swap(MigrateRsp* other);

  // implements Message ----------------------------------------------

  inline MigrateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateRsp& from);
  void MergeFrom(const MigrateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // uint64 task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CleanMigrateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CleanMigrateReq) */ {
 public:
  CleanMigrateReq();
  virtual ~CleanMigrateReq();

  CleanMigrateReq(const CleanMigrateReq& from);

  inline CleanMigrateReq& operator=(const CleanMigrateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanMigrateReq& default_instance();

  static inline const CleanMigrateReq* internal_default_instance() {
    return reinterpret_cast<const CleanMigrateReq*>(
               &_CleanMigrateReq_default_instance_);
  }

  void Swap(CleanMigrateReq* other);

  // implements Message ----------------------------------------------

  inline CleanMigrateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  CleanMigrateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CleanMigrateReq& from);
  void MergeFrom(const CleanMigrateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CleanMigrateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string sub_task_id = 4;
  void clear_sub_task_id();
  static const int kSubTaskIdFieldNumber = 4;
  const ::std::string& sub_task_id() const;
  void set_sub_task_id(const ::std::string& value);
  #if LANG_CXX11
  void set_sub_task_id(::std::string&& value);
  #endif
  void set_sub_task_id(const char* value);
  void set_sub_task_id(const char* value, size_t size);
  ::std::string* mutable_sub_task_id();
  ::std::string* release_sub_task_id();
  void set_allocated_sub_task_id(::std::string* sub_task_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // uint64 task_id = 3;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 3;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:masterproto.CleanMigrateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr sub_task_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CleanMigrateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.CleanMigrateRsp) */ {
 public:
  CleanMigrateRsp();
  virtual ~CleanMigrateRsp();

  CleanMigrateRsp(const CleanMigrateRsp& from);

  inline CleanMigrateRsp& operator=(const CleanMigrateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CleanMigrateRsp& default_instance();

  static inline const CleanMigrateRsp* internal_default_instance() {
    return reinterpret_cast<const CleanMigrateRsp*>(
               &_CleanMigrateRsp_default_instance_);
  }

  void Swap(CleanMigrateRsp* other);

  // implements Message ----------------------------------------------

  inline CleanMigrateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  CleanMigrateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CleanMigrateRsp& from);
  void MergeFrom(const CleanMigrateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CleanMigrateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.CleanMigrateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMigrateStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetMigrateStatusReq) */ {
 public:
  GetMigrateStatusReq();
  virtual ~GetMigrateStatusReq();

  GetMigrateStatusReq(const GetMigrateStatusReq& from);

  inline GetMigrateStatusReq& operator=(const GetMigrateStatusReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMigrateStatusReq& default_instance();

  static inline const GetMigrateStatusReq* internal_default_instance() {
    return reinterpret_cast<const GetMigrateStatusReq*>(
               &_GetMigrateStatusReq_default_instance_);
  }

  void Swap(GetMigrateStatusReq* other);

  // implements Message ----------------------------------------------

  inline GetMigrateStatusReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMigrateStatusReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMigrateStatusReq& from);
  void MergeFrom(const GetMigrateStatusReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMigrateStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // uint64 task_id = 3;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 3;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetMigrateStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateStatus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateStatus) */ {
 public:
  MigrateStatus();
  virtual ~MigrateStatus();

  MigrateStatus(const MigrateStatus& from);

  inline MigrateStatus& operator=(const MigrateStatus& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateStatus& default_instance();

  static inline const MigrateStatus* internal_default_instance() {
    return reinterpret_cast<const MigrateStatus*>(
               &_MigrateStatus_default_instance_);
  }

  void Swap(MigrateStatus* other);

  // implements Message ----------------------------------------------

  inline MigrateStatus* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateStatus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateStatus& from);
  void MergeFrom(const MigrateStatus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateStatus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 4;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 4;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string src_ip = 1;
  void clear_src_ip();
  static const int kSrcIpFieldNumber = 1;
  const ::std::string& src_ip() const;
  void set_src_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_src_ip(::std::string&& value);
  #endif
  void set_src_ip(const char* value);
  void set_src_ip(const char* value, size_t size);
  ::std::string* mutable_src_ip();
  ::std::string* release_src_ip();
  void set_allocated_src_ip(::std::string* src_ip);

  // string src_set_name = 2;
  void clear_src_set_name();
  static const int kSrcSetNameFieldNumber = 2;
  const ::std::string& src_set_name() const;
  void set_src_set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_src_set_name(::std::string&& value);
  #endif
  void set_src_set_name(const char* value);
  void set_src_set_name(const char* value, size_t size);
  ::std::string* mutable_src_set_name();
  ::std::string* release_src_set_name();
  void set_allocated_src_set_name(::std::string* src_set_name);

  // string dst_set_name = 3;
  void clear_dst_set_name();
  static const int kDstSetNameFieldNumber = 3;
  const ::std::string& dst_set_name() const;
  void set_dst_set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_set_name(::std::string&& value);
  #endif
  void set_dst_set_name(const char* value);
  void set_dst_set_name(const char* value, size_t size);
  ::std::string* mutable_dst_set_name();
  ::std::string* release_dst_set_name();
  void set_allocated_dst_set_name(::std::string* dst_set_name);

  // string ns = 7;
  void clear_ns();
  static const int kNsFieldNumber = 7;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string stage = 8;
  void clear_stage();
  static const int kStageFieldNumber = 8;
  const ::std::string& stage() const;
  void set_stage(const ::std::string& value);
  #if LANG_CXX11
  void set_stage(::std::string&& value);
  #endif
  void set_stage(const char* value);
  void set_stage(const char* value, size_t size);
  ::std::string* mutable_stage();
  ::std::string* release_stage();
  void set_allocated_stage(::std::string* stage);

  // string status = 9;
  void clear_status();
  static const int kStatusFieldNumber = 9;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // uint32 c_time = 5;
  void clear_c_time();
  static const int kCTimeFieldNumber = 5;
  ::google::protobuf::uint32 c_time() const;
  void set_c_time(::google::protobuf::uint32 value);

  // uint32 f_time = 6;
  void clear_f_time();
  static const int kFTimeFieldNumber = 6;
  ::google::protobuf::uint32 f_time() const;
  void set_f_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateStatus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr src_ip_;
  ::google::protobuf::internal::ArenaStringPtr src_set_name_;
  ::google::protobuf::internal::ArenaStringPtr dst_set_name_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr stage_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::uint32 c_time_;
  ::google::protobuf::uint32 f_time_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateGroup) */ {
 public:
  MigrateGroup();
  virtual ~MigrateGroup();

  MigrateGroup(const MigrateGroup& from);

  inline MigrateGroup& operator=(const MigrateGroup& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateGroup& default_instance();

  static inline const MigrateGroup* internal_default_instance() {
    return reinterpret_cast<const MigrateGroup*>(
               &_MigrateGroup_default_instance_);
  }

  void Swap(MigrateGroup* other);

  // implements Message ----------------------------------------------

  inline MigrateGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateGroup& from);
  void MergeFrom(const MigrateGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string sub_task_id = 2;
  int sub_task_id_size() const;
  void clear_sub_task_id();
  static const int kSubTaskIdFieldNumber = 2;
  const ::std::string& sub_task_id(int index) const;
  ::std::string* mutable_sub_task_id(int index);
  void set_sub_task_id(int index, const ::std::string& value);
  void set_sub_task_id(int index, const char* value);
  void set_sub_task_id(int index, const char* value, size_t size);
  ::std::string* add_sub_task_id();
  void add_sub_task_id(const ::std::string& value);
  void add_sub_task_id(const char* value);
  void add_sub_task_id(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& sub_task_id() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_sub_task_id();

  // uint64 task_id = 1;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 1;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> sub_task_id_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetMigrateStatusRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetMigrateStatusRsp) */ {
 public:
  GetMigrateStatusRsp();
  virtual ~GetMigrateStatusRsp();

  GetMigrateStatusRsp(const GetMigrateStatusRsp& from);

  inline GetMigrateStatusRsp& operator=(const GetMigrateStatusRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMigrateStatusRsp& default_instance();

  static inline const GetMigrateStatusRsp* internal_default_instance() {
    return reinterpret_cast<const GetMigrateStatusRsp*>(
               &_GetMigrateStatusRsp_default_instance_);
  }

  void Swap(GetMigrateStatusRsp* other);

  // implements Message ----------------------------------------------

  inline GetMigrateStatusRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetMigrateStatusRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetMigrateStatusRsp& from);
  void MergeFrom(const GetMigrateStatusRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetMigrateStatusRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.MigrateStatus migrate_status = 2;
  int migrate_status_size() const;
  void clear_migrate_status();
  static const int kMigrateStatusFieldNumber = 2;
  const ::masterproto::MigrateStatus& migrate_status(int index) const;
  ::masterproto::MigrateStatus* mutable_migrate_status(int index);
  ::masterproto::MigrateStatus* add_migrate_status();
  ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateStatus >*
      mutable_migrate_status();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateStatus >&
      migrate_status() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetMigrateStatusRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateStatus > migrate_status_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateJob : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateJob) */ {
 public:
  MigrateJob();
  virtual ~MigrateJob();

  MigrateJob(const MigrateJob& from);

  inline MigrateJob& operator=(const MigrateJob& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateJob& default_instance();

  static inline const MigrateJob* internal_default_instance() {
    return reinterpret_cast<const MigrateJob*>(
               &_MigrateJob_default_instance_);
  }

  void Swap(MigrateJob* other);

  // implements Message ----------------------------------------------

  inline MigrateJob* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateJob* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateJob& from);
  void MergeFrom(const MigrateJob& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateJob* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // string stage = 2;
  void clear_stage();
  static const int kStageFieldNumber = 2;
  const ::std::string& stage() const;
  void set_stage(const ::std::string& value);
  #if LANG_CXX11
  void set_stage(::std::string&& value);
  #endif
  void set_stage(const char* value);
  void set_stage(const char* value, size_t size);
  ::std::string* mutable_stage();
  ::std::string* release_stage();
  void set_allocated_stage(::std::string* stage);

  // string status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  const ::std::string& status() const;
  void set_status(const ::std::string& value);
  #if LANG_CXX11
  void set_status(::std::string&& value);
  #endif
  void set_status(const char* value);
  void set_status(const char* value, size_t size);
  ::std::string* mutable_status();
  ::std::string* release_status();
  void set_allocated_status(::std::string* status);

  // string err = 4;
  void clear_err();
  static const int kErrFieldNumber = 4;
  const ::std::string& err() const;
  void set_err(const ::std::string& value);
  #if LANG_CXX11
  void set_err(::std::string&& value);
  #endif
  void set_err(const char* value);
  void set_err(const char* value, size_t size);
  ::std::string* mutable_err();
  ::std::string* release_err();
  void set_allocated_err(::std::string* err);

  // uint64 read_ct = 5;
  void clear_read_ct();
  static const int kReadCtFieldNumber = 5;
  ::google::protobuf::uint64 read_ct() const;
  void set_read_ct(::google::protobuf::uint64 value);

  // uint64 send_ct = 6;
  void clear_send_ct();
  static const int kSendCtFieldNumber = 6;
  ::google::protobuf::uint64 send_ct() const;
  void set_send_ct(::google::protobuf::uint64 value);

  // uint32 version = 7;
  void clear_version();
  static const int kVersionFieldNumber = 7;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateJob)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::google::protobuf::internal::ArenaStringPtr stage_;
  ::google::protobuf::internal::ArenaStringPtr status_;
  ::google::protobuf::internal::ArenaStringPtr err_;
  ::google::protobuf::uint64 read_ct_;
  ::google::protobuf::uint64 send_ct_;
  ::google::protobuf::uint32 version_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportMigrateInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ReportMigrateInfoReq) */ {
 public:
  ReportMigrateInfoReq();
  virtual ~ReportMigrateInfoReq();

  ReportMigrateInfoReq(const ReportMigrateInfoReq& from);

  inline ReportMigrateInfoReq& operator=(const ReportMigrateInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportMigrateInfoReq& default_instance();

  static inline const ReportMigrateInfoReq* internal_default_instance() {
    return reinterpret_cast<const ReportMigrateInfoReq*>(
               &_ReportMigrateInfoReq_default_instance_);
  }

  void Swap(ReportMigrateInfoReq* other);

  // implements Message ----------------------------------------------

  inline ReportMigrateInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportMigrateInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportMigrateInfoReq& from);
  void MergeFrom(const ReportMigrateInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportMigrateInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string session_id = 2;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .masterproto.MigrateJob job = 3;
  bool has_job() const;
  void clear_job();
  static const int kJobFieldNumber = 3;
  const ::masterproto::MigrateJob& job() const;
  ::masterproto::MigrateJob* mutable_job();
  ::masterproto::MigrateJob* release_job();
  void set_allocated_job(::masterproto::MigrateJob* job);

  // @@protoc_insertion_point(class_scope:masterproto.ReportMigrateInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::cmongoproto::ReqHeader* header_;
  ::masterproto::MigrateJob* job_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ReportMigrateInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ReportMigrateInfoRsp) */ {
 public:
  ReportMigrateInfoRsp();
  virtual ~ReportMigrateInfoRsp();

  ReportMigrateInfoRsp(const ReportMigrateInfoRsp& from);

  inline ReportMigrateInfoRsp& operator=(const ReportMigrateInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReportMigrateInfoRsp& default_instance();

  static inline const ReportMigrateInfoRsp* internal_default_instance() {
    return reinterpret_cast<const ReportMigrateInfoRsp*>(
               &_ReportMigrateInfoRsp_default_instance_);
  }

  void Swap(ReportMigrateInfoRsp* other);

  // implements Message ----------------------------------------------

  inline ReportMigrateInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ReportMigrateInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ReportMigrateInfoRsp& from);
  void MergeFrom(const ReportMigrateInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ReportMigrateInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ReportMigrateInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsTableInMigratingReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.IsTableInMigratingReq) */ {
 public:
  IsTableInMigratingReq();
  virtual ~IsTableInMigratingReq();

  IsTableInMigratingReq(const IsTableInMigratingReq& from);

  inline IsTableInMigratingReq& operator=(const IsTableInMigratingReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsTableInMigratingReq& default_instance();

  static inline const IsTableInMigratingReq* internal_default_instance() {
    return reinterpret_cast<const IsTableInMigratingReq*>(
               &_IsTableInMigratingReq_default_instance_);
  }

  void Swap(IsTableInMigratingReq* other);

  // implements Message ----------------------------------------------

  inline IsTableInMigratingReq* New() const PROTOBUF_FINAL { return New(NULL); }

  IsTableInMigratingReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsTableInMigratingReq& from);
  void MergeFrom(const IsTableInMigratingReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsTableInMigratingReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 3;
  void clear_ns();
  static const int kNsFieldNumber = 3;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.IsTableInMigratingReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IsTableInMigratingRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.IsTableInMigratingRsp) */ {
 public:
  IsTableInMigratingRsp();
  virtual ~IsTableInMigratingRsp();

  IsTableInMigratingRsp(const IsTableInMigratingRsp& from);

  inline IsTableInMigratingRsp& operator=(const IsTableInMigratingRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IsTableInMigratingRsp& default_instance();

  static inline const IsTableInMigratingRsp* internal_default_instance() {
    return reinterpret_cast<const IsTableInMigratingRsp*>(
               &_IsTableInMigratingRsp_default_instance_);
  }

  void Swap(IsTableInMigratingRsp* other);

  // implements Message ----------------------------------------------

  inline IsTableInMigratingRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  IsTableInMigratingRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IsTableInMigratingRsp& from);
  void MergeFrom(const IsTableInMigratingRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IsTableInMigratingRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // bool is_migrating = 2;
  void clear_is_migrating();
  static const int kIsMigratingFieldNumber = 2;
  bool is_migrating() const;
  void set_is_migrating(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.IsTableInMigratingRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  bool is_migrating_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestoreFilesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestoreFilesReq) */ {
 public:
  RestoreFilesReq();
  virtual ~RestoreFilesReq();

  RestoreFilesReq(const RestoreFilesReq& from);

  inline RestoreFilesReq& operator=(const RestoreFilesReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreFilesReq& default_instance();

  static inline const RestoreFilesReq* internal_default_instance() {
    return reinterpret_cast<const RestoreFilesReq*>(
               &_RestoreFilesReq_default_instance_);
  }

  void Swap(RestoreFilesReq* other);

  // implements Message ----------------------------------------------

  inline RestoreFilesReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RestoreFilesReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestoreFilesReq& from);
  void MergeFrom(const RestoreFilesReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestoreFilesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string src = 2;
  void clear_src();
  static const int kSrcFieldNumber = 2;
  const ::std::string& src() const;
  void set_src(const ::std::string& value);
  #if LANG_CXX11
  void set_src(::std::string&& value);
  #endif
  void set_src(const char* value);
  void set_src(const char* value, size_t size);
  ::std::string* mutable_src();
  ::std::string* release_src();
  void set_allocated_src(::std::string* src);

  // string db = 4;
  void clear_db();
  static const int kDbFieldNumber = 4;
  const ::std::string& db() const;
  void set_db(const ::std::string& value);
  #if LANG_CXX11
  void set_db(::std::string&& value);
  #endif
  void set_db(const char* value);
  void set_db(const char* value, size_t size);
  ::std::string* mutable_db();
  ::std::string* release_db();
  void set_allocated_db(::std::string* db);

  // string table = 5;
  void clear_table();
  static const int kTableFieldNumber = 5;
  const ::std::string& table() const;
  void set_table(const ::std::string& value);
  #if LANG_CXX11
  void set_table(::std::string&& value);
  #endif
  void set_table(const char* value);
  void set_table(const char* value, size_t size);
  ::std::string* mutable_table();
  ::std::string* release_table();
  void set_allocated_table(::std::string* table);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 ts = 3;
  void clear_ts();
  static const int kTsFieldNumber = 3;
  ::google::protobuf::int64 ts() const;
  void set_ts(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.RestoreFilesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr src_;
  ::google::protobuf::internal::ArenaStringPtr db_;
  ::google::protobuf::internal::ArenaStringPtr table_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 ts_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestoreFilesRes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestoreFilesRes) */ {
 public:
  RestoreFilesRes();
  virtual ~RestoreFilesRes();

  RestoreFilesRes(const RestoreFilesRes& from);

  inline RestoreFilesRes& operator=(const RestoreFilesRes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestoreFilesRes& default_instance();

  static inline const RestoreFilesRes* internal_default_instance() {
    return reinterpret_cast<const RestoreFilesRes*>(
               &_RestoreFilesRes_default_instance_);
  }

  void Swap(RestoreFilesRes* other);

  // implements Message ----------------------------------------------

  inline RestoreFilesRes* New() const PROTOBUF_FINAL { return New(NULL); }

  RestoreFilesRes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestoreFilesRes& from);
  void MergeFrom(const RestoreFilesRes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestoreFilesRes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string incrementFiles = 3;
  int incrementfiles_size() const;
  void clear_incrementfiles();
  static const int kIncrementFilesFieldNumber = 3;
  const ::std::string& incrementfiles(int index) const;
  ::std::string* mutable_incrementfiles(int index);
  void set_incrementfiles(int index, const ::std::string& value);
  void set_incrementfiles(int index, const char* value);
  void set_incrementfiles(int index, const char* value, size_t size);
  ::std::string* add_incrementfiles();
  void add_incrementfiles(const ::std::string& value);
  void add_incrementfiles(const char* value);
  void add_incrementfiles(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& incrementfiles() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_incrementfiles();

  // string snapshotFile = 2;
  void clear_snapshotfile();
  static const int kSnapshotFileFieldNumber = 2;
  const ::std::string& snapshotfile() const;
  void set_snapshotfile(const ::std::string& value);
  #if LANG_CXX11
  void set_snapshotfile(::std::string&& value);
  #endif
  void set_snapshotfile(const char* value);
  void set_snapshotfile(const char* value, size_t size);
  ::std::string* mutable_snapshotfile();
  ::std::string* release_snapshotfile();
  void set_allocated_snapshotfile(::std::string* snapshotfile);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.RestoreFilesRes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> incrementfiles_;
  ::google::protobuf::internal::ArenaStringPtr snapshotfile_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ActiveNodeInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ActiveNodeInfo) */ {
 public:
  ActiveNodeInfo();
  virtual ~ActiveNodeInfo();

  ActiveNodeInfo(const ActiveNodeInfo& from);

  inline ActiveNodeInfo& operator=(const ActiveNodeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ActiveNodeInfo& default_instance();

  static inline const ActiveNodeInfo* internal_default_instance() {
    return reinterpret_cast<const ActiveNodeInfo*>(
               &_ActiveNodeInfo_default_instance_);
  }

  void Swap(ActiveNodeInfo* other);

  // implements Message ----------------------------------------------

  inline ActiveNodeInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  ActiveNodeInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ActiveNodeInfo& from);
  void MergeFrom(const ActiveNodeInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ActiveNodeInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string nameserviceId = 1;
  void clear_nameserviceid();
  static const int kNameserviceIdFieldNumber = 1;
  const ::std::string& nameserviceid() const;
  void set_nameserviceid(const ::std::string& value);
  #if LANG_CXX11
  void set_nameserviceid(::std::string&& value);
  #endif
  void set_nameserviceid(const char* value);
  void set_nameserviceid(const char* value, size_t size);
  ::std::string* mutable_nameserviceid();
  ::std::string* release_nameserviceid();
  void set_allocated_nameserviceid(::std::string* nameserviceid);

  // string namenodeId = 2;
  void clear_namenodeid();
  static const int kNamenodeIdFieldNumber = 2;
  const ::std::string& namenodeid() const;
  void set_namenodeid(const ::std::string& value);
  #if LANG_CXX11
  void set_namenodeid(::std::string&& value);
  #endif
  void set_namenodeid(const char* value);
  void set_namenodeid(const char* value, size_t size);
  ::std::string* mutable_namenodeid();
  ::std::string* release_namenodeid();
  void set_allocated_namenodeid(::std::string* namenodeid);

  // string hostname = 3;
  void clear_hostname();
  static const int kHostnameFieldNumber = 3;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // int32 port = 4;
  void clear_port();
  static const int kPortFieldNumber = 4;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // int32 zkfcPort = 5;
  void clear_zkfcport();
  static const int kZkfcPortFieldNumber = 5;
  ::google::protobuf::int32 zkfcport() const;
  void set_zkfcport(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ActiveNodeInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr nameserviceid_;
  ::google::protobuf::internal::ArenaStringPtr namenodeid_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::google::protobuf::int32 port_;
  ::google::protobuf::int32 zkfcport_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenBalanceTaskReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GenBalanceTaskReq) */ {
 public:
  GenBalanceTaskReq();
  virtual ~GenBalanceTaskReq();

  GenBalanceTaskReq(const GenBalanceTaskReq& from);

  inline GenBalanceTaskReq& operator=(const GenBalanceTaskReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenBalanceTaskReq& default_instance();

  static inline const GenBalanceTaskReq* internal_default_instance() {
    return reinterpret_cast<const GenBalanceTaskReq*>(
               &_GenBalanceTaskReq_default_instance_);
  }

  void Swap(GenBalanceTaskReq* other);

  // implements Message ----------------------------------------------

  inline GenBalanceTaskReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GenBalanceTaskReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenBalanceTaskReq& from);
  void MergeFrom(const GenBalanceTaskReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenBalanceTaskReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 3;
  void clear_ns();
  static const int kNsFieldNumber = 3;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string creator = 4;
  void clear_creator();
  static const int kCreatorFieldNumber = 4;
  const ::std::string& creator() const;
  void set_creator(const ::std::string& value);
  #if LANG_CXX11
  void set_creator(::std::string&& value);
  #endif
  void set_creator(const char* value);
  void set_creator(const char* value, size_t size);
  ::std::string* mutable_creator();
  ::std::string* release_creator();
  void set_allocated_creator(::std::string* creator);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GenBalanceTaskReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr creator_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalanceTask : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BalanceTask) */ {
 public:
  BalanceTask();
  virtual ~BalanceTask();

  BalanceTask(const BalanceTask& from);

  inline BalanceTask& operator=(const BalanceTask& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceTask& default_instance();

  static inline const BalanceTask* internal_default_instance() {
    return reinterpret_cast<const BalanceTask*>(
               &_BalanceTask_default_instance_);
  }

  void Swap(BalanceTask* other);

  // implements Message ----------------------------------------------

  inline BalanceTask* New() const PROTOBUF_FINAL { return New(NULL); }

  BalanceTask* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalanceTask& from);
  void MergeFrom(const BalanceTask& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalanceTask* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 3;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 3;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string cluster_id = 1;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 1;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string ns = 2;
  void clear_ns();
  static const int kNsFieldNumber = 2;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string src_shard = 4;
  void clear_src_shard();
  static const int kSrcShardFieldNumber = 4;
  const ::std::string& src_shard() const;
  void set_src_shard(const ::std::string& value);
  #if LANG_CXX11
  void set_src_shard(::std::string&& value);
  #endif
  void set_src_shard(const char* value);
  void set_src_shard(const char* value, size_t size);
  ::std::string* mutable_src_shard();
  ::std::string* release_src_shard();
  void set_allocated_src_shard(::std::string* src_shard);

  // string dst_shard = 5;
  void clear_dst_shard();
  static const int kDstShardFieldNumber = 5;
  const ::std::string& dst_shard() const;
  void set_dst_shard(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_shard(::std::string&& value);
  #endif
  void set_dst_shard(const char* value);
  void set_dst_shard(const char* value, size_t size);
  ::std::string* mutable_dst_shard();
  ::std::string* release_dst_shard();
  void set_allocated_dst_shard(::std::string* dst_shard);

  // bool auto_clean = 6;
  void clear_auto_clean();
  static const int kAutoCleanFieldNumber = 6;
  bool auto_clean() const;
  void set_auto_clean(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.BalanceTask)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr src_shard_;
  ::google::protobuf::internal::ArenaStringPtr dst_shard_;
  bool auto_clean_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GenBalanceTaskRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GenBalanceTaskRsp) */ {
 public:
  GenBalanceTaskRsp();
  virtual ~GenBalanceTaskRsp();

  GenBalanceTaskRsp(const GenBalanceTaskRsp& from);

  inline GenBalanceTaskRsp& operator=(const GenBalanceTaskRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GenBalanceTaskRsp& default_instance();

  static inline const GenBalanceTaskRsp* internal_default_instance() {
    return reinterpret_cast<const GenBalanceTaskRsp*>(
               &_GenBalanceTaskRsp_default_instance_);
  }

  void Swap(GenBalanceTaskRsp* other);

  // implements Message ----------------------------------------------

  inline GenBalanceTaskRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GenBalanceTaskRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GenBalanceTaskRsp& from);
  void MergeFrom(const GenBalanceTaskRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GenBalanceTaskRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.BalanceTask tasks = 2;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 2;
  const ::masterproto::BalanceTask& tasks(int index) const;
  ::masterproto::BalanceTask* mutable_tasks(int index);
  ::masterproto::BalanceTask* add_tasks();
  ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >*
      mutable_tasks();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >&
      tasks() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GenBalanceTaskRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask > tasks_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalanceReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BalanceReq) */ {
 public:
  BalanceReq();
  virtual ~BalanceReq();

  BalanceReq(const BalanceReq& from);

  inline BalanceReq& operator=(const BalanceReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceReq& default_instance();

  static inline const BalanceReq* internal_default_instance() {
    return reinterpret_cast<const BalanceReq*>(
               &_BalanceReq_default_instance_);
  }

  void Swap(BalanceReq* other);

  // implements Message ----------------------------------------------

  inline BalanceReq* New() const PROTOBUF_FINAL { return New(NULL); }

  BalanceReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalanceReq& from);
  void MergeFrom(const BalanceReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalanceReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.BalanceTask tasks = 2;
  int tasks_size() const;
  void clear_tasks();
  static const int kTasksFieldNumber = 2;
  const ::masterproto::BalanceTask& tasks(int index) const;
  ::masterproto::BalanceTask* mutable_tasks(int index);
  ::masterproto::BalanceTask* add_tasks();
  ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >*
      mutable_tasks();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >&
      tasks() const;

  // string creator = 3;
  void clear_creator();
  static const int kCreatorFieldNumber = 3;
  const ::std::string& creator() const;
  void set_creator(const ::std::string& value);
  #if LANG_CXX11
  void set_creator(::std::string&& value);
  #endif
  void set_creator(const char* value);
  void set_creator(const char* value, size_t size);
  ::std::string* mutable_creator();
  ::std::string* release_creator();
  void set_allocated_creator(::std::string* creator);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.BalanceReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask > tasks_;
  ::google::protobuf::internal::ArenaStringPtr creator_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BalanceRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.BalanceRsp) */ {
 public:
  BalanceRsp();
  virtual ~BalanceRsp();

  BalanceRsp(const BalanceRsp& from);

  inline BalanceRsp& operator=(const BalanceRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BalanceRsp& default_instance();

  static inline const BalanceRsp* internal_default_instance() {
    return reinterpret_cast<const BalanceRsp*>(
               &_BalanceRsp_default_instance_);
  }

  void Swap(BalanceRsp* other);

  // implements Message ----------------------------------------------

  inline BalanceRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  BalanceRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BalanceRsp& from);
  void MergeFrom(const BalanceRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BalanceRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // uint64 task_id = 2;
  void clear_task_id();
  static const int kTaskIdFieldNumber = 2;
  ::google::protobuf::uint64 task_id() const;
  void set_task_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:masterproto.BalanceRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::google::protobuf::uint64 task_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRouteStateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChangeRouteStateReq) */ {
 public:
  ChangeRouteStateReq();
  virtual ~ChangeRouteStateReq();

  ChangeRouteStateReq(const ChangeRouteStateReq& from);

  inline ChangeRouteStateReq& operator=(const ChangeRouteStateReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRouteStateReq& default_instance();

  static inline const ChangeRouteStateReq* internal_default_instance() {
    return reinterpret_cast<const ChangeRouteStateReq*>(
               &_ChangeRouteStateReq_default_instance_);
  }

  void Swap(ChangeRouteStateReq* other);

  // implements Message ----------------------------------------------

  inline ChangeRouteStateReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeRouteStateReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeRouteStateReq& from);
  void MergeFrom(const ChangeRouteStateReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeRouteStateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 5;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 5;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string db_name = 3;
  void clear_db_name();
  static const int kDbNameFieldNumber = 3;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  #if LANG_CXX11
  void set_db_name(::std::string&& value);
  #endif
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // string table_name = 4;
  void clear_table_name();
  static const int kTableNameFieldNumber = 4;
  const ::std::string& table_name() const;
  void set_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_table_name(::std::string&& value);
  #endif
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  ::std::string* mutable_table_name();
  ::std::string* release_table_name();
  void set_allocated_table_name(::std::string* table_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 state = 6;
  void clear_state();
  static const int kStateFieldNumber = 6;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ChangeRouteStateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::internal::ArenaStringPtr table_name_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRouteStateRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChangeRouteStateRsp) */ {
 public:
  ChangeRouteStateRsp();
  virtual ~ChangeRouteStateRsp();

  ChangeRouteStateRsp(const ChangeRouteStateRsp& from);

  inline ChangeRouteStateRsp& operator=(const ChangeRouteStateRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRouteStateRsp& default_instance();

  static inline const ChangeRouteStateRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeRouteStateRsp*>(
               &_ChangeRouteStateRsp_default_instance_);
  }

  void Swap(ChangeRouteStateRsp* other);

  // implements Message ----------------------------------------------

  inline ChangeRouteStateRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeRouteStateRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeRouteStateRsp& from);
  void MergeFrom(const ChangeRouteStateRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeRouteStateRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ChangeRouteStateRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRouteRsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChangeRouteRsReq) */ {
 public:
  ChangeRouteRsReq();
  virtual ~ChangeRouteRsReq();

  ChangeRouteRsReq(const ChangeRouteRsReq& from);

  inline ChangeRouteRsReq& operator=(const ChangeRouteRsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRouteRsReq& default_instance();

  static inline const ChangeRouteRsReq* internal_default_instance() {
    return reinterpret_cast<const ChangeRouteRsReq*>(
               &_ChangeRouteRsReq_default_instance_);
  }

  void Swap(ChangeRouteRsReq* other);

  // implements Message ----------------------------------------------

  inline ChangeRouteRsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeRouteRsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeRouteRsReq& from);
  void MergeFrom(const ChangeRouteRsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeRouteRsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 5;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 5;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string db_name = 3;
  void clear_db_name();
  static const int kDbNameFieldNumber = 3;
  const ::std::string& db_name() const;
  void set_db_name(const ::std::string& value);
  #if LANG_CXX11
  void set_db_name(::std::string&& value);
  #endif
  void set_db_name(const char* value);
  void set_db_name(const char* value, size_t size);
  ::std::string* mutable_db_name();
  ::std::string* release_db_name();
  void set_allocated_db_name(::std::string* db_name);

  // string table_name = 4;
  void clear_table_name();
  static const int kTableNameFieldNumber = 4;
  const ::std::string& table_name() const;
  void set_table_name(const ::std::string& value);
  #if LANG_CXX11
  void set_table_name(::std::string&& value);
  #endif
  void set_table_name(const char* value);
  void set_table_name(const char* value, size_t size);
  ::std::string* mutable_table_name();
  ::std::string* release_table_name();
  void set_allocated_table_name(::std::string* table_name);

  // string source_rs_name = 6;
  void clear_source_rs_name();
  static const int kSourceRsNameFieldNumber = 6;
  const ::std::string& source_rs_name() const;
  void set_source_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_source_rs_name(::std::string&& value);
  #endif
  void set_source_rs_name(const char* value);
  void set_source_rs_name(const char* value, size_t size);
  ::std::string* mutable_source_rs_name();
  ::std::string* release_source_rs_name();
  void set_allocated_source_rs_name(::std::string* source_rs_name);

  // string dest_rs_name = 7;
  void clear_dest_rs_name();
  static const int kDestRsNameFieldNumber = 7;
  const ::std::string& dest_rs_name() const;
  void set_dest_rs_name(const ::std::string& value);
  #if LANG_CXX11
  void set_dest_rs_name(::std::string&& value);
  #endif
  void set_dest_rs_name(const char* value);
  void set_dest_rs_name(const char* value, size_t size);
  ::std::string* mutable_dest_rs_name();
  ::std::string* release_dest_rs_name();
  void set_allocated_dest_rs_name(::std::string* dest_rs_name);

  // string session_id = 9;
  void clear_session_id();
  static const int kSessionIdFieldNumber = 9;
  const ::std::string& session_id() const;
  void set_session_id(const ::std::string& value);
  #if LANG_CXX11
  void set_session_id(::std::string&& value);
  #endif
  void set_session_id(const char* value);
  void set_session_id(const char* value, size_t size);
  ::std::string* mutable_session_id();
  ::std::string* release_session_id();
  void set_allocated_session_id(::std::string* session_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 state = 8;
  void clear_state();
  static const int kStateFieldNumber = 8;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ChangeRouteRsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr db_name_;
  ::google::protobuf::internal::ArenaStringPtr table_name_;
  ::google::protobuf::internal::ArenaStringPtr source_rs_name_;
  ::google::protobuf::internal::ArenaStringPtr dest_rs_name_;
  ::google::protobuf::internal::ArenaStringPtr session_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ChangeRouteRsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ChangeRouteRsRsp) */ {
 public:
  ChangeRouteRsRsp();
  virtual ~ChangeRouteRsRsp();

  ChangeRouteRsRsp(const ChangeRouteRsRsp& from);

  inline ChangeRouteRsRsp& operator=(const ChangeRouteRsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ChangeRouteRsRsp& default_instance();

  static inline const ChangeRouteRsRsp* internal_default_instance() {
    return reinterpret_cast<const ChangeRouteRsRsp*>(
               &_ChangeRouteRsRsp_default_instance_);
  }

  void Swap(ChangeRouteRsRsp* other);

  // implements Message ----------------------------------------------

  inline ChangeRouteRsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ChangeRouteRsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ChangeRouteRsRsp& from);
  void MergeFrom(const ChangeRouteRsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ChangeRouteRsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ChangeRouteRsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRoutesReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterRoutesReq) */ {
 public:
  GetClusterRoutesReq();
  virtual ~GetClusterRoutesReq();

  GetClusterRoutesReq(const GetClusterRoutesReq& from);

  inline GetClusterRoutesReq& operator=(const GetClusterRoutesReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRoutesReq& default_instance();

  static inline const GetClusterRoutesReq* internal_default_instance() {
    return reinterpret_cast<const GetClusterRoutesReq*>(
               &_GetClusterRoutesReq_default_instance_);
  }

  void Swap(GetClusterRoutesReq* other);

  // implements Message ----------------------------------------------

  inline GetClusterRoutesReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterRoutesReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterRoutesReq& from);
  void MergeFrom(const GetClusterRoutesReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterRoutesReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 time_nano = 3;
  void clear_time_nano();
  static const int kTimeNanoFieldNumber = 3;
  ::google::protobuf::int64 time_nano() const;
  void set_time_nano(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterRoutesReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 time_nano_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RouteChunk : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RouteChunk) */ {
 public:
  RouteChunk();
  virtual ~RouteChunk();

  RouteChunk(const RouteChunk& from);

  inline RouteChunk& operator=(const RouteChunk& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RouteChunk& default_instance();

  static inline const RouteChunk* internal_default_instance() {
    return reinterpret_cast<const RouteChunk*>(
               &_RouteChunk_default_instance_);
  }

  void Swap(RouteChunk* other);

  // implements Message ----------------------------------------------

  inline RouteChunk* New() const PROTOBUF_FINAL { return New(NULL); }

  RouteChunk* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RouteChunk& from);
  void MergeFrom(const RouteChunk& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RouteChunk* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string shard_name = 1;
  void clear_shard_name();
  static const int kShardNameFieldNumber = 1;
  const ::std::string& shard_name() const;
  void set_shard_name(const ::std::string& value);
  #if LANG_CXX11
  void set_shard_name(::std::string&& value);
  #endif
  void set_shard_name(const char* value);
  void set_shard_name(const char* value, size_t size);
  ::std::string* mutable_shard_name();
  ::std::string* release_shard_name();
  void set_allocated_shard_name(::std::string* shard_name);

  // int32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::int32 state() const;
  void set_state(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.RouteChunk)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr shard_name_;
  ::google::protobuf::int32 state_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableRoutesRaw : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.TableRoutesRaw) */ {
 public:
  TableRoutesRaw();
  virtual ~TableRoutesRaw();

  TableRoutesRaw(const TableRoutesRaw& from);

  inline TableRoutesRaw& operator=(const TableRoutesRaw& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableRoutesRaw& default_instance();

  static inline const TableRoutesRaw* internal_default_instance() {
    return reinterpret_cast<const TableRoutesRaw*>(
               &_TableRoutesRaw_default_instance_);
  }

  void Swap(TableRoutesRaw* other);

  // implements Message ----------------------------------------------

  inline TableRoutesRaw* New() const PROTOBUF_FINAL { return New(NULL); }

  TableRoutesRaw* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableRoutesRaw& from);
  void MergeFrom(const TableRoutesRaw& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableRoutesRaw* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ns = 1;
  void clear_ns();
  static const int kNsFieldNumber = 1;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string raw_route = 2;
  void clear_raw_route();
  static const int kRawRouteFieldNumber = 2;
  const ::std::string& raw_route() const;
  void set_raw_route(const ::std::string& value);
  #if LANG_CXX11
  void set_raw_route(::std::string&& value);
  #endif
  void set_raw_route(const char* value);
  void set_raw_route(const char* value, size_t size);
  ::std::string* mutable_raw_route();
  ::std::string* release_raw_route();
  void set_allocated_raw_route(::std::string* raw_route);

  // @@protoc_insertion_point(class_scope:masterproto.TableRoutesRaw)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr raw_route_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TableRoutes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.TableRoutes) */ {
 public:
  TableRoutes();
  virtual ~TableRoutes();

  TableRoutes(const TableRoutes& from);

  inline TableRoutes& operator=(const TableRoutes& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TableRoutes& default_instance();

  static inline const TableRoutes* internal_default_instance() {
    return reinterpret_cast<const TableRoutes*>(
               &_TableRoutes_default_instance_);
  }

  void Swap(TableRoutes* other);

  // implements Message ----------------------------------------------

  inline TableRoutes* New() const PROTOBUF_FINAL { return New(NULL); }

  TableRoutes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TableRoutes& from);
  void MergeFrom(const TableRoutes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TableRoutes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string shard_key = 2;
  int shard_key_size() const;
  void clear_shard_key();
  static const int kShardKeyFieldNumber = 2;
  const ::std::string& shard_key(int index) const;
  ::std::string* mutable_shard_key(int index);
  void set_shard_key(int index, const ::std::string& value);
  void set_shard_key(int index, const char* value);
  void set_shard_key(int index, const char* value, size_t size);
  ::std::string* add_shard_key();
  void add_shard_key(const ::std::string& value);
  void add_shard_key(const char* value);
  void add_shard_key(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& shard_key() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_shard_key();

  // repeated .masterproto.RouteChunk routes = 3;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 3;
  const ::masterproto::RouteChunk& routes(int index) const;
  ::masterproto::RouteChunk* mutable_routes(int index);
  ::masterproto::RouteChunk* add_routes();
  ::google::protobuf::RepeatedPtrField< ::masterproto::RouteChunk >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::RouteChunk >&
      routes() const;

  // string ns = 1;
  void clear_ns();
  static const int kNsFieldNumber = 1;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // string route_data = 4;
  void clear_route_data();
  static const int kRouteDataFieldNumber = 4;
  const ::std::string& route_data() const;
  void set_route_data(const ::std::string& value);
  #if LANG_CXX11
  void set_route_data(::std::string&& value);
  #endif
  void set_route_data(const char* value);
  void set_route_data(const char* value, size_t size);
  ::std::string* mutable_route_data();
  ::std::string* release_route_data();
  void set_allocated_route_data(::std::string* route_data);

  // string md5 = 6;
  void clear_md5();
  static const int kMd5FieldNumber = 6;
  const ::std::string& md5() const;
  void set_md5(const ::std::string& value);
  #if LANG_CXX11
  void set_md5(::std::string&& value);
  #endif
  void set_md5(const char* value);
  void set_md5(const char* value, size_t size);
  ::std::string* mutable_md5();
  ::std::string* release_md5();
  void set_allocated_md5(::std::string* md5);

  // string route_type = 7;
  void clear_route_type();
  static const int kRouteTypeFieldNumber = 7;
  const ::std::string& route_type() const;
  void set_route_type(const ::std::string& value);
  #if LANG_CXX11
  void set_route_type(::std::string&& value);
  #endif
  void set_route_type(const char* value);
  void set_route_type(const char* value, size_t size);
  ::std::string* mutable_route_type();
  ::std::string* release_route_type();
  void set_allocated_route_type(::std::string* route_type);

  // string table_type = 8;
  void clear_table_type();
  static const int kTableTypeFieldNumber = 8;
  const ::std::string& table_type() const;
  void set_table_type(const ::std::string& value);
  #if LANG_CXX11
  void set_table_type(::std::string&& value);
  #endif
  void set_table_type(const char* value);
  void set_table_type(const char* value, size_t size);
  ::std::string* mutable_table_type();
  ::std::string* release_table_type();
  void set_allocated_table_type(::std::string* table_type);

  // int32 version = 5;
  void clear_version();
  static const int kVersionFieldNumber = 5;
  ::google::protobuf::int32 version() const;
  void set_version(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.TableRoutes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> shard_key_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::RouteChunk > routes_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::internal::ArenaStringPtr route_data_;
  ::google::protobuf::internal::ArenaStringPtr md5_;
  ::google::protobuf::internal::ArenaStringPtr route_type_;
  ::google::protobuf::internal::ArenaStringPtr table_type_;
  ::google::protobuf::int32 version_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRoutesRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterRoutesRsp) */ {
 public:
  GetClusterRoutesRsp();
  virtual ~GetClusterRoutesRsp();

  GetClusterRoutesRsp(const GetClusterRoutesRsp& from);

  inline GetClusterRoutesRsp& operator=(const GetClusterRoutesRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRoutesRsp& default_instance();

  static inline const GetClusterRoutesRsp* internal_default_instance() {
    return reinterpret_cast<const GetClusterRoutesRsp*>(
               &_GetClusterRoutesRsp_default_instance_);
  }

  void Swap(GetClusterRoutesRsp* other);

  // implements Message ----------------------------------------------

  inline GetClusterRoutesRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterRoutesRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterRoutesRsp& from);
  void MergeFrom(const GetClusterRoutesRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterRoutesRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.TableRoutes routes = 2;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 2;
  const ::masterproto::TableRoutes& routes(int index) const;
  ::masterproto::TableRoutes* mutable_routes(int index);
  ::masterproto::TableRoutes* add_routes();
  ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutes >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutes >&
      routes() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterRoutesRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutes > routes_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetIntersectMigrateJobsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetIntersectMigrateJobsReq) */ {
 public:
  GetIntersectMigrateJobsReq();
  virtual ~GetIntersectMigrateJobsReq();

  GetIntersectMigrateJobsReq(const GetIntersectMigrateJobsReq& from);

  inline GetIntersectMigrateJobsReq& operator=(const GetIntersectMigrateJobsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIntersectMigrateJobsReq& default_instance();

  static inline const GetIntersectMigrateJobsReq* internal_default_instance() {
    return reinterpret_cast<const GetIntersectMigrateJobsReq*>(
               &_GetIntersectMigrateJobsReq_default_instance_);
  }

  void Swap(GetIntersectMigrateJobsReq* other);

  // implements Message ----------------------------------------------

  inline GetIntersectMigrateJobsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetIntersectMigrateJobsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetIntersectMigrateJobsReq& from);
  void MergeFrom(const GetIntersectMigrateJobsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetIntersectMigrateJobsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 time_nano = 3;
  void clear_time_nano();
  static const int kTimeNanoFieldNumber = 3;
  ::google::protobuf::int64 time_nano() const;
  void set_time_nano(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetIntersectMigrateJobsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 time_nano_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MigrateInterval : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.MigrateInterval) */ {
 public:
  MigrateInterval();
  virtual ~MigrateInterval();

  MigrateInterval(const MigrateInterval& from);

  inline MigrateInterval& operator=(const MigrateInterval& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MigrateInterval& default_instance();

  static inline const MigrateInterval* internal_default_instance() {
    return reinterpret_cast<const MigrateInterval*>(
               &_MigrateInterval_default_instance_);
  }

  void Swap(MigrateInterval* other);

  // implements Message ----------------------------------------------

  inline MigrateInterval* New() const PROTOBUF_FINAL { return New(NULL); }

  MigrateInterval* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MigrateInterval& from);
  void MergeFrom(const MigrateInterval& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MigrateInterval* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 chunk_list = 6;
  int chunk_list_size() const;
  void clear_chunk_list();
  static const int kChunkListFieldNumber = 6;
  ::google::protobuf::int32 chunk_list(int index) const;
  void set_chunk_list(int index, ::google::protobuf::int32 value);
  void add_chunk_list(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      chunk_list() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_chunk_list();

  // string src_shard = 3;
  void clear_src_shard();
  static const int kSrcShardFieldNumber = 3;
  const ::std::string& src_shard() const;
  void set_src_shard(const ::std::string& value);
  #if LANG_CXX11
  void set_src_shard(::std::string&& value);
  #endif
  void set_src_shard(const char* value);
  void set_src_shard(const char* value, size_t size);
  ::std::string* mutable_src_shard();
  ::std::string* release_src_shard();
  void set_allocated_src_shard(::std::string* src_shard);

  // string dst_shard = 4;
  void clear_dst_shard();
  static const int kDstShardFieldNumber = 4;
  const ::std::string& dst_shard() const;
  void set_dst_shard(const ::std::string& value);
  #if LANG_CXX11
  void set_dst_shard(::std::string&& value);
  #endif
  void set_dst_shard(const char* value);
  void set_dst_shard(const char* value, size_t size);
  ::std::string* mutable_dst_shard();
  ::std::string* release_dst_shard();
  void set_allocated_dst_shard(::std::string* dst_shard);

  // string ns = 5;
  void clear_ns();
  static const int kNsFieldNumber = 5;
  const ::std::string& ns() const;
  void set_ns(const ::std::string& value);
  #if LANG_CXX11
  void set_ns(::std::string&& value);
  #endif
  void set_ns(const char* value);
  void set_ns(const char* value, size_t size);
  ::std::string* mutable_ns();
  ::std::string* release_ns();
  void set_allocated_ns(::std::string* ns);

  // int64 begin_time = 7;
  void clear_begin_time();
  static const int kBeginTimeFieldNumber = 7;
  ::google::protobuf::int64 begin_time() const;
  void set_begin_time(::google::protobuf::int64 value);

  // int64 end_time = 8;
  void clear_end_time();
  static const int kEndTimeFieldNumber = 8;
  ::google::protobuf::int64 end_time() const;
  void set_end_time(::google::protobuf::int64 value);

  // int64 change_time = 9;
  void clear_change_time();
  static const int kChangeTimeFieldNumber = 9;
  ::google::protobuf::int64 change_time() const;
  void set_change_time(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.MigrateInterval)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > chunk_list_;
  mutable int _chunk_list_cached_byte_size_;
  ::google::protobuf::internal::ArenaStringPtr src_shard_;
  ::google::protobuf::internal::ArenaStringPtr dst_shard_;
  ::google::protobuf::internal::ArenaStringPtr ns_;
  ::google::protobuf::int64 begin_time_;
  ::google::protobuf::int64 end_time_;
  ::google::protobuf::int64 change_time_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetIntersectMigrateJobsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetIntersectMigrateJobsRsp) */ {
 public:
  GetIntersectMigrateJobsRsp();
  virtual ~GetIntersectMigrateJobsRsp();

  GetIntersectMigrateJobsRsp(const GetIntersectMigrateJobsRsp& from);

  inline GetIntersectMigrateJobsRsp& operator=(const GetIntersectMigrateJobsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetIntersectMigrateJobsRsp& default_instance();

  static inline const GetIntersectMigrateJobsRsp* internal_default_instance() {
    return reinterpret_cast<const GetIntersectMigrateJobsRsp*>(
               &_GetIntersectMigrateJobsRsp_default_instance_);
  }

  void Swap(GetIntersectMigrateJobsRsp* other);

  // implements Message ----------------------------------------------

  inline GetIntersectMigrateJobsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetIntersectMigrateJobsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetIntersectMigrateJobsRsp& from);
  void MergeFrom(const GetIntersectMigrateJobsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetIntersectMigrateJobsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.MigrateInterval jobs = 2;
  int jobs_size() const;
  void clear_jobs();
  static const int kJobsFieldNumber = 2;
  const ::masterproto::MigrateInterval& jobs(int index) const;
  ::masterproto::MigrateInterval* mutable_jobs(int index);
  ::masterproto::MigrateInterval* add_jobs();
  ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateInterval >*
      mutable_jobs();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateInterval >&
      jobs() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetIntersectMigrateJobsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateInterval > jobs_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterInfoReq) */ {
 public:
  GetClusterInfoReq();
  virtual ~GetClusterInfoReq();

  GetClusterInfoReq(const GetClusterInfoReq& from);

  inline GetClusterInfoReq& operator=(const GetClusterInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterInfoReq& default_instance();

  static inline const GetClusterInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetClusterInfoReq*>(
               &_GetClusterInfoReq_default_instance_);
  }

  void Swap(GetClusterInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetClusterInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterInfoReq& from);
  void MergeFrom(const GetClusterInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterInfoRsp) */ {
 public:
  GetClusterInfoRsp();
  virtual ~GetClusterInfoRsp();

  GetClusterInfoRsp(const GetClusterInfoRsp& from);

  inline GetClusterInfoRsp& operator=(const GetClusterInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterInfoRsp& default_instance();

  static inline const GetClusterInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetClusterInfoRsp*>(
               &_GetClusterInfoRsp_default_instance_);
  }

  void Swap(GetClusterInfoRsp* other);

  // implements Message ----------------------------------------------

  inline GetClusterInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterInfoRsp& from);
  void MergeFrom(const GetClusterInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.ClusterInfo cluster_info = 2;
  bool has_cluster_info() const;
  void clear_cluster_info();
  static const int kClusterInfoFieldNumber = 2;
  const ::masterproto::ClusterInfo& cluster_info() const;
  ::masterproto::ClusterInfo* mutable_cluster_info();
  ::masterproto::ClusterInfo* release_cluster_info();
  void set_allocated_cluster_info(::masterproto::ClusterInfo* cluster_info);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  ::masterproto::ClusterInfo* cluster_info_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetProxyNotifyInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetProxyNotifyInfoReq) */ {
 public:
  SetProxyNotifyInfoReq();
  virtual ~SetProxyNotifyInfoReq();

  SetProxyNotifyInfoReq(const SetProxyNotifyInfoReq& from);

  inline SetProxyNotifyInfoReq& operator=(const SetProxyNotifyInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetProxyNotifyInfoReq& default_instance();

  static inline const SetProxyNotifyInfoReq* internal_default_instance() {
    return reinterpret_cast<const SetProxyNotifyInfoReq*>(
               &_SetProxyNotifyInfoReq_default_instance_);
  }

  void Swap(SetProxyNotifyInfoReq* other);

  // implements Message ----------------------------------------------

  inline SetProxyNotifyInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetProxyNotifyInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetProxyNotifyInfoReq& from);
  void MergeFrom(const SetProxyNotifyInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetProxyNotifyInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string notify_url = 5;
  void clear_notify_url();
  static const int kNotifyUrlFieldNumber = 5;
  const ::std::string& notify_url() const;
  void set_notify_url(const ::std::string& value);
  #if LANG_CXX11
  void set_notify_url(::std::string&& value);
  #endif
  void set_notify_url(const char* value);
  void set_notify_url(const char* value, size_t size);
  ::std::string* mutable_notify_url();
  ::std::string* release_notify_url();
  void set_allocated_notify_url(::std::string* notify_url);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .masterproto.EnumProxyNotifyType method = 4;
  void clear_method();
  static const int kMethodFieldNumber = 4;
  ::masterproto::EnumProxyNotifyType method() const;
  void set_method(::masterproto::EnumProxyNotifyType value);

  // @@protoc_insertion_point(class_scope:masterproto.SetProxyNotifyInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr notify_url_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int method_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetProxyNotifyInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetProxyNotifyInfoRsp) */ {
 public:
  SetProxyNotifyInfoRsp();
  virtual ~SetProxyNotifyInfoRsp();

  SetProxyNotifyInfoRsp(const SetProxyNotifyInfoRsp& from);

  inline SetProxyNotifyInfoRsp& operator=(const SetProxyNotifyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetProxyNotifyInfoRsp& default_instance();

  static inline const SetProxyNotifyInfoRsp* internal_default_instance() {
    return reinterpret_cast<const SetProxyNotifyInfoRsp*>(
               &_SetProxyNotifyInfoRsp_default_instance_);
  }

  void Swap(SetProxyNotifyInfoRsp* other);

  // implements Message ----------------------------------------------

  inline SetProxyNotifyInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetProxyNotifyInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetProxyNotifyInfoRsp& from);
  void MergeFrom(const SetProxyNotifyInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetProxyNotifyInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetProxyNotifyInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProxyNotifyInfoReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetProxyNotifyInfoReq) */ {
 public:
  GetProxyNotifyInfoReq();
  virtual ~GetProxyNotifyInfoReq();

  GetProxyNotifyInfoReq(const GetProxyNotifyInfoReq& from);

  inline GetProxyNotifyInfoReq& operator=(const GetProxyNotifyInfoReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProxyNotifyInfoReq& default_instance();

  static inline const GetProxyNotifyInfoReq* internal_default_instance() {
    return reinterpret_cast<const GetProxyNotifyInfoReq*>(
               &_GetProxyNotifyInfoReq_default_instance_);
  }

  void Swap(GetProxyNotifyInfoReq* other);

  // implements Message ----------------------------------------------

  inline GetProxyNotifyInfoReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProxyNotifyInfoReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProxyNotifyInfoReq& from);
  void MergeFrom(const GetProxyNotifyInfoReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProxyNotifyInfoReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetProxyNotifyInfoReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetProxyNotifyInfoRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetProxyNotifyInfoRsp) */ {
 public:
  GetProxyNotifyInfoRsp();
  virtual ~GetProxyNotifyInfoRsp();

  GetProxyNotifyInfoRsp(const GetProxyNotifyInfoRsp& from);

  inline GetProxyNotifyInfoRsp& operator=(const GetProxyNotifyInfoRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetProxyNotifyInfoRsp& default_instance();

  static inline const GetProxyNotifyInfoRsp* internal_default_instance() {
    return reinterpret_cast<const GetProxyNotifyInfoRsp*>(
               &_GetProxyNotifyInfoRsp_default_instance_);
  }

  void Swap(GetProxyNotifyInfoRsp* other);

  // implements Message ----------------------------------------------

  inline GetProxyNotifyInfoRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetProxyNotifyInfoRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetProxyNotifyInfoRsp& from);
  void MergeFrom(const GetProxyNotifyInfoRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetProxyNotifyInfoRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string notify_url = 5;
  void clear_notify_url();
  static const int kNotifyUrlFieldNumber = 5;
  const ::std::string& notify_url() const;
  void set_notify_url(const ::std::string& value);
  #if LANG_CXX11
  void set_notify_url(::std::string&& value);
  #endif
  void set_notify_url(const char* value);
  void set_notify_url(const char* value, size_t size);
  ::std::string* mutable_notify_url();
  ::std::string* release_notify_url();
  void set_allocated_notify_url(::std::string* notify_url);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.EnumProxyNotifyType method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  ::masterproto::EnumProxyNotifyType method() const;
  void set_method(::masterproto::EnumProxyNotifyType value);

  // @@protoc_insertion_point(class_scope:masterproto.GetProxyNotifyInfoRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr notify_url_;
  ::cmongoproto::ResHeader* header_;
  int method_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterBanReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterBanReq) */ {
 public:
  SetClusterBanReq();
  virtual ~SetClusterBanReq();

  SetClusterBanReq(const SetClusterBanReq& from);

  inline SetClusterBanReq& operator=(const SetClusterBanReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterBanReq& default_instance();

  static inline const SetClusterBanReq* internal_default_instance() {
    return reinterpret_cast<const SetClusterBanReq*>(
               &_SetClusterBanReq_default_instance_);
  }

  void Swap(SetClusterBanReq* other);

  // implements Message ----------------------------------------------

  inline SetClusterBanReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterBanReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterBanReq& from);
  void MergeFrom(const SetClusterBanReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterBanReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // bool ban_read = 3;
  void clear_ban_read();
  static const int kBanReadFieldNumber = 3;
  bool ban_read() const;
  void set_ban_read(bool value);

  // bool ban_write = 4;
  void clear_ban_write();
  static const int kBanWriteFieldNumber = 4;
  bool ban_write() const;
  void set_ban_write(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterBanReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  bool ban_read_;
  bool ban_write_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterBanRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterBanRsp) */ {
 public:
  SetClusterBanRsp();
  virtual ~SetClusterBanRsp();

  SetClusterBanRsp(const SetClusterBanRsp& from);

  inline SetClusterBanRsp& operator=(const SetClusterBanRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterBanRsp& default_instance();

  static inline const SetClusterBanRsp* internal_default_instance() {
    return reinterpret_cast<const SetClusterBanRsp*>(
               &_SetClusterBanRsp_default_instance_);
  }

  void Swap(SetClusterBanRsp* other);

  // implements Message ----------------------------------------------

  inline SetClusterBanRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterBanRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterBanRsp& from);
  void MergeFrom(const SetClusterBanRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterBanRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterBanRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterBanReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterBanReq) */ {
 public:
  GetClusterBanReq();
  virtual ~GetClusterBanReq();

  GetClusterBanReq(const GetClusterBanReq& from);

  inline GetClusterBanReq& operator=(const GetClusterBanReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterBanReq& default_instance();

  static inline const GetClusterBanReq* internal_default_instance() {
    return reinterpret_cast<const GetClusterBanReq*>(
               &_GetClusterBanReq_default_instance_);
  }

  void Swap(GetClusterBanReq* other);

  // implements Message ----------------------------------------------

  inline GetClusterBanReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterBanReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterBanReq& from);
  void MergeFrom(const GetClusterBanReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterBanReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterBanReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterBanRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterBanRsp) */ {
 public:
  GetClusterBanRsp();
  virtual ~GetClusterBanRsp();

  GetClusterBanRsp(const GetClusterBanRsp& from);

  inline GetClusterBanRsp& operator=(const GetClusterBanRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterBanRsp& default_instance();

  static inline const GetClusterBanRsp* internal_default_instance() {
    return reinterpret_cast<const GetClusterBanRsp*>(
               &_GetClusterBanRsp_default_instance_);
  }

  void Swap(GetClusterBanRsp* other);

  // implements Message ----------------------------------------------

  inline GetClusterBanRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterBanRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterBanRsp& from);
  void MergeFrom(const GetClusterBanRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterBanRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // bool ban_read = 2;
  void clear_ban_read();
  static const int kBanReadFieldNumber = 2;
  bool ban_read() const;
  void set_ban_read(bool value);

  // bool ban_write = 3;
  void clear_ban_write();
  static const int kBanWriteFieldNumber = 3;
  bool ban_write() const;
  void set_ban_write(bool value);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterBanRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  bool ban_read_;
  bool ban_write_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetVersionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetVersionReq) */ {
 public:
  SetVersionReq();
  virtual ~SetVersionReq();

  SetVersionReq(const SetVersionReq& from);

  inline SetVersionReq& operator=(const SetVersionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVersionReq& default_instance();

  static inline const SetVersionReq* internal_default_instance() {
    return reinterpret_cast<const SetVersionReq*>(
               &_SetVersionReq_default_instance_);
  }

  void Swap(SetVersionReq* other);

  // implements Message ----------------------------------------------

  inline SetVersionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetVersionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetVersionReq& from);
  void MergeFrom(const SetVersionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetVersionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mongod_subversion = 4;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 4;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string proxy_version = 5;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 5;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string dynamo_proxy_version = 6;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 6;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.SetVersionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetVersionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetVersionRsp) */ {
 public:
  SetVersionRsp();
  virtual ~SetVersionRsp();

  SetVersionRsp(const SetVersionRsp& from);

  inline SetVersionRsp& operator=(const SetVersionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetVersionRsp& default_instance();

  static inline const SetVersionRsp* internal_default_instance() {
    return reinterpret_cast<const SetVersionRsp*>(
               &_SetVersionRsp_default_instance_);
  }

  void Swap(SetVersionRsp* other);

  // implements Message ----------------------------------------------

  inline SetVersionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetVersionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetVersionRsp& from);
  void MergeFrom(const SetVersionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetVersionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetVersionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVersionReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetVersionReq) */ {
 public:
  GetVersionReq();
  virtual ~GetVersionReq();

  GetVersionReq(const GetVersionReq& from);

  inline GetVersionReq& operator=(const GetVersionReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVersionReq& default_instance();

  static inline const GetVersionReq* internal_default_instance() {
    return reinterpret_cast<const GetVersionReq*>(
               &_GetVersionReq_default_instance_);
  }

  void Swap(GetVersionReq* other);

  // implements Message ----------------------------------------------

  inline GetVersionReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVersionReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVersionReq& from);
  void MergeFrom(const GetVersionReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVersionReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetVersionReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetVersionRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetVersionRsp) */ {
 public:
  GetVersionRsp();
  virtual ~GetVersionRsp();

  GetVersionRsp(const GetVersionRsp& from);

  inline GetVersionRsp& operator=(const GetVersionRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetVersionRsp& default_instance();

  static inline const GetVersionRsp* internal_default_instance() {
    return reinterpret_cast<const GetVersionRsp*>(
               &_GetVersionRsp_default_instance_);
  }

  void Swap(GetVersionRsp* other);

  // implements Message ----------------------------------------------

  inline GetVersionRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetVersionRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetVersionRsp& from);
  void MergeFrom(const GetVersionRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetVersionRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string mongod_subversion = 2;
  void clear_mongod_subversion();
  static const int kMongodSubversionFieldNumber = 2;
  const ::std::string& mongod_subversion() const;
  void set_mongod_subversion(const ::std::string& value);
  #if LANG_CXX11
  void set_mongod_subversion(::std::string&& value);
  #endif
  void set_mongod_subversion(const char* value);
  void set_mongod_subversion(const char* value, size_t size);
  ::std::string* mutable_mongod_subversion();
  ::std::string* release_mongod_subversion();
  void set_allocated_mongod_subversion(::std::string* mongod_subversion);

  // string proxy_version = 3;
  void clear_proxy_version();
  static const int kProxyVersionFieldNumber = 3;
  const ::std::string& proxy_version() const;
  void set_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_proxy_version(::std::string&& value);
  #endif
  void set_proxy_version(const char* value);
  void set_proxy_version(const char* value, size_t size);
  ::std::string* mutable_proxy_version();
  ::std::string* release_proxy_version();
  void set_allocated_proxy_version(::std::string* proxy_version);

  // string dynamo_proxy_version = 4;
  void clear_dynamo_proxy_version();
  static const int kDynamoProxyVersionFieldNumber = 4;
  const ::std::string& dynamo_proxy_version() const;
  void set_dynamo_proxy_version(const ::std::string& value);
  #if LANG_CXX11
  void set_dynamo_proxy_version(::std::string&& value);
  #endif
  void set_dynamo_proxy_version(const char* value);
  void set_dynamo_proxy_version(const char* value, size_t size);
  ::std::string* mutable_dynamo_proxy_version();
  ::std::string* release_dynamo_proxy_version();
  void set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version);

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetVersionRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr mongod_subversion_;
  ::google::protobuf::internal::ArenaStringPtr proxy_version_;
  ::google::protobuf::internal::ArenaStringPtr dynamo_proxy_version_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResizeOplogReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ResizeOplogReq) */ {
 public:
  ResizeOplogReq();
  virtual ~ResizeOplogReq();

  ResizeOplogReq(const ResizeOplogReq& from);

  inline ResizeOplogReq& operator=(const ResizeOplogReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResizeOplogReq& default_instance();

  static inline const ResizeOplogReq* internal_default_instance() {
    return reinterpret_cast<const ResizeOplogReq*>(
               &_ResizeOplogReq_default_instance_);
  }

  void Swap(ResizeOplogReq* other);

  // implements Message ----------------------------------------------

  inline ResizeOplogReq* New() const PROTOBUF_FINAL { return New(NULL); }

  ResizeOplogReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResizeOplogReq& from);
  void MergeFrom(const ResizeOplogReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResizeOplogReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // int32 size_mB = 5;
  void clear_size_mb();
  static const int kSizeMBFieldNumber = 5;
  ::google::protobuf::int32 size_mb() const;
  void set_size_mb(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.ResizeOplogReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  ::google::protobuf::int32 size_mb_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResizeOplogRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.ResizeOplogRsp) */ {
 public:
  ResizeOplogRsp();
  virtual ~ResizeOplogRsp();

  ResizeOplogRsp(const ResizeOplogRsp& from);

  inline ResizeOplogRsp& operator=(const ResizeOplogRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResizeOplogRsp& default_instance();

  static inline const ResizeOplogRsp* internal_default_instance() {
    return reinterpret_cast<const ResizeOplogRsp*>(
               &_ResizeOplogRsp_default_instance_);
  }

  void Swap(ResizeOplogRsp* other);

  // implements Message ----------------------------------------------

  inline ResizeOplogRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  ResizeOplogRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResizeOplogRsp& from);
  void MergeFrom(const ResizeOplogRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResizeOplogRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.ResizeOplogRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestartContainerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestartContainerReq) */ {
 public:
  RestartContainerReq();
  virtual ~RestartContainerReq();

  RestartContainerReq(const RestartContainerReq& from);

  inline RestartContainerReq& operator=(const RestartContainerReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestartContainerReq& default_instance();

  static inline const RestartContainerReq* internal_default_instance() {
    return reinterpret_cast<const RestartContainerReq*>(
               &_RestartContainerReq_default_instance_);
  }

  void Swap(RestartContainerReq* other);

  // implements Message ----------------------------------------------

  inline RestartContainerReq* New() const PROTOBUF_FINAL { return New(NULL); }

  RestartContainerReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestartContainerReq& from);
  void MergeFrom(const RestartContainerReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestartContainerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // string container_name = 4;
  void clear_container_name();
  static const int kContainerNameFieldNumber = 4;
  const ::std::string& container_name() const;
  void set_container_name(const ::std::string& value);
  #if LANG_CXX11
  void set_container_name(::std::string&& value);
  #endif
  void set_container_name(const char* value);
  void set_container_name(const char* value, size_t size);
  ::std::string* mutable_container_name();
  ::std::string* release_container_name();
  void set_allocated_container_name(::std::string* container_name);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // .cmongoproto.MongoType container_type = 3;
  void clear_container_type();
  static const int kContainerTypeFieldNumber = 3;
  ::cmongoproto::MongoType container_type() const;
  void set_container_type(::cmongoproto::MongoType value);

  // @@protoc_insertion_point(class_scope:masterproto.RestartContainerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::google::protobuf::internal::ArenaStringPtr container_name_;
  ::cmongoproto::ReqHeader* header_;
  int container_type_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RestartContainerRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.RestartContainerRsp) */ {
 public:
  RestartContainerRsp();
  virtual ~RestartContainerRsp();

  RestartContainerRsp(const RestartContainerRsp& from);

  inline RestartContainerRsp& operator=(const RestartContainerRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RestartContainerRsp& default_instance();

  static inline const RestartContainerRsp* internal_default_instance() {
    return reinterpret_cast<const RestartContainerRsp*>(
               &_RestartContainerRsp_default_instance_);
  }

  void Swap(RestartContainerRsp* other);

  // implements Message ----------------------------------------------

  inline RestartContainerRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  RestartContainerRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RestartContainerRsp& from);
  void MergeFrom(const RestartContainerRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RestartContainerRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.RestartContainerRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterMaxConnsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterMaxConnsReq) */ {
 public:
  SetClusterMaxConnsReq();
  virtual ~SetClusterMaxConnsReq();

  SetClusterMaxConnsReq(const SetClusterMaxConnsReq& from);

  inline SetClusterMaxConnsReq& operator=(const SetClusterMaxConnsReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterMaxConnsReq& default_instance();

  static inline const SetClusterMaxConnsReq* internal_default_instance() {
    return reinterpret_cast<const SetClusterMaxConnsReq*>(
               &_SetClusterMaxConnsReq_default_instance_);
  }

  void Swap(SetClusterMaxConnsReq* other);

  // implements Message ----------------------------------------------

  inline SetClusterMaxConnsReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterMaxConnsReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterMaxConnsReq& from);
  void MergeFrom(const SetClusterMaxConnsReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterMaxConnsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // int32 conn_num = 5;
  void clear_conn_num();
  static const int kConnNumFieldNumber = 5;
  ::google::protobuf::int32 conn_num() const;
  void set_conn_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterMaxConnsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  ::google::protobuf::int32 conn_num_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterMaxConnsRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterMaxConnsRsp) */ {
 public:
  SetClusterMaxConnsRsp();
  virtual ~SetClusterMaxConnsRsp();

  SetClusterMaxConnsRsp(const SetClusterMaxConnsRsp& from);

  inline SetClusterMaxConnsRsp& operator=(const SetClusterMaxConnsRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterMaxConnsRsp& default_instance();

  static inline const SetClusterMaxConnsRsp* internal_default_instance() {
    return reinterpret_cast<const SetClusterMaxConnsRsp*>(
               &_SetClusterMaxConnsRsp_default_instance_);
  }

  void Swap(SetClusterMaxConnsRsp* other);

  // implements Message ----------------------------------------------

  inline SetClusterMaxConnsRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterMaxConnsRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterMaxConnsRsp& from);
  void MergeFrom(const SetClusterMaxConnsRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterMaxConnsRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterMaxConnsRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRegionBackupConfigReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetRegionBackupConfigReq) */ {
 public:
  GetRegionBackupConfigReq();
  virtual ~GetRegionBackupConfigReq();

  GetRegionBackupConfigReq(const GetRegionBackupConfigReq& from);

  inline GetRegionBackupConfigReq& operator=(const GetRegionBackupConfigReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionBackupConfigReq& default_instance();

  static inline const GetRegionBackupConfigReq* internal_default_instance() {
    return reinterpret_cast<const GetRegionBackupConfigReq*>(
               &_GetRegionBackupConfigReq_default_instance_);
  }

  void Swap(GetRegionBackupConfigReq* other);

  // implements Message ----------------------------------------------

  inline GetRegionBackupConfigReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRegionBackupConfigReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRegionBackupConfigReq& from);
  void MergeFrom(const GetRegionBackupConfigReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRegionBackupConfigReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetRegionBackupConfigReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetRegionBackupConfigRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetRegionBackupConfigRsp) */ {
 public:
  GetRegionBackupConfigRsp();
  virtual ~GetRegionBackupConfigRsp();

  GetRegionBackupConfigRsp(const GetRegionBackupConfigRsp& from);

  inline GetRegionBackupConfigRsp& operator=(const GetRegionBackupConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetRegionBackupConfigRsp& default_instance();

  static inline const GetRegionBackupConfigRsp* internal_default_instance() {
    return reinterpret_cast<const GetRegionBackupConfigRsp*>(
               &_GetRegionBackupConfigRsp_default_instance_);
  }

  void Swap(GetRegionBackupConfigRsp* other);

  // implements Message ----------------------------------------------

  inline GetRegionBackupConfigRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetRegionBackupConfigRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetRegionBackupConfigRsp& from);
  void MergeFrom(const GetRegionBackupConfigRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetRegionBackupConfigRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.AutoBackup auto_backup = 2;
  void clear_auto_backup();
  static const int kAutoBackupFieldNumber = 2;
  ::masterproto::AutoBackup auto_backup() const;
  void set_auto_backup(::masterproto::AutoBackup value);

  // @@protoc_insertion_point(class_scope:masterproto.GetRegionBackupConfigRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  int auto_backup_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetRegionBackupConfigReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetRegionBackupConfigReq) */ {
 public:
  SetRegionBackupConfigReq();
  virtual ~SetRegionBackupConfigReq();

  SetRegionBackupConfigReq(const SetRegionBackupConfigReq& from);

  inline SetRegionBackupConfigReq& operator=(const SetRegionBackupConfigReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRegionBackupConfigReq& default_instance();

  static inline const SetRegionBackupConfigReq* internal_default_instance() {
    return reinterpret_cast<const SetRegionBackupConfigReq*>(
               &_SetRegionBackupConfigReq_default_instance_);
  }

  void Swap(SetRegionBackupConfigReq* other);

  // implements Message ----------------------------------------------

  inline SetRegionBackupConfigReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetRegionBackupConfigReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetRegionBackupConfigReq& from);
  void MergeFrom(const SetRegionBackupConfigReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetRegionBackupConfigReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // .masterproto.AutoBackup auto_backup = 4;
  void clear_auto_backup();
  static const int kAutoBackupFieldNumber = 4;
  ::masterproto::AutoBackup auto_backup() const;
  void set_auto_backup(::masterproto::AutoBackup value);

  // @@protoc_insertion_point(class_scope:masterproto.SetRegionBackupConfigReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  int auto_backup_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetRegionBackupConfigRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetRegionBackupConfigRsp) */ {
 public:
  SetRegionBackupConfigRsp();
  virtual ~SetRegionBackupConfigRsp();

  SetRegionBackupConfigRsp(const SetRegionBackupConfigRsp& from);

  inline SetRegionBackupConfigRsp& operator=(const SetRegionBackupConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetRegionBackupConfigRsp& default_instance();

  static inline const SetRegionBackupConfigRsp* internal_default_instance() {
    return reinterpret_cast<const SetRegionBackupConfigRsp*>(
               &_SetRegionBackupConfigRsp_default_instance_);
  }

  void Swap(SetRegionBackupConfigRsp* other);

  // implements Message ----------------------------------------------

  inline SetRegionBackupConfigRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetRegionBackupConfigRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetRegionBackupConfigRsp& from);
  void MergeFrom(const SetRegionBackupConfigRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetRegionBackupConfigRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetRegionBackupConfigRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterBackupConfigReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterBackupConfigReq) */ {
 public:
  GetClusterBackupConfigReq();
  virtual ~GetClusterBackupConfigReq();

  GetClusterBackupConfigReq(const GetClusterBackupConfigReq& from);

  inline GetClusterBackupConfigReq& operator=(const GetClusterBackupConfigReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterBackupConfigReq& default_instance();

  static inline const GetClusterBackupConfigReq* internal_default_instance() {
    return reinterpret_cast<const GetClusterBackupConfigReq*>(
               &_GetClusterBackupConfigReq_default_instance_);
  }

  void Swap(GetClusterBackupConfigReq* other);

  // implements Message ----------------------------------------------

  inline GetClusterBackupConfigReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterBackupConfigReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterBackupConfigReq& from);
  void MergeFrom(const GetClusterBackupConfigReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterBackupConfigReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterBackupConfigReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterBackupConfigRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterBackupConfigRsp) */ {
 public:
  GetClusterBackupConfigRsp();
  virtual ~GetClusterBackupConfigRsp();

  GetClusterBackupConfigRsp(const GetClusterBackupConfigRsp& from);

  inline GetClusterBackupConfigRsp& operator=(const GetClusterBackupConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterBackupConfigRsp& default_instance();

  static inline const GetClusterBackupConfigRsp* internal_default_instance() {
    return reinterpret_cast<const GetClusterBackupConfigRsp*>(
               &_GetClusterBackupConfigRsp_default_instance_);
  }

  void Swap(GetClusterBackupConfigRsp* other);

  // implements Message ----------------------------------------------

  inline GetClusterBackupConfigRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterBackupConfigRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterBackupConfigRsp& from);
  void MergeFrom(const GetClusterBackupConfigRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterBackupConfigRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // .masterproto.AutoBackup auto_backup = 2;
  void clear_auto_backup();
  static const int kAutoBackupFieldNumber = 2;
  ::masterproto::AutoBackup auto_backup() const;
  void set_auto_backup(::masterproto::AutoBackup value);

  // int32 time_interval = 3;
  void clear_time_interval();
  static const int kTimeIntervalFieldNumber = 3;
  ::google::protobuf::int32 time_interval() const;
  void set_time_interval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterBackupConfigRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  int auto_backup_;
  ::google::protobuf::int32 time_interval_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterBackupConfigReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterBackupConfigReq) */ {
 public:
  SetClusterBackupConfigReq();
  virtual ~SetClusterBackupConfigReq();

  SetClusterBackupConfigReq(const SetClusterBackupConfigReq& from);

  inline SetClusterBackupConfigReq& operator=(const SetClusterBackupConfigReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterBackupConfigReq& default_instance();

  static inline const SetClusterBackupConfigReq* internal_default_instance() {
    return reinterpret_cast<const SetClusterBackupConfigReq*>(
               &_SetClusterBackupConfigReq_default_instance_);
  }

  void Swap(SetClusterBackupConfigReq* other);

  // implements Message ----------------------------------------------

  inline SetClusterBackupConfigReq* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterBackupConfigReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterBackupConfigReq& from);
  void MergeFrom(const SetClusterBackupConfigReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterBackupConfigReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // .masterproto.AutoBackup auto_backup = 5;
  void clear_auto_backup();
  static const int kAutoBackupFieldNumber = 5;
  ::masterproto::AutoBackup auto_backup() const;
  void set_auto_backup(::masterproto::AutoBackup value);

  // int32 time_interval = 6;
  void clear_time_interval();
  static const int kTimeIntervalFieldNumber = 6;
  ::google::protobuf::int32 time_interval() const;
  void set_time_interval(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterBackupConfigReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  int auto_backup_;
  ::google::protobuf::int32 time_interval_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SetClusterBackupConfigRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.SetClusterBackupConfigRsp) */ {
 public:
  SetClusterBackupConfigRsp();
  virtual ~SetClusterBackupConfigRsp();

  SetClusterBackupConfigRsp(const SetClusterBackupConfigRsp& from);

  inline SetClusterBackupConfigRsp& operator=(const SetClusterBackupConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SetClusterBackupConfigRsp& default_instance();

  static inline const SetClusterBackupConfigRsp* internal_default_instance() {
    return reinterpret_cast<const SetClusterBackupConfigRsp*>(
               &_SetClusterBackupConfigRsp_default_instance_);
  }

  void Swap(SetClusterBackupConfigRsp* other);

  // implements Message ----------------------------------------------

  inline SetClusterBackupConfigRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  SetClusterBackupConfigRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SetClusterBackupConfigRsp& from);
  void MergeFrom(const SetClusterBackupConfigRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SetClusterBackupConfigRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.SetClusterBackupConfigRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelClusterBackupConfigReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelClusterBackupConfigReq) */ {
 public:
  DelClusterBackupConfigReq();
  virtual ~DelClusterBackupConfigReq();

  DelClusterBackupConfigReq(const DelClusterBackupConfigReq& from);

  inline DelClusterBackupConfigReq& operator=(const DelClusterBackupConfigReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelClusterBackupConfigReq& default_instance();

  static inline const DelClusterBackupConfigReq* internal_default_instance() {
    return reinterpret_cast<const DelClusterBackupConfigReq*>(
               &_DelClusterBackupConfigReq_default_instance_);
  }

  void Swap(DelClusterBackupConfigReq* other);

  // implements Message ----------------------------------------------

  inline DelClusterBackupConfigReq* New() const PROTOBUF_FINAL { return New(NULL); }

  DelClusterBackupConfigReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelClusterBackupConfigReq& from);
  void MergeFrom(const DelClusterBackupConfigReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelClusterBackupConfigReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 4;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 4;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int32 region_id = 2;
  void clear_region_id();
  static const int kRegionIdFieldNumber = 2;
  ::google::protobuf::int32 region_id() const;
  void set_region_id(::google::protobuf::int32 value);

  // int32 set_id = 3;
  void clear_set_id();
  static const int kSetIdFieldNumber = 3;
  ::google::protobuf::int32 set_id() const;
  void set_set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:masterproto.DelClusterBackupConfigReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int32 region_id_;
  ::google::protobuf::int32 set_id_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DelClusterBackupConfigRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.DelClusterBackupConfigRsp) */ {
 public:
  DelClusterBackupConfigRsp();
  virtual ~DelClusterBackupConfigRsp();

  DelClusterBackupConfigRsp(const DelClusterBackupConfigRsp& from);

  inline DelClusterBackupConfigRsp& operator=(const DelClusterBackupConfigRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DelClusterBackupConfigRsp& default_instance();

  static inline const DelClusterBackupConfigRsp* internal_default_instance() {
    return reinterpret_cast<const DelClusterBackupConfigRsp*>(
               &_DelClusterBackupConfigRsp_default_instance_);
  }

  void Swap(DelClusterBackupConfigRsp* other);

  // implements Message ----------------------------------------------

  inline DelClusterBackupConfigRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  DelClusterBackupConfigRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DelClusterBackupConfigRsp& from);
  void MergeFrom(const DelClusterBackupConfigRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DelClusterBackupConfigRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.DelClusterBackupConfigRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRoutesRawReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterRoutesRawReq) */ {
 public:
  GetClusterRoutesRawReq();
  virtual ~GetClusterRoutesRawReq();

  GetClusterRoutesRawReq(const GetClusterRoutesRawReq& from);

  inline GetClusterRoutesRawReq& operator=(const GetClusterRoutesRawReq& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRoutesRawReq& default_instance();

  static inline const GetClusterRoutesRawReq* internal_default_instance() {
    return reinterpret_cast<const GetClusterRoutesRawReq*>(
               &_GetClusterRoutesRawReq_default_instance_);
  }

  void Swap(GetClusterRoutesRawReq* other);

  // implements Message ----------------------------------------------

  inline GetClusterRoutesRawReq* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterRoutesRawReq* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterRoutesRawReq& from);
  void MergeFrom(const GetClusterRoutesRawReq& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterRoutesRawReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string cluster_id = 2;
  void clear_cluster_id();
  static const int kClusterIdFieldNumber = 2;
  const ::std::string& cluster_id() const;
  void set_cluster_id(const ::std::string& value);
  #if LANG_CXX11
  void set_cluster_id(::std::string&& value);
  #endif
  void set_cluster_id(const char* value);
  void set_cluster_id(const char* value, size_t size);
  ::std::string* mutable_cluster_id();
  ::std::string* release_cluster_id();
  void set_allocated_cluster_id(::std::string* cluster_id);

  // .cmongoproto.ReqHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ReqHeader& header() const;
  ::cmongoproto::ReqHeader* mutable_header();
  ::cmongoproto::ReqHeader* release_header();
  void set_allocated_header(::cmongoproto::ReqHeader* header);

  // int64 time_nano = 3;
  void clear_time_nano();
  static const int kTimeNanoFieldNumber = 3;
  ::google::protobuf::int64 time_nano() const;
  void set_time_nano(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterRoutesRawReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr cluster_id_;
  ::cmongoproto::ReqHeader* header_;
  ::google::protobuf::int64 time_nano_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetClusterRoutesRawRsp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:masterproto.GetClusterRoutesRawRsp) */ {
 public:
  GetClusterRoutesRawRsp();
  virtual ~GetClusterRoutesRawRsp();

  GetClusterRoutesRawRsp(const GetClusterRoutesRawRsp& from);

  inline GetClusterRoutesRawRsp& operator=(const GetClusterRoutesRawRsp& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetClusterRoutesRawRsp& default_instance();

  static inline const GetClusterRoutesRawRsp* internal_default_instance() {
    return reinterpret_cast<const GetClusterRoutesRawRsp*>(
               &_GetClusterRoutesRawRsp_default_instance_);
  }

  void Swap(GetClusterRoutesRawRsp* other);

  // implements Message ----------------------------------------------

  inline GetClusterRoutesRawRsp* New() const PROTOBUF_FINAL { return New(NULL); }

  GetClusterRoutesRawRsp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GetClusterRoutesRawRsp& from);
  void MergeFrom(const GetClusterRoutesRawRsp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GetClusterRoutesRawRsp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .masterproto.TableRoutesRaw routes = 2;
  int routes_size() const;
  void clear_routes();
  static const int kRoutesFieldNumber = 2;
  const ::masterproto::TableRoutesRaw& routes(int index) const;
  ::masterproto::TableRoutesRaw* mutable_routes(int index);
  ::masterproto::TableRoutesRaw* add_routes();
  ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutesRaw >*
      mutable_routes();
  const ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutesRaw >&
      routes() const;

  // .cmongoproto.ResHeader header = 1;
  bool has_header() const;
  void clear_header();
  static const int kHeaderFieldNumber = 1;
  const ::cmongoproto::ResHeader& header() const;
  ::cmongoproto::ResHeader* mutable_header();
  ::cmongoproto::ResHeader* release_header();
  void set_allocated_header(::cmongoproto::ResHeader* header);

  // @@protoc_insertion_point(class_scope:masterproto.GetClusterRoutesRawRsp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutesRaw > routes_;
  ::cmongoproto::ResHeader* header_;
  mutable int _cached_size_;
  friend struct  protobuf_cmongo_2fmasterproto_2fmaster_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ContainerInfo

// string container_name = 1;
inline void ContainerInfo::clear_container_name() {
  container_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContainerInfo::container_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.container_name)
  return container_name_.GetNoArena();
}
inline void ContainerInfo::set_container_name(const ::std::string& value) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.container_name)
}
#if LANG_CXX11
inline void ContainerInfo::set_container_name(::std::string&& value) {
  
  container_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ContainerInfo.container_name)
}
#endif
inline void ContainerInfo::set_container_name(const char* value) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ContainerInfo.container_name)
}
inline void ContainerInfo::set_container_name(const char* value, size_t size) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ContainerInfo.container_name)
}
inline ::std::string* ContainerInfo::mutable_container_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerInfo.container_name)
  return container_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContainerInfo::release_container_name() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerInfo.container_name)
  
  return container_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerInfo::set_allocated_container_name(::std::string* container_name) {
  if (container_name != NULL) {
    
  } else {
    
  }
  container_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerInfo.container_name)
}

// string cluster_id = 2;
inline void ContainerInfo::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContainerInfo::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ContainerInfo::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.cluster_id)
}
#if LANG_CXX11
inline void ContainerInfo::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ContainerInfo.cluster_id)
}
#endif
inline void ContainerInfo::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ContainerInfo.cluster_id)
}
inline void ContainerInfo::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ContainerInfo.cluster_id)
}
inline ::std::string* ContainerInfo::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerInfo.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContainerInfo::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerInfo.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerInfo::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerInfo.cluster_id)
}

// string replicate_set = 3;
inline void ContainerInfo::clear_replicate_set() {
  replicate_set_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ContainerInfo::replicate_set() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.replicate_set)
  return replicate_set_.GetNoArena();
}
inline void ContainerInfo::set_replicate_set(const ::std::string& value) {
  
  replicate_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.replicate_set)
}
#if LANG_CXX11
inline void ContainerInfo::set_replicate_set(::std::string&& value) {
  
  replicate_set_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ContainerInfo.replicate_set)
}
#endif
inline void ContainerInfo::set_replicate_set(const char* value) {
  
  replicate_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ContainerInfo.replicate_set)
}
inline void ContainerInfo::set_replicate_set(const char* value, size_t size) {
  
  replicate_set_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ContainerInfo.replicate_set)
}
inline ::std::string* ContainerInfo::mutable_replicate_set() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerInfo.replicate_set)
  return replicate_set_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ContainerInfo::release_replicate_set() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerInfo.replicate_set)
  
  return replicate_set_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ContainerInfo::set_allocated_replicate_set(::std::string* replicate_set) {
  if (replicate_set != NULL) {
    
  } else {
    
  }
  replicate_set_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), replicate_set);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerInfo.replicate_set)
}

// .cmongoproto.MongoType container_type = 4;
inline void ContainerInfo::clear_container_type() {
  container_type_ = 0;
}
inline ::cmongoproto::MongoType ContainerInfo::container_type() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.container_type)
  return static_cast< ::cmongoproto::MongoType >(container_type_);
}
inline void ContainerInfo::set_container_type(::cmongoproto::MongoType value) {
  
  container_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.container_type)
}

// .cmongoproto.MongoVersion container_version = 5;
inline void ContainerInfo::clear_container_version() {
  container_version_ = 0;
}
inline ::cmongoproto::MongoVersion ContainerInfo::container_version() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.container_version)
  return static_cast< ::cmongoproto::MongoVersion >(container_version_);
}
inline void ContainerInfo::set_container_version(::cmongoproto::MongoVersion value) {
  
  container_version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.container_version)
}

// .masterproto.StatusType status = 6;
inline void ContainerInfo::clear_status() {
  status_ = 0;
}
inline ::masterproto::StatusType ContainerInfo::status() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.status)
  return static_cast< ::masterproto::StatusType >(status_);
}
inline void ContainerInfo::set_status(::masterproto::StatusType value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ContainerInfo.status)
}

// .cmongoproto.ResourceDesc quota = 7;
inline bool ContainerInfo::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void ContainerInfo::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& ContainerInfo::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerInfo.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* ContainerInfo::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerInfo.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* ContainerInfo::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerInfo.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void ContainerInfo::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerInfo.quota)
}

// -------------------------------------------------------------------

// MachineInfo

// string machine_ip = 1;
inline void MachineInfo::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MachineInfo::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void MachineInfo::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.machine_ip)
}
#if LANG_CXX11
inline void MachineInfo::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MachineInfo.machine_ip)
}
#endif
inline void MachineInfo::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MachineInfo.machine_ip)
}
inline void MachineInfo::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MachineInfo.machine_ip)
}
inline ::std::string* MachineInfo::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MachineInfo::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.MachineInfo.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MachineInfo::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MachineInfo.machine_ip)
}

// .masterproto.StatusType machine_status = 2;
inline void MachineInfo::clear_machine_status() {
  machine_status_ = 0;
}
inline ::masterproto::StatusType MachineInfo::machine_status() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.machine_status)
  return static_cast< ::masterproto::StatusType >(machine_status_);
}
inline void MachineInfo::set_machine_status(::masterproto::StatusType value) {
  
  machine_status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.machine_status)
}

// int32 container_num = 3;
inline void MachineInfo::clear_container_num() {
  container_num_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::container_num() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.container_num)
  return container_num_;
}
inline void MachineInfo::set_container_num(::google::protobuf::int32 value) {
  
  container_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.container_num)
}

// .masterproto.MachineType machine_type = 4;
inline void MachineInfo::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType MachineInfo::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void MachineInfo::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.machine_type)
}

// repeated string cluster_list = 5;
inline int MachineInfo::cluster_list_size() const {
  return cluster_list_.size();
}
inline void MachineInfo::clear_cluster_list() {
  cluster_list_.Clear();
}
inline const ::std::string& MachineInfo::cluster_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.cluster_list)
  return cluster_list_.Get(index);
}
inline ::std::string* MachineInfo::mutable_cluster_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.cluster_list)
  return cluster_list_.Mutable(index);
}
inline void MachineInfo::set_cluster_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.cluster_list)
  cluster_list_.Mutable(index)->assign(value);
}
inline void MachineInfo::set_cluster_list(int index, const char* value) {
  cluster_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.MachineInfo.cluster_list)
}
inline void MachineInfo::set_cluster_list(int index, const char* value, size_t size) {
  cluster_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.MachineInfo.cluster_list)
}
inline ::std::string* MachineInfo::add_cluster_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.MachineInfo.cluster_list)
  return cluster_list_.Add();
}
inline void MachineInfo::add_cluster_list(const ::std::string& value) {
  cluster_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.MachineInfo.cluster_list)
}
inline void MachineInfo::add_cluster_list(const char* value) {
  cluster_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.MachineInfo.cluster_list)
}
inline void MachineInfo::add_cluster_list(const char* value, size_t size) {
  cluster_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.MachineInfo.cluster_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MachineInfo::cluster_list() const {
  // @@protoc_insertion_point(field_list:masterproto.MachineInfo.cluster_list)
  return cluster_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MachineInfo::mutable_cluster_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MachineInfo.cluster_list)
  return &cluster_list_;
}

// .cmongoproto.ResourceDesc capacity = 6;
inline bool MachineInfo::has_capacity() const {
  return this != internal_default_instance() && capacity_ != NULL;
}
inline void MachineInfo::clear_capacity() {
  if (GetArenaNoVirtual() == NULL && capacity_ != NULL) delete capacity_;
  capacity_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& MachineInfo::capacity() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.capacity)
  return capacity_ != NULL ? *capacity_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* MachineInfo::mutable_capacity() {
  
  if (capacity_ == NULL) {
    capacity_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.capacity)
  return capacity_;
}
inline ::cmongoproto::ResourceDesc* MachineInfo::release_capacity() {
  // @@protoc_insertion_point(field_release:masterproto.MachineInfo.capacity)
  
  ::cmongoproto::ResourceDesc* temp = capacity_;
  capacity_ = NULL;
  return temp;
}
inline void MachineInfo::set_allocated_capacity(::cmongoproto::ResourceDesc* capacity) {
  delete capacity_;
  capacity_ = capacity;
  if (capacity) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MachineInfo.capacity)
}

// .cmongoproto.ResourceDesc free = 7;
inline bool MachineInfo::has_free() const {
  return this != internal_default_instance() && free_ != NULL;
}
inline void MachineInfo::clear_free() {
  if (GetArenaNoVirtual() == NULL && free_ != NULL) delete free_;
  free_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& MachineInfo::free() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.free)
  return free_ != NULL ? *free_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* MachineInfo::mutable_free() {
  
  if (free_ == NULL) {
    free_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.free)
  return free_;
}
inline ::cmongoproto::ResourceDesc* MachineInfo::release_free() {
  // @@protoc_insertion_point(field_release:masterproto.MachineInfo.free)
  
  ::cmongoproto::ResourceDesc* temp = free_;
  free_ = NULL;
  return temp;
}
inline void MachineInfo::set_allocated_free(::cmongoproto::ResourceDesc* free) {
  delete free_;
  free_ = free;
  if (free) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MachineInfo.free)
}

// repeated .masterproto.ContainerInfo container_list = 8;
inline int MachineInfo::container_list_size() const {
  return container_list_.size();
}
inline void MachineInfo::clear_container_list() {
  container_list_.Clear();
}
inline const ::masterproto::ContainerInfo& MachineInfo::container_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.container_list)
  return container_list_.Get(index);
}
inline ::masterproto::ContainerInfo* MachineInfo::mutable_container_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.container_list)
  return container_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* MachineInfo::add_container_list() {
  // @@protoc_insertion_point(field_add:masterproto.MachineInfo.container_list)
  return container_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
MachineInfo::mutable_container_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MachineInfo.container_list)
  return &container_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
MachineInfo::container_list() const {
  // @@protoc_insertion_point(field_list:masterproto.MachineInfo.container_list)
  return container_list_;
}

// int32 memory_URV = 9;
inline void MachineInfo::clear_memory_urv() {
  memory_urv_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::memory_urv() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.memory_URV)
  return memory_urv_;
}
inline void MachineInfo::set_memory_urv(::google::protobuf::int32 value) {
  
  memory_urv_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.memory_URV)
}

// int32 num_URV = 10;
inline void MachineInfo::clear_num_urv() {
  num_urv_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::num_urv() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.num_URV)
  return num_urv_;
}
inline void MachineInfo::set_num_urv(::google::protobuf::int32 value) {
  
  num_urv_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.num_URV)
}

// int32 idc_parent_id = 11;
inline void MachineInfo::clear_idc_parent_id() {
  idc_parent_id_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::idc_parent_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.idc_parent_id)
  return idc_parent_id_;
}
inline void MachineInfo::set_idc_parent_id(::google::protobuf::int32 value) {
  
  idc_parent_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.idc_parent_id)
}

// int32 idc_id = 12;
inline void MachineInfo::clear_idc_id() {
  idc_id_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::idc_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.idc_id)
  return idc_id_;
}
inline void MachineInfo::set_idc_id(::google::protobuf::int32 value) {
  
  idc_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.idc_id)
}

// int32 rack_id = 13;
inline void MachineInfo::clear_rack_id() {
  rack_id_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::rack_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.rack_id)
  return rack_id_;
}
inline void MachineInfo::set_rack_id(::google::protobuf::int32 value) {
  
  rack_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.rack_id)
}

// int32 idc_operation_id = 14;
inline void MachineInfo::clear_idc_operation_id() {
  idc_operation_id_ = 0;
}
inline ::google::protobuf::int32 MachineInfo::idc_operation_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.idc_operation_id)
  return idc_operation_id_;
}
inline void MachineInfo::set_idc_operation_id(::google::protobuf::int32 value) {
  
  idc_operation_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.idc_operation_id)
}

// string worker_version = 15;
inline void MachineInfo::clear_worker_version() {
  worker_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MachineInfo::worker_version() const {
  // @@protoc_insertion_point(field_get:masterproto.MachineInfo.worker_version)
  return worker_version_.GetNoArena();
}
inline void MachineInfo::set_worker_version(const ::std::string& value) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MachineInfo.worker_version)
}
#if LANG_CXX11
inline void MachineInfo::set_worker_version(::std::string&& value) {
  
  worker_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MachineInfo.worker_version)
}
#endif
inline void MachineInfo::set_worker_version(const char* value) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MachineInfo.worker_version)
}
inline void MachineInfo::set_worker_version(const char* value, size_t size) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MachineInfo.worker_version)
}
inline ::std::string* MachineInfo::mutable_worker_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MachineInfo.worker_version)
  return worker_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MachineInfo::release_worker_version() {
  // @@protoc_insertion_point(field_release:masterproto.MachineInfo.worker_version)
  
  return worker_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MachineInfo::set_allocated_worker_version(::std::string* worker_version) {
  if (worker_version != NULL) {
    
  } else {
    
  }
  worker_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MachineInfo.worker_version)
}

// -------------------------------------------------------------------

// ClusterBaseInfo

// string cluster_id = 1;
inline void ClusterBaseInfo::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ClusterBaseInfo::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.cluster_id)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.cluster_id)
}
#endif
inline void ClusterBaseInfo::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.cluster_id)
}
inline void ClusterBaseInfo::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.cluster_id)
}
inline ::std::string* ClusterBaseInfo::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.cluster_id)
}

// int64 app_id = 2;
inline void ClusterBaseInfo::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ClusterBaseInfo::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.app_id)
  return app_id_;
}
inline void ClusterBaseInfo::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.app_id)
}

// .masterproto.ClusterType cluster_type = 3;
inline void ClusterBaseInfo::clear_cluster_type() {
  cluster_type_ = 0;
}
inline ::masterproto::ClusterType ClusterBaseInfo::cluster_type() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.cluster_type)
  return static_cast< ::masterproto::ClusterType >(cluster_type_);
}
inline void ClusterBaseInfo::set_cluster_type(::masterproto::ClusterType value) {
  
  cluster_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.cluster_type)
}

// string storage_info = 4;
inline void ClusterBaseInfo::clear_storage_info() {
  storage_info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::storage_info() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.storage_info)
  return storage_info_.GetNoArena();
}
inline void ClusterBaseInfo::set_storage_info(const ::std::string& value) {
  
  storage_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.storage_info)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_storage_info(::std::string&& value) {
  
  storage_info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.storage_info)
}
#endif
inline void ClusterBaseInfo::set_storage_info(const char* value) {
  
  storage_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.storage_info)
}
inline void ClusterBaseInfo::set_storage_info(const char* value, size_t size) {
  
  storage_info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.storage_info)
}
inline ::std::string* ClusterBaseInfo::mutable_storage_info() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.storage_info)
  return storage_info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_storage_info() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.storage_info)
  
  return storage_info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_storage_info(::std::string* storage_info) {
  if (storage_info != NULL) {
    
  } else {
    
  }
  storage_info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), storage_info);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.storage_info)
}

// int32 replicate_set_num = 5;
inline void ClusterBaseInfo::clear_replicate_set_num() {
  replicate_set_num_ = 0;
}
inline ::google::protobuf::int32 ClusterBaseInfo::replicate_set_num() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.replicate_set_num)
  return replicate_set_num_;
}
inline void ClusterBaseInfo::set_replicate_set_num(::google::protobuf::int32 value) {
  
  replicate_set_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.replicate_set_num)
}

// int32 secondary_num = 6;
inline void ClusterBaseInfo::clear_secondary_num() {
  secondary_num_ = 0;
}
inline ::google::protobuf::int32 ClusterBaseInfo::secondary_num() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.secondary_num)
  return secondary_num_;
}
inline void ClusterBaseInfo::set_secondary_num(::google::protobuf::int32 value) {
  
  secondary_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.secondary_num)
}

// .cmongoproto.MongoVersion mongo_version = 7;
inline void ClusterBaseInfo::clear_mongo_version() {
  mongo_version_ = 0;
}
inline ::cmongoproto::MongoVersion ClusterBaseInfo::mongo_version() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.mongo_version)
  return static_cast< ::cmongoproto::MongoVersion >(mongo_version_);
}
inline void ClusterBaseInfo::set_mongo_version(::cmongoproto::MongoVersion value) {
  
  mongo_version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.mongo_version)
}

// .cmongoproto.ResourceDesc quota = 8;
inline bool ClusterBaseInfo::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void ClusterBaseInfo::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& ClusterBaseInfo::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* ClusterBaseInfo::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* ClusterBaseInfo::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void ClusterBaseInfo::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.quota)
}

// .masterproto.ClusterStatus status = 9;
inline void ClusterBaseInfo::clear_status() {
  status_ = 0;
}
inline ::masterproto::ClusterStatus ClusterBaseInfo::status() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.status)
  return static_cast< ::masterproto::ClusterStatus >(status_);
}
inline void ClusterBaseInfo::set_status(::masterproto::ClusterStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.status)
}

// string logic_cluster_id = 10;
inline void ClusterBaseInfo::clear_logic_cluster_id() {
  logic_cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::logic_cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.logic_cluster_id)
  return logic_cluster_id_.GetNoArena();
}
inline void ClusterBaseInfo::set_logic_cluster_id(const ::std::string& value) {
  
  logic_cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.logic_cluster_id)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_logic_cluster_id(::std::string&& value) {
  
  logic_cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.logic_cluster_id)
}
#endif
inline void ClusterBaseInfo::set_logic_cluster_id(const char* value) {
  
  logic_cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.logic_cluster_id)
}
inline void ClusterBaseInfo::set_logic_cluster_id(const char* value, size_t size) {
  
  logic_cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.logic_cluster_id)
}
inline ::std::string* ClusterBaseInfo::mutable_logic_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.logic_cluster_id)
  return logic_cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_logic_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.logic_cluster_id)
  
  return logic_cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_logic_cluster_id(::std::string* logic_cluster_id) {
  if (logic_cluster_id != NULL) {
    
  } else {
    
  }
  logic_cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logic_cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.logic_cluster_id)
}

// .masterproto.MachineType machine_type = 11;
inline void ClusterBaseInfo::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType ClusterBaseInfo::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void ClusterBaseInfo::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.machine_type)
}

// int32 cluster_version = 12;
inline void ClusterBaseInfo::clear_cluster_version() {
  cluster_version_ = 0;
}
inline ::google::protobuf::int32 ClusterBaseInfo::cluster_version() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.cluster_version)
  return cluster_version_;
}
inline void ClusterBaseInfo::set_cluster_version(::google::protobuf::int32 value) {
  
  cluster_version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.cluster_version)
}

// string proxy_version = 13;
inline void ClusterBaseInfo::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void ClusterBaseInfo::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.proxy_version)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.proxy_version)
}
#endif
inline void ClusterBaseInfo::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.proxy_version)
}
inline void ClusterBaseInfo::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.proxy_version)
}
inline ::std::string* ClusterBaseInfo::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.proxy_version)
}

// string mongod_subversion = 14;
inline void ClusterBaseInfo::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void ClusterBaseInfo::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.mongod_subversion)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.mongod_subversion)
}
#endif
inline void ClusterBaseInfo::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.mongod_subversion)
}
inline void ClusterBaseInfo::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.mongod_subversion)
}
inline ::std::string* ClusterBaseInfo::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.mongod_subversion)
}

// string dynamo_proxy_version = 15;
inline void ClusterBaseInfo::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterBaseInfo::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void ClusterBaseInfo::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.dynamo_proxy_version)
}
#if LANG_CXX11
inline void ClusterBaseInfo::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterBaseInfo.dynamo_proxy_version)
}
#endif
inline void ClusterBaseInfo::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterBaseInfo.dynamo_proxy_version)
}
inline void ClusterBaseInfo::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterBaseInfo.dynamo_proxy_version)
}
inline ::std::string* ClusterBaseInfo::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterBaseInfo.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterBaseInfo::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterBaseInfo.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterBaseInfo::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterBaseInfo.dynamo_proxy_version)
}

// int32 max_client_conns = 16;
inline void ClusterBaseInfo::clear_max_client_conns() {
  max_client_conns_ = 0;
}
inline ::google::protobuf::int32 ClusterBaseInfo::max_client_conns() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterBaseInfo.max_client_conns)
  return max_client_conns_;
}
inline void ClusterBaseInfo::set_max_client_conns(::google::protobuf::int32 value) {
  
  max_client_conns_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ClusterBaseInfo.max_client_conns)
}

// -------------------------------------------------------------------

// ClusterExtraInfo

// string custom_data = 1;
inline void ClusterExtraInfo::clear_custom_data() {
  custom_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ClusterExtraInfo::custom_data() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterExtraInfo.custom_data)
  return custom_data_.GetNoArena();
}
inline void ClusterExtraInfo::set_custom_data(const ::std::string& value) {
  
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ClusterExtraInfo.custom_data)
}
#if LANG_CXX11
inline void ClusterExtraInfo::set_custom_data(::std::string&& value) {
  
  custom_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ClusterExtraInfo.custom_data)
}
#endif
inline void ClusterExtraInfo::set_custom_data(const char* value) {
  
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ClusterExtraInfo.custom_data)
}
inline void ClusterExtraInfo::set_custom_data(const char* value, size_t size) {
  
  custom_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ClusterExtraInfo.custom_data)
}
inline ::std::string* ClusterExtraInfo::mutable_custom_data() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterExtraInfo.custom_data)
  return custom_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ClusterExtraInfo::release_custom_data() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterExtraInfo.custom_data)
  
  return custom_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ClusterExtraInfo::set_allocated_custom_data(::std::string* custom_data) {
  if (custom_data != NULL) {
    
  } else {
    
  }
  custom_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), custom_data);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterExtraInfo.custom_data)
}

// -------------------------------------------------------------------

// ReplicateSetInfo

// string rsName = 1;
inline void ReplicateSetInfo::clear_rsname() {
  rsname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReplicateSetInfo::rsname() const {
  // @@protoc_insertion_point(field_get:masterproto.ReplicateSetInfo.rsName)
  return rsname_.GetNoArena();
}
inline void ReplicateSetInfo::set_rsname(const ::std::string& value) {
  
  rsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ReplicateSetInfo.rsName)
}
#if LANG_CXX11
inline void ReplicateSetInfo::set_rsname(::std::string&& value) {
  
  rsname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ReplicateSetInfo.rsName)
}
#endif
inline void ReplicateSetInfo::set_rsname(const char* value) {
  
  rsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ReplicateSetInfo.rsName)
}
inline void ReplicateSetInfo::set_rsname(const char* value, size_t size) {
  
  rsname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ReplicateSetInfo.rsName)
}
inline ::std::string* ReplicateSetInfo::mutable_rsname() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ReplicateSetInfo.rsName)
  return rsname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReplicateSetInfo::release_rsname() {
  // @@protoc_insertion_point(field_release:masterproto.ReplicateSetInfo.rsName)
  
  return rsname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReplicateSetInfo::set_allocated_rsname(::std::string* rsname) {
  if (rsname != NULL) {
    
  } else {
    
  }
  rsname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rsname);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ReplicateSetInfo.rsName)
}

// repeated .masterproto.ContainerInfo mongod_list = 2;
inline int ReplicateSetInfo::mongod_list_size() const {
  return mongod_list_.size();
}
inline void ReplicateSetInfo::clear_mongod_list() {
  mongod_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ReplicateSetInfo::mongod_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ReplicateSetInfo.mongod_list)
  return mongod_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ReplicateSetInfo::mutable_mongod_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ReplicateSetInfo.mongod_list)
  return mongod_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ReplicateSetInfo::add_mongod_list() {
  // @@protoc_insertion_point(field_add:masterproto.ReplicateSetInfo.mongod_list)
  return mongod_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ReplicateSetInfo::mutable_mongod_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ReplicateSetInfo.mongod_list)
  return &mongod_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ReplicateSetInfo::mongod_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ReplicateSetInfo.mongod_list)
  return mongod_list_;
}

// repeated .masterproto.ContainerInfo proxy_list = 3;
inline int ReplicateSetInfo::proxy_list_size() const {
  return proxy_list_.size();
}
inline void ReplicateSetInfo::clear_proxy_list() {
  proxy_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ReplicateSetInfo::proxy_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ReplicateSetInfo.proxy_list)
  return proxy_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ReplicateSetInfo::mutable_proxy_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ReplicateSetInfo.proxy_list)
  return proxy_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ReplicateSetInfo::add_proxy_list() {
  // @@protoc_insertion_point(field_add:masterproto.ReplicateSetInfo.proxy_list)
  return proxy_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ReplicateSetInfo::mutable_proxy_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ReplicateSetInfo.proxy_list)
  return &proxy_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ReplicateSetInfo::proxy_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ReplicateSetInfo.proxy_list)
  return proxy_list_;
}

// -------------------------------------------------------------------

// ClusterInfo

// .masterproto.ClusterBaseInfo base_info = 1;
inline bool ClusterInfo::has_base_info() const {
  return this != internal_default_instance() && base_info_ != NULL;
}
inline void ClusterInfo::clear_base_info() {
  if (GetArenaNoVirtual() == NULL && base_info_ != NULL) delete base_info_;
  base_info_ = NULL;
}
inline const ::masterproto::ClusterBaseInfo& ClusterInfo::base_info() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.base_info)
  return base_info_ != NULL ? *base_info_
                         : *::masterproto::ClusterBaseInfo::internal_default_instance();
}
inline ::masterproto::ClusterBaseInfo* ClusterInfo::mutable_base_info() {
  
  if (base_info_ == NULL) {
    base_info_ = new ::masterproto::ClusterBaseInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.base_info)
  return base_info_;
}
inline ::masterproto::ClusterBaseInfo* ClusterInfo::release_base_info() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterInfo.base_info)
  
  ::masterproto::ClusterBaseInfo* temp = base_info_;
  base_info_ = NULL;
  return temp;
}
inline void ClusterInfo::set_allocated_base_info(::masterproto::ClusterBaseInfo* base_info) {
  delete base_info_;
  base_info_ = base_info;
  if (base_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterInfo.base_info)
}

// repeated .masterproto.ReplicateSetInfo rs_list = 2;
inline int ClusterInfo::rs_list_size() const {
  return rs_list_.size();
}
inline void ClusterInfo::clear_rs_list() {
  rs_list_.Clear();
}
inline const ::masterproto::ReplicateSetInfo& ClusterInfo::rs_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.rs_list)
  return rs_list_.Get(index);
}
inline ::masterproto::ReplicateSetInfo* ClusterInfo::mutable_rs_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.rs_list)
  return rs_list_.Mutable(index);
}
inline ::masterproto::ReplicateSetInfo* ClusterInfo::add_rs_list() {
  // @@protoc_insertion_point(field_add:masterproto.ClusterInfo.rs_list)
  return rs_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ReplicateSetInfo >*
ClusterInfo::mutable_rs_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ClusterInfo.rs_list)
  return &rs_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ReplicateSetInfo >&
ClusterInfo::rs_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ClusterInfo.rs_list)
  return rs_list_;
}

// repeated .masterproto.ContainerInfo mongos_list = 3;
inline int ClusterInfo::mongos_list_size() const {
  return mongos_list_.size();
}
inline void ClusterInfo::clear_mongos_list() {
  mongos_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ClusterInfo::mongos_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.mongos_list)
  return mongos_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::mutable_mongos_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.mongos_list)
  return mongos_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::add_mongos_list() {
  // @@protoc_insertion_point(field_add:masterproto.ClusterInfo.mongos_list)
  return mongos_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ClusterInfo::mutable_mongos_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ClusterInfo.mongos_list)
  return &mongos_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ClusterInfo::mongos_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ClusterInfo.mongos_list)
  return mongos_list_;
}

// repeated .masterproto.ContainerInfo config_list = 4;
inline int ClusterInfo::config_list_size() const {
  return config_list_.size();
}
inline void ClusterInfo::clear_config_list() {
  config_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ClusterInfo::config_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.config_list)
  return config_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::mutable_config_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.config_list)
  return config_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::add_config_list() {
  // @@protoc_insertion_point(field_add:masterproto.ClusterInfo.config_list)
  return config_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ClusterInfo::mutable_config_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ClusterInfo.config_list)
  return &config_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ClusterInfo::config_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ClusterInfo.config_list)
  return config_list_;
}

// repeated .masterproto.ContainerInfo proxy_list = 5;
inline int ClusterInfo::proxy_list_size() const {
  return proxy_list_.size();
}
inline void ClusterInfo::clear_proxy_list() {
  proxy_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ClusterInfo::proxy_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.proxy_list)
  return proxy_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::mutable_proxy_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.proxy_list)
  return proxy_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::add_proxy_list() {
  // @@protoc_insertion_point(field_add:masterproto.ClusterInfo.proxy_list)
  return proxy_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ClusterInfo::mutable_proxy_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ClusterInfo.proxy_list)
  return &proxy_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ClusterInfo::proxy_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ClusterInfo.proxy_list)
  return proxy_list_;
}

// repeated .masterproto.ContainerInfo dynamo_proxy_list = 6;
inline int ClusterInfo::dynamo_proxy_list_size() const {
  return dynamo_proxy_list_.size();
}
inline void ClusterInfo::clear_dynamo_proxy_list() {
  dynamo_proxy_list_.Clear();
}
inline const ::masterproto::ContainerInfo& ClusterInfo::dynamo_proxy_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.dynamo_proxy_list)
  return dynamo_proxy_list_.Get(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::mutable_dynamo_proxy_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.dynamo_proxy_list)
  return dynamo_proxy_list_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ClusterInfo::add_dynamo_proxy_list() {
  // @@protoc_insertion_point(field_add:masterproto.ClusterInfo.dynamo_proxy_list)
  return dynamo_proxy_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ClusterInfo::mutable_dynamo_proxy_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ClusterInfo.dynamo_proxy_list)
  return &dynamo_proxy_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ClusterInfo::dynamo_proxy_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ClusterInfo.dynamo_proxy_list)
  return dynamo_proxy_list_;
}

// .masterproto.ClusterExtraInfo extra_info = 7;
inline bool ClusterInfo::has_extra_info() const {
  return this != internal_default_instance() && extra_info_ != NULL;
}
inline void ClusterInfo::clear_extra_info() {
  if (GetArenaNoVirtual() == NULL && extra_info_ != NULL) delete extra_info_;
  extra_info_ = NULL;
}
inline const ::masterproto::ClusterExtraInfo& ClusterInfo::extra_info() const {
  // @@protoc_insertion_point(field_get:masterproto.ClusterInfo.extra_info)
  return extra_info_ != NULL ? *extra_info_
                         : *::masterproto::ClusterExtraInfo::internal_default_instance();
}
inline ::masterproto::ClusterExtraInfo* ClusterInfo::mutable_extra_info() {
  
  if (extra_info_ == NULL) {
    extra_info_ = new ::masterproto::ClusterExtraInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ClusterInfo.extra_info)
  return extra_info_;
}
inline ::masterproto::ClusterExtraInfo* ClusterInfo::release_extra_info() {
  // @@protoc_insertion_point(field_release:masterproto.ClusterInfo.extra_info)
  
  ::masterproto::ClusterExtraInfo* temp = extra_info_;
  extra_info_ = NULL;
  return temp;
}
inline void ClusterInfo::set_allocated_extra_info(::masterproto::ClusterExtraInfo* extra_info) {
  delete extra_info_;
  extra_info_ = extra_info;
  if (extra_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ClusterInfo.extra_info)
}

// -------------------------------------------------------------------

// JobInfo

// int64 job_id = 1;
inline void JobInfo::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 JobInfo::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.JobInfo.job_id)
  return job_id_;
}
inline void JobInfo::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.JobInfo.job_id)
}

// .masterproto.JobType job_type = 2;
inline void JobInfo::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType JobInfo::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.JobInfo.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void JobInfo::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.JobInfo.job_type)
}

// .masterproto.JobStatus job_status = 3;
inline void JobInfo::clear_job_status() {
  job_status_ = 0;
}
inline ::masterproto::JobStatus JobInfo::job_status() const {
  // @@protoc_insertion_point(field_get:masterproto.JobInfo.job_status)
  return static_cast< ::masterproto::JobStatus >(job_status_);
}
inline void JobInfo::set_job_status(::masterproto::JobStatus value) {
  
  job_status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.JobInfo.job_status)
}

// -------------------------------------------------------------------

// BackupInfo

// string start_time = 1;
inline void BackupInfo::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupInfo::start_time() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.start_time)
  return start_time_.GetNoArena();
}
inline void BackupInfo::set_start_time(const ::std::string& value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.start_time)
}
#if LANG_CXX11
inline void BackupInfo::set_start_time(::std::string&& value) {
  
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupInfo.start_time)
}
#endif
inline void BackupInfo::set_start_time(const char* value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupInfo.start_time)
}
inline void BackupInfo::set_start_time(const char* value, size_t size) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupInfo.start_time)
}
inline ::std::string* BackupInfo::mutable_start_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupInfo.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupInfo::release_start_time() {
  // @@protoc_insertion_point(field_release:masterproto.BackupInfo.start_time)
  
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupInfo::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    
  } else {
    
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupInfo.start_time)
}

// string end_time = 2;
inline void BackupInfo::clear_end_time() {
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupInfo::end_time() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.end_time)
  return end_time_.GetNoArena();
}
inline void BackupInfo::set_end_time(const ::std::string& value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.end_time)
}
#if LANG_CXX11
inline void BackupInfo::set_end_time(::std::string&& value) {
  
  end_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupInfo.end_time)
}
#endif
inline void BackupInfo::set_end_time(const char* value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupInfo.end_time)
}
inline void BackupInfo::set_end_time(const char* value, size_t size) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupInfo.end_time)
}
inline ::std::string* BackupInfo::mutable_end_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupInfo.end_time)
  return end_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupInfo::release_end_time() {
  // @@protoc_insertion_point(field_release:masterproto.BackupInfo.end_time)
  
  return end_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupInfo::set_allocated_end_time(::std::string* end_time) {
  if (end_time != NULL) {
    
  } else {
    
  }
  end_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupInfo.end_time)
}

// int64 backup_size = 3;
inline void BackupInfo::clear_backup_size() {
  backup_size_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BackupInfo::backup_size() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.backup_size)
  return backup_size_;
}
inline void BackupInfo::set_backup_size(::google::protobuf::int64 value) {
  
  backup_size_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.backup_size)
}

// int32 backup_num = 4;
inline void BackupInfo::clear_backup_num() {
  backup_num_ = 0;
}
inline ::google::protobuf::int32 BackupInfo::backup_num() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.backup_num)
  return backup_num_;
}
inline void BackupInfo::set_backup_num(::google::protobuf::int32 value) {
  
  backup_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.backup_num)
}

// bool type = 5;
inline void BackupInfo::clear_type() {
  type_ = false;
}
inline bool BackupInfo::type() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.type)
  return type_;
}
inline void BackupInfo::set_type(bool value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.type)
}

// .masterproto.JobStatus backup_status = 6;
inline void BackupInfo::clear_backup_status() {
  backup_status_ = 0;
}
inline ::masterproto::JobStatus BackupInfo::backup_status() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupInfo.backup_status)
  return static_cast< ::masterproto::JobStatus >(backup_status_);
}
inline void BackupInfo::set_backup_status(::masterproto::JobStatus value) {
  
  backup_status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupInfo.backup_status)
}

// -------------------------------------------------------------------

// ProxyChgInfo

// string cluster_id = 1;
inline void ProxyChgInfo::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgInfo::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgInfo.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ProxyChgInfo::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgInfo.cluster_id)
}
#if LANG_CXX11
inline void ProxyChgInfo::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgInfo.cluster_id)
}
#endif
inline void ProxyChgInfo::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgInfo.cluster_id)
}
inline void ProxyChgInfo::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgInfo.cluster_id)
}
inline ::std::string* ProxyChgInfo::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgInfo.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgInfo::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgInfo.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgInfo::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgInfo.cluster_id)
}

// repeated .masterproto.ContainerInfo off_work = 2;
inline int ProxyChgInfo::off_work_size() const {
  return off_work_.size();
}
inline void ProxyChgInfo::clear_off_work() {
  off_work_.Clear();
}
inline const ::masterproto::ContainerInfo& ProxyChgInfo::off_work(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgInfo.off_work)
  return off_work_.Get(index);
}
inline ::masterproto::ContainerInfo* ProxyChgInfo::mutable_off_work(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgInfo.off_work)
  return off_work_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ProxyChgInfo::add_off_work() {
  // @@protoc_insertion_point(field_add:masterproto.ProxyChgInfo.off_work)
  return off_work_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ProxyChgInfo::mutable_off_work() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ProxyChgInfo.off_work)
  return &off_work_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ProxyChgInfo::off_work() const {
  // @@protoc_insertion_point(field_list:masterproto.ProxyChgInfo.off_work)
  return off_work_;
}

// repeated .masterproto.ContainerInfo on_work = 3;
inline int ProxyChgInfo::on_work_size() const {
  return on_work_.size();
}
inline void ProxyChgInfo::clear_on_work() {
  on_work_.Clear();
}
inline const ::masterproto::ContainerInfo& ProxyChgInfo::on_work(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgInfo.on_work)
  return on_work_.Get(index);
}
inline ::masterproto::ContainerInfo* ProxyChgInfo::mutable_on_work(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgInfo.on_work)
  return on_work_.Mutable(index);
}
inline ::masterproto::ContainerInfo* ProxyChgInfo::add_on_work() {
  // @@protoc_insertion_point(field_add:masterproto.ProxyChgInfo.on_work)
  return on_work_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
ProxyChgInfo::mutable_on_work() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ProxyChgInfo.on_work)
  return &on_work_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
ProxyChgInfo::on_work() const {
  // @@protoc_insertion_point(field_list:masterproto.ProxyChgInfo.on_work)
  return on_work_;
}

// -------------------------------------------------------------------

// OplogInfo

// string rs_name = 1;
inline void OplogInfo::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OplogInfo::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.rs_name)
  return rs_name_.GetNoArena();
}
inline void OplogInfo::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.rs_name)
}
#if LANG_CXX11
inline void OplogInfo::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.OplogInfo.rs_name)
}
#endif
inline void OplogInfo::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.OplogInfo.rs_name)
}
inline void OplogInfo::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.OplogInfo.rs_name)
}
inline ::std::string* OplogInfo::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.OplogInfo.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OplogInfo::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.OplogInfo.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OplogInfo::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.OplogInfo.rs_name)
}

// uint64 log_size = 2;
inline void OplogInfo::clear_log_size() {
  log_size_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OplogInfo::log_size() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.log_size)
  return log_size_;
}
inline void OplogInfo::set_log_size(::google::protobuf::uint64 value) {
  
  log_size_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.log_size)
}

// uint64 used = 3;
inline void OplogInfo::clear_used() {
  used_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 OplogInfo::used() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.used)
  return used_;
}
inline void OplogInfo::set_used(::google::protobuf::uint64 value) {
  
  used_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.used)
}

// int32 time_diff_secs = 4;
inline void OplogInfo::clear_time_diff_secs() {
  time_diff_secs_ = 0;
}
inline ::google::protobuf::int32 OplogInfo::time_diff_secs() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.time_diff_secs)
  return time_diff_secs_;
}
inline void OplogInfo::set_time_diff_secs(::google::protobuf::int32 value) {
  
  time_diff_secs_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.time_diff_secs)
}

// int32 t_first = 5;
inline void OplogInfo::clear_t_first() {
  t_first_ = 0;
}
inline ::google::protobuf::int32 OplogInfo::t_first() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.t_first)
  return t_first_;
}
inline void OplogInfo::set_t_first(::google::protobuf::int32 value) {
  
  t_first_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.t_first)
}

// int32 t_last = 6;
inline void OplogInfo::clear_t_last() {
  t_last_ = 0;
}
inline ::google::protobuf::int32 OplogInfo::t_last() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.t_last)
  return t_last_;
}
inline void OplogInfo::set_t_last(::google::protobuf::int32 value) {
  
  t_last_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.t_last)
}

// int64 oplog_first = 7;
inline void OplogInfo::clear_oplog_first() {
  oplog_first_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OplogInfo::oplog_first() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.oplog_first)
  return oplog_first_;
}
inline void OplogInfo::set_oplog_first(::google::protobuf::int64 value) {
  
  oplog_first_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.oplog_first)
}

// int64 oplog_last = 8;
inline void OplogInfo::clear_oplog_last() {
  oplog_last_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 OplogInfo::oplog_last() const {
  // @@protoc_insertion_point(field_get:masterproto.OplogInfo.oplog_last)
  return oplog_last_;
}
inline void OplogInfo::set_oplog_last(::google::protobuf::int64 value) {
  
  oplog_last_ = value;
  // @@protoc_insertion_point(field_set:masterproto.OplogInfo.oplog_last)
}

// -------------------------------------------------------------------

// InterfacePart

// string interfaceName = 1;
inline void InterfacePart::clear_interfacename() {
  interfacename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InterfacePart::interfacename() const {
  // @@protoc_insertion_point(field_get:masterproto.InterfacePart.interfaceName)
  return interfacename_.GetNoArena();
}
inline void InterfacePart::set_interfacename(const ::std::string& value) {
  
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.InterfacePart.interfaceName)
}
#if LANG_CXX11
inline void InterfacePart::set_interfacename(::std::string&& value) {
  
  interfacename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.InterfacePart.interfaceName)
}
#endif
inline void InterfacePart::set_interfacename(const char* value) {
  
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.InterfacePart.interfaceName)
}
inline void InterfacePart::set_interfacename(const char* value, size_t size) {
  
  interfacename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.InterfacePart.interfaceName)
}
inline ::std::string* InterfacePart::mutable_interfacename() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.InterfacePart.interfaceName)
  return interfacename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InterfacePart::release_interfacename() {
  // @@protoc_insertion_point(field_release:masterproto.InterfacePart.interfaceName)
  
  return interfacename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InterfacePart::set_allocated_interfacename(::std::string* interfacename) {
  if (interfacename != NULL) {
    
  } else {
    
  }
  interfacename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interfacename);
  // @@protoc_insertion_point(field_set_allocated:masterproto.InterfacePart.interfaceName)
}

// .masterproto.ProxyChgInfo para = 2;
inline bool InterfacePart::has_para() const {
  return this != internal_default_instance() && para_ != NULL;
}
inline void InterfacePart::clear_para() {
  if (GetArenaNoVirtual() == NULL && para_ != NULL) delete para_;
  para_ = NULL;
}
inline const ::masterproto::ProxyChgInfo& InterfacePart::para() const {
  // @@protoc_insertion_point(field_get:masterproto.InterfacePart.para)
  return para_ != NULL ? *para_
                         : *::masterproto::ProxyChgInfo::internal_default_instance();
}
inline ::masterproto::ProxyChgInfo* InterfacePart::mutable_para() {
  
  if (para_ == NULL) {
    para_ = new ::masterproto::ProxyChgInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.InterfacePart.para)
  return para_;
}
inline ::masterproto::ProxyChgInfo* InterfacePart::release_para() {
  // @@protoc_insertion_point(field_release:masterproto.InterfacePart.para)
  
  ::masterproto::ProxyChgInfo* temp = para_;
  para_ = NULL;
  return temp;
}
inline void InterfacePart::set_allocated_para(::masterproto::ProxyChgInfo* para) {
  delete para_;
  para_ = para;
  if (para) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.InterfacePart.para)
}

// -------------------------------------------------------------------

// ProxyChgReq

// string version = 1;
inline void ProxyChgReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgReq::version() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.version)
  return version_.GetNoArena();
}
inline void ProxyChgReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.version)
}
#if LANG_CXX11
inline void ProxyChgReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgReq.version)
}
#endif
inline void ProxyChgReq::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgReq.version)
}
inline void ProxyChgReq::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgReq.version)
}
inline ::std::string* ProxyChgReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgReq::release_version() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgReq.version)
}

// string caller = 2;
inline void ProxyChgReq::clear_caller() {
  caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgReq::caller() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.caller)
  return caller_.GetNoArena();
}
inline void ProxyChgReq::set_caller(const ::std::string& value) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.caller)
}
#if LANG_CXX11
inline void ProxyChgReq::set_caller(::std::string&& value) {
  
  caller_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgReq.caller)
}
#endif
inline void ProxyChgReq::set_caller(const char* value) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgReq.caller)
}
inline void ProxyChgReq::set_caller(const char* value, size_t size) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgReq.caller)
}
inline ::std::string* ProxyChgReq::mutable_caller() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgReq.caller)
  return caller_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgReq::release_caller() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgReq.caller)
  
  return caller_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgReq::set_allocated_caller(::std::string* caller) {
  if (caller != NULL) {
    
  } else {
    
  }
  caller_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgReq.caller)
}

// string callee = 3;
inline void ProxyChgReq::clear_callee() {
  callee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgReq::callee() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.callee)
  return callee_.GetNoArena();
}
inline void ProxyChgReq::set_callee(const ::std::string& value) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.callee)
}
#if LANG_CXX11
inline void ProxyChgReq::set_callee(::std::string&& value) {
  
  callee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgReq.callee)
}
#endif
inline void ProxyChgReq::set_callee(const char* value) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgReq.callee)
}
inline void ProxyChgReq::set_callee(const char* value, size_t size) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgReq.callee)
}
inline ::std::string* ProxyChgReq::mutable_callee() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgReq.callee)
  return callee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgReq::release_callee() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgReq.callee)
  
  return callee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgReq::set_allocated_callee(::std::string* callee) {
  if (callee != NULL) {
    
  } else {
    
  }
  callee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callee);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgReq.callee)
}

// string password = 4;
inline void ProxyChgReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgReq::password() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.password)
  return password_.GetNoArena();
}
inline void ProxyChgReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.password)
}
#if LANG_CXX11
inline void ProxyChgReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgReq.password)
}
#endif
inline void ProxyChgReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgReq.password)
}
inline void ProxyChgReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgReq.password)
}
inline ::std::string* ProxyChgReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgReq::release_password() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgReq.password)
}

// int64 event_id = 5;
inline void ProxyChgReq::clear_event_id() {
  event_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProxyChgReq::event_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.event_id)
  return event_id_;
}
inline void ProxyChgReq::set_event_id(::google::protobuf::int64 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.event_id)
}

// int64 timestamp = 6;
inline void ProxyChgReq::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProxyChgReq::timestamp() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.timestamp)
  return timestamp_;
}
inline void ProxyChgReq::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgReq.timestamp)
}

// .masterproto.InterfacePart interface = 7;
inline bool ProxyChgReq::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline void ProxyChgReq::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) delete interface_;
  interface_ = NULL;
}
inline const ::masterproto::InterfacePart& ProxyChgReq::interface() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgReq.interface)
  return interface_ != NULL ? *interface_
                         : *::masterproto::InterfacePart::internal_default_instance();
}
inline ::masterproto::InterfacePart* ProxyChgReq::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::masterproto::InterfacePart;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgReq.interface)
  return interface_;
}
inline ::masterproto::InterfacePart* ProxyChgReq::release_interface() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgReq.interface)
  
  ::masterproto::InterfacePart* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline void ProxyChgReq::set_allocated_interface(::masterproto::InterfacePart* interface) {
  delete interface_;
  interface_ = interface;
  if (interface) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgReq.interface)
}

// -------------------------------------------------------------------

// ProxyChgRsp

// string version = 1;
inline void ProxyChgRsp::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgRsp::version() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.version)
  return version_.GetNoArena();
}
inline void ProxyChgRsp::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.version)
}
#if LANG_CXX11
inline void ProxyChgRsp::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgRsp.version)
}
#endif
inline void ProxyChgRsp::set_version(const char* value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgRsp.version)
}
inline void ProxyChgRsp::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgRsp.version)
}
inline ::std::string* ProxyChgRsp::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgRsp.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgRsp::release_version() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgRsp.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgRsp::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgRsp.version)
}

// string caller = 2;
inline void ProxyChgRsp::clear_caller() {
  caller_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgRsp::caller() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.caller)
  return caller_.GetNoArena();
}
inline void ProxyChgRsp::set_caller(const ::std::string& value) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.caller)
}
#if LANG_CXX11
inline void ProxyChgRsp::set_caller(::std::string&& value) {
  
  caller_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgRsp.caller)
}
#endif
inline void ProxyChgRsp::set_caller(const char* value) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgRsp.caller)
}
inline void ProxyChgRsp::set_caller(const char* value, size_t size) {
  
  caller_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgRsp.caller)
}
inline ::std::string* ProxyChgRsp::mutable_caller() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgRsp.caller)
  return caller_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgRsp::release_caller() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgRsp.caller)
  
  return caller_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgRsp::set_allocated_caller(::std::string* caller) {
  if (caller != NULL) {
    
  } else {
    
  }
  caller_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), caller);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgRsp.caller)
}

// string callee = 3;
inline void ProxyChgRsp::clear_callee() {
  callee_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgRsp::callee() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.callee)
  return callee_.GetNoArena();
}
inline void ProxyChgRsp::set_callee(const ::std::string& value) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.callee)
}
#if LANG_CXX11
inline void ProxyChgRsp::set_callee(::std::string&& value) {
  
  callee_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgRsp.callee)
}
#endif
inline void ProxyChgRsp::set_callee(const char* value) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgRsp.callee)
}
inline void ProxyChgRsp::set_callee(const char* value, size_t size) {
  
  callee_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgRsp.callee)
}
inline ::std::string* ProxyChgRsp::mutable_callee() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgRsp.callee)
  return callee_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgRsp::release_callee() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgRsp.callee)
  
  return callee_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgRsp::set_allocated_callee(::std::string* callee) {
  if (callee != NULL) {
    
  } else {
    
  }
  callee_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), callee);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgRsp.callee)
}

// int64 event_id = 4;
inline void ProxyChgRsp::clear_event_id() {
  event_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProxyChgRsp::event_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.event_id)
  return event_id_;
}
inline void ProxyChgRsp::set_event_id(::google::protobuf::int64 value) {
  
  event_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.event_id)
}

// int64 timestamp = 5;
inline void ProxyChgRsp::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProxyChgRsp::timestamp() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.timestamp)
  return timestamp_;
}
inline void ProxyChgRsp::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.timestamp)
}

// int32 return_code = 6;
inline void ProxyChgRsp::clear_return_code() {
  return_code_ = 0;
}
inline ::google::protobuf::int32 ProxyChgRsp::return_code() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.return_code)
  return return_code_;
}
inline void ProxyChgRsp::set_return_code(::google::protobuf::int32 value) {
  
  return_code_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.return_code)
}

// string return_msg = 7;
inline void ProxyChgRsp::clear_return_msg() {
  return_msg_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProxyChgRsp::return_msg() const {
  // @@protoc_insertion_point(field_get:masterproto.ProxyChgRsp.return_msg)
  return return_msg_.GetNoArena();
}
inline void ProxyChgRsp::set_return_msg(const ::std::string& value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ProxyChgRsp.return_msg)
}
#if LANG_CXX11
inline void ProxyChgRsp::set_return_msg(::std::string&& value) {
  
  return_msg_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ProxyChgRsp.return_msg)
}
#endif
inline void ProxyChgRsp::set_return_msg(const char* value) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ProxyChgRsp.return_msg)
}
inline void ProxyChgRsp::set_return_msg(const char* value, size_t size) {
  
  return_msg_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ProxyChgRsp.return_msg)
}
inline ::std::string* ProxyChgRsp::mutable_return_msg() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ProxyChgRsp.return_msg)
  return return_msg_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProxyChgRsp::release_return_msg() {
  // @@protoc_insertion_point(field_release:masterproto.ProxyChgRsp.return_msg)
  
  return return_msg_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProxyChgRsp::set_allocated_return_msg(::std::string* return_msg) {
  if (return_msg != NULL) {
    
  } else {
    
  }
  return_msg_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), return_msg);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ProxyChgRsp.return_msg)
}

// -------------------------------------------------------------------

// AddResourceReq

// .cmongoproto.ReqHeader header = 1;
inline bool AddResourceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddResourceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& AddResourceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* AddResourceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddResourceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* AddResourceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddResourceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddResourceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddResourceReq.header)
}

// string machine_ip = 2;
inline void AddResourceReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddResourceReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void AddResourceReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.machine_ip)
}
#if LANG_CXX11
inline void AddResourceReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddResourceReq.machine_ip)
}
#endif
inline void AddResourceReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddResourceReq.machine_ip)
}
inline void AddResourceReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddResourceReq.machine_ip)
}
inline ::std::string* AddResourceReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddResourceReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddResourceReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.AddResourceReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddResourceReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddResourceReq.machine_ip)
}

// int32 region_id = 3;
inline void AddResourceReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.region_id)
  return region_id_;
}
inline void AddResourceReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.region_id)
}

// int32 set_id = 4;
inline void AddResourceReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.set_id)
  return set_id_;
}
inline void AddResourceReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.set_id)
}

// .masterproto.MachineType machine_type = 5;
inline void AddResourceReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType AddResourceReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void AddResourceReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.machine_type)
}

// .cmongoproto.ResourceDesc res_desc = 6;
inline bool AddResourceReq::has_res_desc() const {
  return this != internal_default_instance() && res_desc_ != NULL;
}
inline void AddResourceReq::clear_res_desc() {
  if (GetArenaNoVirtual() == NULL && res_desc_ != NULL) delete res_desc_;
  res_desc_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& AddResourceReq::res_desc() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.res_desc)
  return res_desc_ != NULL ? *res_desc_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* AddResourceReq::mutable_res_desc() {
  
  if (res_desc_ == NULL) {
    res_desc_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddResourceReq.res_desc)
  return res_desc_;
}
inline ::cmongoproto::ResourceDesc* AddResourceReq::release_res_desc() {
  // @@protoc_insertion_point(field_release:masterproto.AddResourceReq.res_desc)
  
  ::cmongoproto::ResourceDesc* temp = res_desc_;
  res_desc_ = NULL;
  return temp;
}
inline void AddResourceReq::set_allocated_res_desc(::cmongoproto::ResourceDesc* res_desc) {
  delete res_desc_;
  res_desc_ = res_desc;
  if (res_desc) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddResourceReq.res_desc)
}

// int32 memory_URV = 7;
inline void AddResourceReq::clear_memory_urv() {
  memory_urv_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::memory_urv() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.memory_URV)
  return memory_urv_;
}
inline void AddResourceReq::set_memory_urv(::google::protobuf::int32 value) {
  
  memory_urv_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.memory_URV)
}

// int32 num_URV = 8;
inline void AddResourceReq::clear_num_urv() {
  num_urv_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::num_urv() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.num_URV)
  return num_urv_;
}
inline void AddResourceReq::set_num_urv(::google::protobuf::int32 value) {
  
  num_urv_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.num_URV)
}

// int32 idc_id = 9;
inline void AddResourceReq::clear_idc_id() {
  idc_id_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::idc_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.idc_id)
  return idc_id_;
}
inline void AddResourceReq::set_idc_id(::google::protobuf::int32 value) {
  
  idc_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.idc_id)
}

// int32 rack_id = 10;
inline void AddResourceReq::clear_rack_id() {
  rack_id_ = 0;
}
inline ::google::protobuf::int32 AddResourceReq::rack_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.rack_id)
  return rack_id_;
}
inline void AddResourceReq::set_rack_id(::google::protobuf::int32 value) {
  
  rack_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.rack_id)
}

// string worker_version = 11;
inline void AddResourceReq::clear_worker_version() {
  worker_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddResourceReq::worker_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceReq.worker_version)
  return worker_version_.GetNoArena();
}
inline void AddResourceReq::set_worker_version(const ::std::string& value) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddResourceReq.worker_version)
}
#if LANG_CXX11
inline void AddResourceReq::set_worker_version(::std::string&& value) {
  
  worker_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddResourceReq.worker_version)
}
#endif
inline void AddResourceReq::set_worker_version(const char* value) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddResourceReq.worker_version)
}
inline void AddResourceReq::set_worker_version(const char* value, size_t size) {
  
  worker_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddResourceReq.worker_version)
}
inline ::std::string* AddResourceReq::mutable_worker_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddResourceReq.worker_version)
  return worker_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddResourceReq::release_worker_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddResourceReq.worker_version)
  
  return worker_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddResourceReq::set_allocated_worker_version(::std::string* worker_version) {
  if (worker_version != NULL) {
    
  } else {
    
  }
  worker_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), worker_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddResourceReq.worker_version)
}

// -------------------------------------------------------------------

// AddResourceRsp

// .cmongoproto.ResHeader header = 1;
inline bool AddResourceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddResourceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& AddResourceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddResourceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* AddResourceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddResourceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* AddResourceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddResourceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddResourceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddResourceRsp.header)
}

// -------------------------------------------------------------------

// BlockResourceReq

// .cmongoproto.ReqHeader header = 1;
inline bool BlockResourceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BlockResourceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& BlockResourceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BlockResourceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* BlockResourceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BlockResourceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* BlockResourceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BlockResourceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BlockResourceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BlockResourceReq.header)
}

// string machine_ip = 2;
inline void BlockResourceReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BlockResourceReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.BlockResourceReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void BlockResourceReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BlockResourceReq.machine_ip)
}
#if LANG_CXX11
inline void BlockResourceReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BlockResourceReq.machine_ip)
}
#endif
inline void BlockResourceReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BlockResourceReq.machine_ip)
}
inline void BlockResourceReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BlockResourceReq.machine_ip)
}
inline ::std::string* BlockResourceReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BlockResourceReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BlockResourceReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.BlockResourceReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BlockResourceReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BlockResourceReq.machine_ip)
}

// int32 region_id = 3;
inline void BlockResourceReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 BlockResourceReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BlockResourceReq.region_id)
  return region_id_;
}
inline void BlockResourceReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BlockResourceReq.region_id)
}

// int32 set_id = 4;
inline void BlockResourceReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 BlockResourceReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BlockResourceReq.set_id)
  return set_id_;
}
inline void BlockResourceReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BlockResourceReq.set_id)
}

// -------------------------------------------------------------------

// UnblockResourceReq

// .cmongoproto.ReqHeader header = 1;
inline bool UnblockResourceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void UnblockResourceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& UnblockResourceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.UnblockResourceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* UnblockResourceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.UnblockResourceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* UnblockResourceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.UnblockResourceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void UnblockResourceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.UnblockResourceReq.header)
}

// string machine_ip = 2;
inline void UnblockResourceReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UnblockResourceReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.UnblockResourceReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void UnblockResourceReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.UnblockResourceReq.machine_ip)
}
#if LANG_CXX11
inline void UnblockResourceReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.UnblockResourceReq.machine_ip)
}
#endif
inline void UnblockResourceReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.UnblockResourceReq.machine_ip)
}
inline void UnblockResourceReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.UnblockResourceReq.machine_ip)
}
inline ::std::string* UnblockResourceReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.UnblockResourceReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UnblockResourceReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.UnblockResourceReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UnblockResourceReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.UnblockResourceReq.machine_ip)
}

// int32 region_id = 3;
inline void UnblockResourceReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 UnblockResourceReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.UnblockResourceReq.region_id)
  return region_id_;
}
inline void UnblockResourceReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UnblockResourceReq.region_id)
}

// int32 set_id = 4;
inline void UnblockResourceReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 UnblockResourceReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.UnblockResourceReq.set_id)
  return set_id_;
}
inline void UnblockResourceReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UnblockResourceReq.set_id)
}

// -------------------------------------------------------------------

// BlockResourceRsp

// .cmongoproto.ResHeader header = 1;
inline bool BlockResourceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BlockResourceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& BlockResourceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BlockResourceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* BlockResourceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BlockResourceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* BlockResourceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BlockResourceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BlockResourceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BlockResourceRsp.header)
}

// -------------------------------------------------------------------

// UnblockResourceRsp

// .cmongoproto.ResHeader header = 1;
inline bool UnblockResourceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void UnblockResourceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& UnblockResourceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.UnblockResourceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* UnblockResourceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.UnblockResourceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* UnblockResourceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.UnblockResourceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void UnblockResourceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.UnblockResourceRsp.header)
}

// -------------------------------------------------------------------

// DelResourceReq

// .cmongoproto.ReqHeader header = 1;
inline bool DelResourceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelResourceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DelResourceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelResourceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DelResourceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelResourceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DelResourceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelResourceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelResourceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelResourceReq.header)
}

// string machine_ip = 2;
inline void DelResourceReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelResourceReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.DelResourceReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void DelResourceReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelResourceReq.machine_ip)
}
#if LANG_CXX11
inline void DelResourceReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelResourceReq.machine_ip)
}
#endif
inline void DelResourceReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelResourceReq.machine_ip)
}
inline void DelResourceReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelResourceReq.machine_ip)
}
inline ::std::string* DelResourceReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelResourceReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelResourceReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.DelResourceReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelResourceReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelResourceReq.machine_ip)
}

// int32 region_id = 3;
inline void DelResourceReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 DelResourceReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelResourceReq.region_id)
  return region_id_;
}
inline void DelResourceReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelResourceReq.region_id)
}

// int32 set_id = 4;
inline void DelResourceReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 DelResourceReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelResourceReq.set_id)
  return set_id_;
}
inline void DelResourceReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelResourceReq.set_id)
}

// -------------------------------------------------------------------

// DelResourceRsp

// .cmongoproto.ResHeader header = 1;
inline bool DelResourceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelResourceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DelResourceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelResourceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DelResourceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelResourceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DelResourceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelResourceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelResourceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelResourceRsp.header)
}

// -------------------------------------------------------------------

// QueryResourceReq

// .cmongoproto.ReqHeader header = 1;
inline bool QueryResourceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryResourceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& QueryResourceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* QueryResourceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryResourceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* QueryResourceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryResourceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryResourceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryResourceReq.header)
}

// int32 region_id = 2;
inline void QueryResourceReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 QueryResourceReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceReq.region_id)
  return region_id_;
}
inline void QueryResourceReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryResourceReq.region_id)
}

// int32 set_id = 3;
inline void QueryResourceReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 QueryResourceReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceReq.set_id)
  return set_id_;
}
inline void QueryResourceReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryResourceReq.set_id)
}

// -------------------------------------------------------------------

// QueryResourceRsp

// .cmongoproto.ResHeader header = 1;
inline bool QueryResourceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryResourceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& QueryResourceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* QueryResourceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryResourceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* QueryResourceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryResourceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryResourceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryResourceRsp.header)
}

// int32 region_id = 2;
inline void QueryResourceRsp::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 QueryResourceRsp::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceRsp.region_id)
  return region_id_;
}
inline void QueryResourceRsp::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryResourceRsp.region_id)
}

// int32 set_id = 3;
inline void QueryResourceRsp::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 QueryResourceRsp::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceRsp.set_id)
  return set_id_;
}
inline void QueryResourceRsp::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryResourceRsp.set_id)
}

// repeated .masterproto.MachineInfo machine_list = 4;
inline int QueryResourceRsp::machine_list_size() const {
  return machine_list_.size();
}
inline void QueryResourceRsp::clear_machine_list() {
  machine_list_.Clear();
}
inline const ::masterproto::MachineInfo& QueryResourceRsp::machine_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.QueryResourceRsp.machine_list)
  return machine_list_.Get(index);
}
inline ::masterproto::MachineInfo* QueryResourceRsp::mutable_machine_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.QueryResourceRsp.machine_list)
  return machine_list_.Mutable(index);
}
inline ::masterproto::MachineInfo* QueryResourceRsp::add_machine_list() {
  // @@protoc_insertion_point(field_add:masterproto.QueryResourceRsp.machine_list)
  return machine_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >*
QueryResourceRsp::mutable_machine_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.QueryResourceRsp.machine_list)
  return &machine_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >&
QueryResourceRsp::machine_list() const {
  // @@protoc_insertion_point(field_list:masterproto.QueryResourceRsp.machine_list)
  return machine_list_;
}

// -------------------------------------------------------------------

// MigrateContainerReq

// .cmongoproto.ReqHeader header = 1;
inline bool MigrateContainerReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateContainerReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& MigrateContainerReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* MigrateContainerReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* MigrateContainerReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateContainerReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.header)
}

// string cluster_id = 2;
inline void MigrateContainerReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void MigrateContainerReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.cluster_id)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.cluster_id)
}
#endif
inline void MigrateContainerReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.cluster_id)
}
inline void MigrateContainerReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.cluster_id)
}
inline ::std::string* MigrateContainerReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.cluster_id)
}

// string machine_ip = 3;
inline void MigrateContainerReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void MigrateContainerReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.machine_ip)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.machine_ip)
}
#endif
inline void MigrateContainerReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.machine_ip)
}
inline void MigrateContainerReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.machine_ip)
}
inline ::std::string* MigrateContainerReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.machine_ip)
}

// int32 container_id = 4;
inline void MigrateContainerReq::clear_container_id() {
  container_id_ = 0;
}
inline ::google::protobuf::int32 MigrateContainerReq::container_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.container_id)
  return container_id_;
}
inline void MigrateContainerReq::set_container_id(::google::protobuf::int32 value) {
  
  container_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.container_id)
}

// int32 container_port = 5;
inline void MigrateContainerReq::clear_container_port() {
  container_port_ = 0;
}
inline ::google::protobuf::int32 MigrateContainerReq::container_port() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.container_port)
  return container_port_;
}
inline void MigrateContainerReq::set_container_port(::google::protobuf::int32 value) {
  
  container_port_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.container_port)
}

// .cmongoproto.ResourceDesc quota = 6;
inline bool MigrateContainerReq::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void MigrateContainerReq::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& MigrateContainerReq::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* MigrateContainerReq::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* MigrateContainerReq::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void MigrateContainerReq::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.quota)
}

// string dest_ip = 7;
inline void MigrateContainerReq::clear_dest_ip() {
  dest_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::dest_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.dest_ip)
  return dest_ip_.GetNoArena();
}
inline void MigrateContainerReq::set_dest_ip(const ::std::string& value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.dest_ip)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_dest_ip(::std::string&& value) {
  
  dest_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.dest_ip)
}
#endif
inline void MigrateContainerReq::set_dest_ip(const char* value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.dest_ip)
}
inline void MigrateContainerReq::set_dest_ip(const char* value, size_t size) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.dest_ip)
}
inline ::std::string* MigrateContainerReq::mutable_dest_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.dest_ip)
  return dest_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_dest_ip() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.dest_ip)
  
  return dest_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_dest_ip(::std::string* dest_ip) {
  if (dest_ip != NULL) {
    
  } else {
    
  }
  dest_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.dest_ip)
}

// int32 close_cgroup = 8;
inline void MigrateContainerReq::clear_close_cgroup() {
  close_cgroup_ = 0;
}
inline ::google::protobuf::int32 MigrateContainerReq::close_cgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.close_cgroup)
  return close_cgroup_;
}
inline void MigrateContainerReq::set_close_cgroup(::google::protobuf::int32 value) {
  
  close_cgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.close_cgroup)
}

// .masterproto.MachineType machine_type = 9;
inline void MigrateContainerReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType MigrateContainerReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void MigrateContainerReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.machine_type)
}

// string proxy_version = 18;
inline void MigrateContainerReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void MigrateContainerReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.proxy_version)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.proxy_version)
}
#endif
inline void MigrateContainerReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.proxy_version)
}
inline void MigrateContainerReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.proxy_version)
}
inline ::std::string* MigrateContainerReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.proxy_version)
}

// string mongod_subversion = 19;
inline void MigrateContainerReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void MigrateContainerReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.mongod_subversion)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.mongod_subversion)
}
#endif
inline void MigrateContainerReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.mongod_subversion)
}
inline void MigrateContainerReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.mongod_subversion)
}
inline ::std::string* MigrateContainerReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.mongod_subversion)
}

// string dynamo_proxy_version = 20;
inline void MigrateContainerReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateContainerReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void MigrateContainerReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateContainerReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void MigrateContainerReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateContainerReq.dynamo_proxy_version)
}
#endif
inline void MigrateContainerReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateContainerReq.dynamo_proxy_version)
}
inline void MigrateContainerReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateContainerReq.dynamo_proxy_version)
}
inline ::std::string* MigrateContainerReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateContainerReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateContainerReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerReq.dynamo_proxy_version)
}

// -------------------------------------------------------------------

// MigrateContainerRsp

// .cmongoproto.ResHeader header = 1;
inline bool MigrateContainerRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateContainerRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& MigrateContainerRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* MigrateContainerRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* MigrateContainerRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateContainerRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerRsp.header)
}

// .masterproto.ContainerInfo container = 2;
inline bool MigrateContainerRsp::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
inline void MigrateContainerRsp::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
}
inline const ::masterproto::ContainerInfo& MigrateContainerRsp::container() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateContainerRsp.container)
  return container_ != NULL ? *container_
                         : *::masterproto::ContainerInfo::internal_default_instance();
}
inline ::masterproto::ContainerInfo* MigrateContainerRsp::mutable_container() {
  
  if (container_ == NULL) {
    container_ = new ::masterproto::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateContainerRsp.container)
  return container_;
}
inline ::masterproto::ContainerInfo* MigrateContainerRsp::release_container() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateContainerRsp.container)
  
  ::masterproto::ContainerInfo* temp = container_;
  container_ = NULL;
  return temp;
}
inline void MigrateContainerRsp::set_allocated_container(::masterproto::ContainerInfo* container) {
  delete container_;
  container_ = container;
  if (container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateContainerRsp.container)
}

// -------------------------------------------------------------------

// AddContainerReq

// .cmongoproto.ReqHeader header = 1;
inline bool AddContainerReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddContainerReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& AddContainerReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* AddContainerReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* AddContainerReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddContainerReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.header)
}

// string cluster_id = 2;
inline void AddContainerReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void AddContainerReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.cluster_id)
}
#if LANG_CXX11
inline void AddContainerReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.cluster_id)
}
#endif
inline void AddContainerReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.cluster_id)
}
inline void AddContainerReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.cluster_id)
}
inline ::std::string* AddContainerReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.cluster_id)
}

// string rs_name = 3;
inline void AddContainerReq::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.rs_name)
  return rs_name_.GetNoArena();
}
inline void AddContainerReq::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.rs_name)
}
#if LANG_CXX11
inline void AddContainerReq::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.rs_name)
}
#endif
inline void AddContainerReq::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.rs_name)
}
inline void AddContainerReq::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.rs_name)
}
inline ::std::string* AddContainerReq::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.rs_name)
}

// .masterproto.MachineType machine_type = 4;
inline void AddContainerReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType AddContainerReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void AddContainerReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.machine_type)
}

// .cmongoproto.ResourceDesc quota = 5;
inline bool AddContainerReq::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void AddContainerReq::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& AddContainerReq::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* AddContainerReq::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* AddContainerReq::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void AddContainerReq::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.quota)
}

// int32 close_cgroup = 6;
inline void AddContainerReq::clear_close_cgroup() {
  close_cgroup_ = 0;
}
inline ::google::protobuf::int32 AddContainerReq::close_cgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.close_cgroup)
  return close_cgroup_;
}
inline void AddContainerReq::set_close_cgroup(::google::protobuf::int32 value) {
  
  close_cgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.close_cgroup)
}

// string dest_ip = 7;
inline void AddContainerReq::clear_dest_ip() {
  dest_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::dest_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.dest_ip)
  return dest_ip_.GetNoArena();
}
inline void AddContainerReq::set_dest_ip(const ::std::string& value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.dest_ip)
}
#if LANG_CXX11
inline void AddContainerReq::set_dest_ip(::std::string&& value) {
  
  dest_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.dest_ip)
}
#endif
inline void AddContainerReq::set_dest_ip(const char* value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.dest_ip)
}
inline void AddContainerReq::set_dest_ip(const char* value, size_t size) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.dest_ip)
}
inline ::std::string* AddContainerReq::mutable_dest_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.dest_ip)
  return dest_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_dest_ip() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.dest_ip)
  
  return dest_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_dest_ip(::std::string* dest_ip) {
  if (dest_ip != NULL) {
    
  } else {
    
  }
  dest_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.dest_ip)
}

// .cmongoproto.MongoType container_type = 8;
inline void AddContainerReq::clear_container_type() {
  container_type_ = 0;
}
inline ::cmongoproto::MongoType AddContainerReq::container_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.container_type)
  return static_cast< ::cmongoproto::MongoType >(container_type_);
}
inline void AddContainerReq::set_container_type(::cmongoproto::MongoType value) {
  
  container_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.container_type)
}

// string proxy_version = 9;
inline void AddContainerReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void AddContainerReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.proxy_version)
}
#if LANG_CXX11
inline void AddContainerReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.proxy_version)
}
#endif
inline void AddContainerReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.proxy_version)
}
inline void AddContainerReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.proxy_version)
}
inline ::std::string* AddContainerReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.proxy_version)
}

// string mongod_subversion = 10;
inline void AddContainerReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void AddContainerReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.mongod_subversion)
}
#if LANG_CXX11
inline void AddContainerReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.mongod_subversion)
}
#endif
inline void AddContainerReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.mongod_subversion)
}
inline void AddContainerReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.mongod_subversion)
}
inline ::std::string* AddContainerReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.mongod_subversion)
}

// string dynamo_proxy_version = 11;
inline void AddContainerReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void AddContainerReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void AddContainerReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerReq.dynamo_proxy_version)
}
#endif
inline void AddContainerReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerReq.dynamo_proxy_version)
}
inline void AddContainerReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerReq.dynamo_proxy_version)
}
inline ::std::string* AddContainerReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerReq.dynamo_proxy_version)
}

// -------------------------------------------------------------------

// AddContainerRsp

// .cmongoproto.ResHeader header = 1;
inline bool AddContainerRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddContainerRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& AddContainerRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* AddContainerRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* AddContainerRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddContainerRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerRsp.header)
}

// .masterproto.ContainerInfo container = 2;
inline bool AddContainerRsp::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
inline void AddContainerRsp::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
}
inline const ::masterproto::ContainerInfo& AddContainerRsp::container() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerRsp.container)
  return container_ != NULL ? *container_
                         : *::masterproto::ContainerInfo::internal_default_instance();
}
inline ::masterproto::ContainerInfo* AddContainerRsp::mutable_container() {
  
  if (container_ == NULL) {
    container_ = new ::masterproto::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerRsp.container)
  return container_;
}
inline ::masterproto::ContainerInfo* AddContainerRsp::release_container() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerRsp.container)
  
  ::masterproto::ContainerInfo* temp = container_;
  container_ = NULL;
  return temp;
}
inline void AddContainerRsp::set_allocated_container(::masterproto::ContainerInfo* container) {
  delete container_;
  container_ = container;
  if (container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerRsp.container)
}

// -------------------------------------------------------------------

// DelContainerReq

// .cmongoproto.ReqHeader header = 1;
inline bool DelContainerReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelContainerReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DelContainerReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelContainerReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DelContainerReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelContainerReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DelContainerReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelContainerReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelContainerReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelContainerReq.header)
}

// string cluster_id = 2;
inline void DelContainerReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelContainerReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelContainerReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DelContainerReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelContainerReq.cluster_id)
}
#if LANG_CXX11
inline void DelContainerReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelContainerReq.cluster_id)
}
#endif
inline void DelContainerReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelContainerReq.cluster_id)
}
inline void DelContainerReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelContainerReq.cluster_id)
}
inline ::std::string* DelContainerReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelContainerReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelContainerReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DelContainerReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelContainerReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelContainerReq.cluster_id)
}

// string rs_name = 3;
inline void DelContainerReq::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelContainerReq::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.DelContainerReq.rs_name)
  return rs_name_.GetNoArena();
}
inline void DelContainerReq::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelContainerReq.rs_name)
}
#if LANG_CXX11
inline void DelContainerReq::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelContainerReq.rs_name)
}
#endif
inline void DelContainerReq::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelContainerReq.rs_name)
}
inline void DelContainerReq::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelContainerReq.rs_name)
}
inline ::std::string* DelContainerReq::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelContainerReq.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelContainerReq::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.DelContainerReq.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelContainerReq::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelContainerReq.rs_name)
}

// .masterproto.ContainerInfo container = 4;
inline bool DelContainerReq::has_container() const {
  return this != internal_default_instance() && container_ != NULL;
}
inline void DelContainerReq::clear_container() {
  if (GetArenaNoVirtual() == NULL && container_ != NULL) delete container_;
  container_ = NULL;
}
inline const ::masterproto::ContainerInfo& DelContainerReq::container() const {
  // @@protoc_insertion_point(field_get:masterproto.DelContainerReq.container)
  return container_ != NULL ? *container_
                         : *::masterproto::ContainerInfo::internal_default_instance();
}
inline ::masterproto::ContainerInfo* DelContainerReq::mutable_container() {
  
  if (container_ == NULL) {
    container_ = new ::masterproto::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelContainerReq.container)
  return container_;
}
inline ::masterproto::ContainerInfo* DelContainerReq::release_container() {
  // @@protoc_insertion_point(field_release:masterproto.DelContainerReq.container)
  
  ::masterproto::ContainerInfo* temp = container_;
  container_ = NULL;
  return temp;
}
inline void DelContainerReq::set_allocated_container(::masterproto::ContainerInfo* container) {
  delete container_;
  container_ = container;
  if (container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelContainerReq.container)
}

// -------------------------------------------------------------------

// DelContainerRsp

// .cmongoproto.ResHeader header = 1;
inline bool DelContainerRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelContainerRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DelContainerRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelContainerRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DelContainerRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelContainerRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DelContainerRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelContainerRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelContainerRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelContainerRsp.header)
}

// -------------------------------------------------------------------

// AddContainerAsyncReq

// .cmongoproto.ReqHeader header = 1;
inline bool AddContainerAsyncReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddContainerAsyncReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& AddContainerAsyncReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* AddContainerAsyncReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* AddContainerAsyncReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddContainerAsyncReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.header)
}

// string cluster_id = 2;
inline void AddContainerAsyncReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void AddContainerAsyncReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.cluster_id)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.cluster_id)
}
#endif
inline void AddContainerAsyncReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.cluster_id)
}
inline void AddContainerAsyncReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.cluster_id)
}
inline ::std::string* AddContainerAsyncReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.cluster_id)
}

// string rs_name = 3;
inline void AddContainerAsyncReq::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.rs_name)
  return rs_name_.GetNoArena();
}
inline void AddContainerAsyncReq::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.rs_name)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.rs_name)
}
#endif
inline void AddContainerAsyncReq::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.rs_name)
}
inline void AddContainerAsyncReq::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.rs_name)
}
inline ::std::string* AddContainerAsyncReq::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.rs_name)
}

// .masterproto.MachineType machine_type = 4;
inline void AddContainerAsyncReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType AddContainerAsyncReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void AddContainerAsyncReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.machine_type)
}

// .cmongoproto.ResourceDesc quota = 5;
inline bool AddContainerAsyncReq::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void AddContainerAsyncReq::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& AddContainerAsyncReq::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* AddContainerAsyncReq::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* AddContainerAsyncReq::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void AddContainerAsyncReq::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.quota)
}

// int32 close_cgroup = 6;
inline void AddContainerAsyncReq::clear_close_cgroup() {
  close_cgroup_ = 0;
}
inline ::google::protobuf::int32 AddContainerAsyncReq::close_cgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.close_cgroup)
  return close_cgroup_;
}
inline void AddContainerAsyncReq::set_close_cgroup(::google::protobuf::int32 value) {
  
  close_cgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.close_cgroup)
}

// string dest_ip = 7;
inline void AddContainerAsyncReq::clear_dest_ip() {
  dest_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::dest_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.dest_ip)
  return dest_ip_.GetNoArena();
}
inline void AddContainerAsyncReq::set_dest_ip(const ::std::string& value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.dest_ip)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_dest_ip(::std::string&& value) {
  
  dest_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.dest_ip)
}
#endif
inline void AddContainerAsyncReq::set_dest_ip(const char* value) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.dest_ip)
}
inline void AddContainerAsyncReq::set_dest_ip(const char* value, size_t size) {
  
  dest_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.dest_ip)
}
inline ::std::string* AddContainerAsyncReq::mutable_dest_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.dest_ip)
  return dest_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_dest_ip() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.dest_ip)
  
  return dest_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_dest_ip(::std::string* dest_ip) {
  if (dest_ip != NULL) {
    
  } else {
    
  }
  dest_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.dest_ip)
}

// .cmongoproto.MongoType container_type = 8;
inline void AddContainerAsyncReq::clear_container_type() {
  container_type_ = 0;
}
inline ::cmongoproto::MongoType AddContainerAsyncReq::container_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.container_type)
  return static_cast< ::cmongoproto::MongoType >(container_type_);
}
inline void AddContainerAsyncReq::set_container_type(::cmongoproto::MongoType value) {
  
  container_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.container_type)
}

// string proxy_version = 9;
inline void AddContainerAsyncReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void AddContainerAsyncReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.proxy_version)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.proxy_version)
}
#endif
inline void AddContainerAsyncReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.proxy_version)
}
inline void AddContainerAsyncReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.proxy_version)
}
inline ::std::string* AddContainerAsyncReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.proxy_version)
}

// string mongod_subversion = 10;
inline void AddContainerAsyncReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void AddContainerAsyncReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.mongod_subversion)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.mongod_subversion)
}
#endif
inline void AddContainerAsyncReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.mongod_subversion)
}
inline void AddContainerAsyncReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.mongod_subversion)
}
inline ::std::string* AddContainerAsyncReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.mongod_subversion)
}

// string dynamo_proxy_version = 11;
inline void AddContainerAsyncReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddContainerAsyncReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void AddContainerAsyncReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void AddContainerAsyncReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
}
#endif
inline void AddContainerAsyncReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
}
inline void AddContainerAsyncReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
}
inline ::std::string* AddContainerAsyncReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddContainerAsyncReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddContainerAsyncReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncReq.dynamo_proxy_version)
}

// int64 job_id = 12;
inline void AddContainerAsyncReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddContainerAsyncReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.job_id)
  return job_id_;
}
inline void AddContainerAsyncReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.job_id)
}

// .masterproto.JobType job_type = 13;
inline void AddContainerAsyncReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType AddContainerAsyncReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void AddContainerAsyncReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddContainerAsyncReq.job_type)
}

// -------------------------------------------------------------------

// AddContainerAsyncRsp

// .cmongoproto.ResHeader header = 1;
inline bool AddContainerAsyncRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddContainerAsyncRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& AddContainerAsyncRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddContainerAsyncRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* AddContainerAsyncRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddContainerAsyncRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* AddContainerAsyncRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddContainerAsyncRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddContainerAsyncRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddContainerAsyncRsp.header)
}

// -------------------------------------------------------------------

// MigrateMachineReq

// .cmongoproto.ReqHeader header = 1;
inline bool MigrateMachineReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateMachineReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& MigrateMachineReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* MigrateMachineReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* MigrateMachineReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateMachineReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateMachineReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateMachineReq.header)
}

// string machine_ip = 2;
inline void MigrateMachineReq::clear_machine_ip() {
  machine_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateMachineReq::machine_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineReq.machine_ip)
  return machine_ip_.GetNoArena();
}
inline void MigrateMachineReq::set_machine_ip(const ::std::string& value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateMachineReq.machine_ip)
}
#if LANG_CXX11
inline void MigrateMachineReq::set_machine_ip(::std::string&& value) {
  
  machine_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateMachineReq.machine_ip)
}
#endif
inline void MigrateMachineReq::set_machine_ip(const char* value) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateMachineReq.machine_ip)
}
inline void MigrateMachineReq::set_machine_ip(const char* value, size_t size) {
  
  machine_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateMachineReq.machine_ip)
}
inline ::std::string* MigrateMachineReq::mutable_machine_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineReq.machine_ip)
  return machine_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateMachineReq::release_machine_ip() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateMachineReq.machine_ip)
  
  return machine_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateMachineReq::set_allocated_machine_ip(::std::string* machine_ip) {
  if (machine_ip != NULL) {
    
  } else {
    
  }
  machine_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), machine_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateMachineReq.machine_ip)
}

// -------------------------------------------------------------------

// ContainerPair

// .masterproto.ContainerInfo old_container = 1;
inline bool ContainerPair::has_old_container() const {
  return this != internal_default_instance() && old_container_ != NULL;
}
inline void ContainerPair::clear_old_container() {
  if (GetArenaNoVirtual() == NULL && old_container_ != NULL) delete old_container_;
  old_container_ = NULL;
}
inline const ::masterproto::ContainerInfo& ContainerPair::old_container() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerPair.old_container)
  return old_container_ != NULL ? *old_container_
                         : *::masterproto::ContainerInfo::internal_default_instance();
}
inline ::masterproto::ContainerInfo* ContainerPair::mutable_old_container() {
  
  if (old_container_ == NULL) {
    old_container_ = new ::masterproto::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerPair.old_container)
  return old_container_;
}
inline ::masterproto::ContainerInfo* ContainerPair::release_old_container() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerPair.old_container)
  
  ::masterproto::ContainerInfo* temp = old_container_;
  old_container_ = NULL;
  return temp;
}
inline void ContainerPair::set_allocated_old_container(::masterproto::ContainerInfo* old_container) {
  delete old_container_;
  old_container_ = old_container;
  if (old_container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerPair.old_container)
}

// .masterproto.ContainerInfo new_container = 2;
inline bool ContainerPair::has_new_container() const {
  return this != internal_default_instance() && new_container_ != NULL;
}
inline void ContainerPair::clear_new_container() {
  if (GetArenaNoVirtual() == NULL && new_container_ != NULL) delete new_container_;
  new_container_ = NULL;
}
inline const ::masterproto::ContainerInfo& ContainerPair::new_container() const {
  // @@protoc_insertion_point(field_get:masterproto.ContainerPair.new_container)
  return new_container_ != NULL ? *new_container_
                         : *::masterproto::ContainerInfo::internal_default_instance();
}
inline ::masterproto::ContainerInfo* ContainerPair::mutable_new_container() {
  
  if (new_container_ == NULL) {
    new_container_ = new ::masterproto::ContainerInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ContainerPair.new_container)
  return new_container_;
}
inline ::masterproto::ContainerInfo* ContainerPair::release_new_container() {
  // @@protoc_insertion_point(field_release:masterproto.ContainerPair.new_container)
  
  ::masterproto::ContainerInfo* temp = new_container_;
  new_container_ = NULL;
  return temp;
}
inline void ContainerPair::set_allocated_new_container(::masterproto::ContainerInfo* new_container) {
  delete new_container_;
  new_container_ = new_container;
  if (new_container) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ContainerPair.new_container)
}

// -------------------------------------------------------------------

// MigrateMachineRsp

// .cmongoproto.ResHeader header = 1;
inline bool MigrateMachineRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateMachineRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& MigrateMachineRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* MigrateMachineRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* MigrateMachineRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateMachineRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateMachineRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateMachineRsp.header)
}

// repeated .masterproto.ContainerPair migrated_container_pairs = 2;
inline int MigrateMachineRsp::migrated_container_pairs_size() const {
  return migrated_container_pairs_.size();
}
inline void MigrateMachineRsp::clear_migrated_container_pairs() {
  migrated_container_pairs_.Clear();
}
inline const ::masterproto::ContainerPair& MigrateMachineRsp::migrated_container_pairs(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineRsp.migrated_container_pairs)
  return migrated_container_pairs_.Get(index);
}
inline ::masterproto::ContainerPair* MigrateMachineRsp::mutable_migrated_container_pairs(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineRsp.migrated_container_pairs)
  return migrated_container_pairs_.Mutable(index);
}
inline ::masterproto::ContainerPair* MigrateMachineRsp::add_migrated_container_pairs() {
  // @@protoc_insertion_point(field_add:masterproto.MigrateMachineRsp.migrated_container_pairs)
  return migrated_container_pairs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerPair >*
MigrateMachineRsp::mutable_migrated_container_pairs() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateMachineRsp.migrated_container_pairs)
  return &migrated_container_pairs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerPair >&
MigrateMachineRsp::migrated_container_pairs() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateMachineRsp.migrated_container_pairs)
  return migrated_container_pairs_;
}

// repeated .masterproto.ContainerInfo migrate_failed_containers = 3;
inline int MigrateMachineRsp::migrate_failed_containers_size() const {
  return migrate_failed_containers_.size();
}
inline void MigrateMachineRsp::clear_migrate_failed_containers() {
  migrate_failed_containers_.Clear();
}
inline const ::masterproto::ContainerInfo& MigrateMachineRsp::migrate_failed_containers(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineRsp.migrate_failed_containers)
  return migrate_failed_containers_.Get(index);
}
inline ::masterproto::ContainerInfo* MigrateMachineRsp::mutable_migrate_failed_containers(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineRsp.migrate_failed_containers)
  return migrate_failed_containers_.Mutable(index);
}
inline ::masterproto::ContainerInfo* MigrateMachineRsp::add_migrate_failed_containers() {
  // @@protoc_insertion_point(field_add:masterproto.MigrateMachineRsp.migrate_failed_containers)
  return migrate_failed_containers_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >*
MigrateMachineRsp::mutable_migrate_failed_containers() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateMachineRsp.migrate_failed_containers)
  return &migrate_failed_containers_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ContainerInfo >&
MigrateMachineRsp::migrate_failed_containers() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateMachineRsp.migrate_failed_containers)
  return migrate_failed_containers_;
}

// repeated string errors = 4;
inline int MigrateMachineRsp::errors_size() const {
  return errors_.size();
}
inline void MigrateMachineRsp::clear_errors() {
  errors_.Clear();
}
inline const ::std::string& MigrateMachineRsp::errors(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateMachineRsp.errors)
  return errors_.Get(index);
}
inline ::std::string* MigrateMachineRsp::mutable_errors(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateMachineRsp.errors)
  return errors_.Mutable(index);
}
inline void MigrateMachineRsp::set_errors(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.MigrateMachineRsp.errors)
  errors_.Mutable(index)->assign(value);
}
inline void MigrateMachineRsp::set_errors(int index, const char* value) {
  errors_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateMachineRsp.errors)
}
inline void MigrateMachineRsp::set_errors(int index, const char* value, size_t size) {
  errors_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateMachineRsp.errors)
}
inline ::std::string* MigrateMachineRsp::add_errors() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.MigrateMachineRsp.errors)
  return errors_.Add();
}
inline void MigrateMachineRsp::add_errors(const ::std::string& value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.MigrateMachineRsp.errors)
}
inline void MigrateMachineRsp::add_errors(const char* value) {
  errors_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.MigrateMachineRsp.errors)
}
inline void MigrateMachineRsp::add_errors(const char* value, size_t size) {
  errors_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.MigrateMachineRsp.errors)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MigrateMachineRsp::errors() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateMachineRsp.errors)
  return errors_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MigrateMachineRsp::mutable_errors() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateMachineRsp.errors)
  return &errors_;
}

// -------------------------------------------------------------------

// QueryMachineReq

// .cmongoproto.ReqHeader header = 1;
inline bool QueryMachineReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryMachineReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& QueryMachineReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryMachineReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* QueryMachineReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryMachineReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* QueryMachineReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryMachineReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryMachineReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryMachineReq.header)
}

// repeated string ip_list = 2;
inline int QueryMachineReq::ip_list_size() const {
  return ip_list_.size();
}
inline void QueryMachineReq::clear_ip_list() {
  ip_list_.Clear();
}
inline const ::std::string& QueryMachineReq::ip_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.QueryMachineReq.ip_list)
  return ip_list_.Get(index);
}
inline ::std::string* QueryMachineReq::mutable_ip_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.QueryMachineReq.ip_list)
  return ip_list_.Mutable(index);
}
inline void QueryMachineReq::set_ip_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.QueryMachineReq.ip_list)
  ip_list_.Mutable(index)->assign(value);
}
inline void QueryMachineReq::set_ip_list(int index, const char* value) {
  ip_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.QueryMachineReq.ip_list)
}
inline void QueryMachineReq::set_ip_list(int index, const char* value, size_t size) {
  ip_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryMachineReq.ip_list)
}
inline ::std::string* QueryMachineReq::add_ip_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.QueryMachineReq.ip_list)
  return ip_list_.Add();
}
inline void QueryMachineReq::add_ip_list(const ::std::string& value) {
  ip_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.QueryMachineReq.ip_list)
}
inline void QueryMachineReq::add_ip_list(const char* value) {
  ip_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.QueryMachineReq.ip_list)
}
inline void QueryMachineReq::add_ip_list(const char* value, size_t size) {
  ip_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.QueryMachineReq.ip_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
QueryMachineReq::ip_list() const {
  // @@protoc_insertion_point(field_list:masterproto.QueryMachineReq.ip_list)
  return ip_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
QueryMachineReq::mutable_ip_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.QueryMachineReq.ip_list)
  return &ip_list_;
}

// -------------------------------------------------------------------

// QueryMachineRsp

// .cmongoproto.ResHeader header = 1;
inline bool QueryMachineRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryMachineRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& QueryMachineRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryMachineRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* QueryMachineRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryMachineRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* QueryMachineRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryMachineRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryMachineRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryMachineRsp.header)
}

// repeated .masterproto.MachineInfo machine_list = 2;
inline int QueryMachineRsp::machine_list_size() const {
  return machine_list_.size();
}
inline void QueryMachineRsp::clear_machine_list() {
  machine_list_.Clear();
}
inline const ::masterproto::MachineInfo& QueryMachineRsp::machine_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.QueryMachineRsp.machine_list)
  return machine_list_.Get(index);
}
inline ::masterproto::MachineInfo* QueryMachineRsp::mutable_machine_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.QueryMachineRsp.machine_list)
  return machine_list_.Mutable(index);
}
inline ::masterproto::MachineInfo* QueryMachineRsp::add_machine_list() {
  // @@protoc_insertion_point(field_add:masterproto.QueryMachineRsp.machine_list)
  return machine_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >*
QueryMachineRsp::mutable_machine_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.QueryMachineRsp.machine_list)
  return &machine_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::MachineInfo >&
QueryMachineRsp::machine_list() const {
  // @@protoc_insertion_point(field_list:masterproto.QueryMachineRsp.machine_list)
  return machine_list_;
}

// -------------------------------------------------------------------

// CreateClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool CreateClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& CreateClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* CreateClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* CreateClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.header)
}

// int64 job_id = 2;
inline void CreateClusterReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateClusterReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.job_id)
  return job_id_;
}
inline void CreateClusterReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.job_id)
}

// int64 app_id = 3;
inline void CreateClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CreateClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.app_id)
  return app_id_;
}
inline void CreateClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.app_id)
}

// int32 region_id = 4;
inline void CreateClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.region_id)
  return region_id_;
}
inline void CreateClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.region_id)
}

// int32 set_id = 5;
inline void CreateClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.set_id)
  return set_id_;
}
inline void CreateClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.set_id)
}

// string cluster_id = 6;
inline void CreateClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CreateClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.cluster_id)
}
#if LANG_CXX11
inline void CreateClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateClusterReq.cluster_id)
}
#endif
inline void CreateClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateClusterReq.cluster_id)
}
inline void CreateClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateClusterReq.cluster_id)
}
inline ::std::string* CreateClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.cluster_id)
}

// int32 replicate_set_num = 7;
inline void CreateClusterReq::clear_replicate_set_num() {
  replicate_set_num_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::replicate_set_num() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.replicate_set_num)
  return replicate_set_num_;
}
inline void CreateClusterReq::set_replicate_set_num(::google::protobuf::int32 value) {
  
  replicate_set_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.replicate_set_num)
}

// int32 secondary_num = 8;
inline void CreateClusterReq::clear_secondary_num() {
  secondary_num_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::secondary_num() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.secondary_num)
  return secondary_num_;
}
inline void CreateClusterReq::set_secondary_num(::google::protobuf::int32 value) {
  
  secondary_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.secondary_num)
}

// .masterproto.ClusterType cluster_type = 9;
inline void CreateClusterReq::clear_cluster_type() {
  cluster_type_ = 0;
}
inline ::masterproto::ClusterType CreateClusterReq::cluster_type() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.cluster_type)
  return static_cast< ::masterproto::ClusterType >(cluster_type_);
}
inline void CreateClusterReq::set_cluster_type(::masterproto::ClusterType value) {
  
  cluster_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.cluster_type)
}

// .masterproto.MachineType machine_type = 10;
inline void CreateClusterReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType CreateClusterReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void CreateClusterReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.machine_type)
}

// .cmongoproto.ResourceDesc quota = 11;
inline bool CreateClusterReq::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void CreateClusterReq::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& CreateClusterReq::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* CreateClusterReq::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* CreateClusterReq::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void CreateClusterReq::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.quota)
}

// .cmongoproto.MongoVersion version = 12;
inline void CreateClusterReq::clear_version() {
  version_ = 0;
}
inline ::cmongoproto::MongoVersion CreateClusterReq::version() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.version)
  return static_cast< ::cmongoproto::MongoVersion >(version_);
}
inline void CreateClusterReq::set_version(::cmongoproto::MongoVersion value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.version)
}

// .masterproto.JobType job_type = 13;
inline void CreateClusterReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType CreateClusterReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void CreateClusterReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.job_type)
}

// int32 closeCgroup = 14;
inline void CreateClusterReq::clear_closecgroup() {
  closecgroup_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::closecgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.closeCgroup)
  return closecgroup_;
}
inline void CreateClusterReq::set_closecgroup(::google::protobuf::int32 value) {
  
  closecgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.closeCgroup)
}

// int32 proxy_num = 15;
inline void CreateClusterReq::clear_proxy_num() {
  proxy_num_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::proxy_num() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.proxy_num)
  return proxy_num_;
}
inline void CreateClusterReq::set_proxy_num(::google::protobuf::int32 value) {
  
  proxy_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.proxy_num)
}

// int32 cluster_ver = 16;
inline void CreateClusterReq::clear_cluster_ver() {
  cluster_ver_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::cluster_ver() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.cluster_ver)
  return cluster_ver_;
}
inline void CreateClusterReq::set_cluster_ver(::google::protobuf::int32 value) {
  
  cluster_ver_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.cluster_ver)
}

// .masterproto.ClusterExtraInfo extra_info = 17;
inline bool CreateClusterReq::has_extra_info() const {
  return this != internal_default_instance() && extra_info_ != NULL;
}
inline void CreateClusterReq::clear_extra_info() {
  if (GetArenaNoVirtual() == NULL && extra_info_ != NULL) delete extra_info_;
  extra_info_ = NULL;
}
inline const ::masterproto::ClusterExtraInfo& CreateClusterReq::extra_info() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.extra_info)
  return extra_info_ != NULL ? *extra_info_
                         : *::masterproto::ClusterExtraInfo::internal_default_instance();
}
inline ::masterproto::ClusterExtraInfo* CreateClusterReq::mutable_extra_info() {
  
  if (extra_info_ == NULL) {
    extra_info_ = new ::masterproto::ClusterExtraInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.extra_info)
  return extra_info_;
}
inline ::masterproto::ClusterExtraInfo* CreateClusterReq::release_extra_info() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.extra_info)
  
  ::masterproto::ClusterExtraInfo* temp = extra_info_;
  extra_info_ = NULL;
  return temp;
}
inline void CreateClusterReq::set_allocated_extra_info(::masterproto::ClusterExtraInfo* extra_info) {
  delete extra_info_;
  extra_info_ = extra_info;
  if (extra_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.extra_info)
}

// int32 use_dynamo = 18;
inline void CreateClusterReq::clear_use_dynamo() {
  use_dynamo_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::use_dynamo() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.use_dynamo)
  return use_dynamo_;
}
inline void CreateClusterReq::set_use_dynamo(::google::protobuf::int32 value) {
  
  use_dynamo_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.use_dynamo)
}

// string proxy_version = 19;
inline void CreateClusterReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void CreateClusterReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.proxy_version)
}
#if LANG_CXX11
inline void CreateClusterReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateClusterReq.proxy_version)
}
#endif
inline void CreateClusterReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateClusterReq.proxy_version)
}
inline void CreateClusterReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateClusterReq.proxy_version)
}
inline ::std::string* CreateClusterReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.proxy_version)
}

// string mongod_subversion = 20;
inline void CreateClusterReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void CreateClusterReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.mongod_subversion)
}
#if LANG_CXX11
inline void CreateClusterReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateClusterReq.mongod_subversion)
}
#endif
inline void CreateClusterReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateClusterReq.mongod_subversion)
}
inline void CreateClusterReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateClusterReq.mongod_subversion)
}
inline ::std::string* CreateClusterReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.mongod_subversion)
}

// string dynamo_proxy_version = 21;
inline void CreateClusterReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateClusterReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void CreateClusterReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void CreateClusterReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateClusterReq.dynamo_proxy_version)
}
#endif
inline void CreateClusterReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateClusterReq.dynamo_proxy_version)
}
inline void CreateClusterReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateClusterReq.dynamo_proxy_version)
}
inline ::std::string* CreateClusterReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateClusterReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateClusterReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterReq.dynamo_proxy_version)
}

// int32 max_client_conns = 22;
inline void CreateClusterReq::clear_max_client_conns() {
  max_client_conns_ = 0;
}
inline ::google::protobuf::int32 CreateClusterReq::max_client_conns() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterReq.max_client_conns)
  return max_client_conns_;
}
inline void CreateClusterReq::set_max_client_conns(::google::protobuf::int32 value) {
  
  max_client_conns_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateClusterReq.max_client_conns)
}

// -------------------------------------------------------------------

// CreateClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool CreateClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& CreateClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* CreateClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* CreateClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateClusterRsp.header)
}

// -------------------------------------------------------------------

// UpgradeClusterModuleReq

// .cmongoproto.ReqHeader header = 1;
inline bool UpgradeClusterModuleReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void UpgradeClusterModuleReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& UpgradeClusterModuleReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* UpgradeClusterModuleReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.UpgradeClusterModuleReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* UpgradeClusterModuleReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.UpgradeClusterModuleReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void UpgradeClusterModuleReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.UpgradeClusterModuleReq.header)
}

// int32 region_id = 2;
inline void UpgradeClusterModuleReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 UpgradeClusterModuleReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.region_id)
  return region_id_;
}
inline void UpgradeClusterModuleReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.region_id)
}

// int32 set_id = 3;
inline void UpgradeClusterModuleReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 UpgradeClusterModuleReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.set_id)
  return set_id_;
}
inline void UpgradeClusterModuleReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.set_id)
}

// string cluster_id = 4;
inline void UpgradeClusterModuleReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeClusterModuleReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void UpgradeClusterModuleReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.cluster_id)
}
#if LANG_CXX11
inline void UpgradeClusterModuleReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.UpgradeClusterModuleReq.cluster_id)
}
#endif
inline void UpgradeClusterModuleReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.UpgradeClusterModuleReq.cluster_id)
}
inline void UpgradeClusterModuleReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.UpgradeClusterModuleReq.cluster_id)
}
inline ::std::string* UpgradeClusterModuleReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.UpgradeClusterModuleReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeClusterModuleReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.UpgradeClusterModuleReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeClusterModuleReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.UpgradeClusterModuleReq.cluster_id)
}

// .cmongoproto.MongoType container_type = 5;
inline void UpgradeClusterModuleReq::clear_container_type() {
  container_type_ = 0;
}
inline ::cmongoproto::MongoType UpgradeClusterModuleReq::container_type() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.container_type)
  return static_cast< ::cmongoproto::MongoType >(container_type_);
}
inline void UpgradeClusterModuleReq::set_container_type(::cmongoproto::MongoType value) {
  
  container_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.container_type)
}

// string container_version = 6;
inline void UpgradeClusterModuleReq::clear_container_version() {
  container_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& UpgradeClusterModuleReq::container_version() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.container_version)
  return container_version_.GetNoArena();
}
inline void UpgradeClusterModuleReq::set_container_version(const ::std::string& value) {
  
  container_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.container_version)
}
#if LANG_CXX11
inline void UpgradeClusterModuleReq::set_container_version(::std::string&& value) {
  
  container_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.UpgradeClusterModuleReq.container_version)
}
#endif
inline void UpgradeClusterModuleReq::set_container_version(const char* value) {
  
  container_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.UpgradeClusterModuleReq.container_version)
}
inline void UpgradeClusterModuleReq::set_container_version(const char* value, size_t size) {
  
  container_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.UpgradeClusterModuleReq.container_version)
}
inline ::std::string* UpgradeClusterModuleReq::mutable_container_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.UpgradeClusterModuleReq.container_version)
  return container_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* UpgradeClusterModuleReq::release_container_version() {
  // @@protoc_insertion_point(field_release:masterproto.UpgradeClusterModuleReq.container_version)
  
  return container_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void UpgradeClusterModuleReq::set_allocated_container_version(::std::string* container_version) {
  if (container_version != NULL) {
    
  } else {
    
  }
  container_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.UpgradeClusterModuleReq.container_version)
}

// int32 restart = 7;
inline void UpgradeClusterModuleReq::clear_restart() {
  restart_ = 0;
}
inline ::google::protobuf::int32 UpgradeClusterModuleReq::restart() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleReq.restart)
  return restart_;
}
inline void UpgradeClusterModuleReq::set_restart(::google::protobuf::int32 value) {
  
  restart_ = value;
  // @@protoc_insertion_point(field_set:masterproto.UpgradeClusterModuleReq.restart)
}

// -------------------------------------------------------------------

// UpgradeClusterModuleRsp

// .cmongoproto.ResHeader header = 1;
inline bool UpgradeClusterModuleRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void UpgradeClusterModuleRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& UpgradeClusterModuleRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.UpgradeClusterModuleRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* UpgradeClusterModuleRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.UpgradeClusterModuleRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* UpgradeClusterModuleRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.UpgradeClusterModuleRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void UpgradeClusterModuleRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.UpgradeClusterModuleRsp.header)
}

// -------------------------------------------------------------------

// InfoClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool InfoClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void InfoClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& InfoClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* InfoClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.InfoClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* InfoClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.InfoClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void InfoClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.InfoClusterReq.header)
}

// int64 app_id = 2;
inline void InfoClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 InfoClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterReq.app_id)
  return app_id_;
}
inline void InfoClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.InfoClusterReq.app_id)
}

// int32 region_id = 3;
inline void InfoClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 InfoClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterReq.region_id)
  return region_id_;
}
inline void InfoClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.InfoClusterReq.region_id)
}

// int32 set_id = 4;
inline void InfoClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 InfoClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterReq.set_id)
  return set_id_;
}
inline void InfoClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.InfoClusterReq.set_id)
}

// string cluster_id = 5;
inline void InfoClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& InfoClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void InfoClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.InfoClusterReq.cluster_id)
}
#if LANG_CXX11
inline void InfoClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.InfoClusterReq.cluster_id)
}
#endif
inline void InfoClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.InfoClusterReq.cluster_id)
}
inline void InfoClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.InfoClusterReq.cluster_id)
}
inline ::std::string* InfoClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.InfoClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InfoClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.InfoClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InfoClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.InfoClusterReq.cluster_id)
}

// -------------------------------------------------------------------

// InfoClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool InfoClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void InfoClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& InfoClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* InfoClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.InfoClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* InfoClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.InfoClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void InfoClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.InfoClusterRsp.header)
}

// .masterproto.ClusterInfo cluster_info = 2;
inline bool InfoClusterRsp::has_cluster_info() const {
  return this != internal_default_instance() && cluster_info_ != NULL;
}
inline void InfoClusterRsp::clear_cluster_info() {
  if (GetArenaNoVirtual() == NULL && cluster_info_ != NULL) delete cluster_info_;
  cluster_info_ = NULL;
}
inline const ::masterproto::ClusterInfo& InfoClusterRsp::cluster_info() const {
  // @@protoc_insertion_point(field_get:masterproto.InfoClusterRsp.cluster_info)
  return cluster_info_ != NULL ? *cluster_info_
                         : *::masterproto::ClusterInfo::internal_default_instance();
}
inline ::masterproto::ClusterInfo* InfoClusterRsp::mutable_cluster_info() {
  
  if (cluster_info_ == NULL) {
    cluster_info_ = new ::masterproto::ClusterInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.InfoClusterRsp.cluster_info)
  return cluster_info_;
}
inline ::masterproto::ClusterInfo* InfoClusterRsp::release_cluster_info() {
  // @@protoc_insertion_point(field_release:masterproto.InfoClusterRsp.cluster_info)
  
  ::masterproto::ClusterInfo* temp = cluster_info_;
  cluster_info_ = NULL;
  return temp;
}
inline void InfoClusterRsp::set_allocated_cluster_info(::masterproto::ClusterInfo* cluster_info) {
  delete cluster_info_;
  cluster_info_ = cluster_info;
  if (cluster_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.InfoClusterRsp.cluster_info)
}

// -------------------------------------------------------------------

// DelClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool DelClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DelClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DelClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DelClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterReq.header)
}

// int64 job_id = 2;
inline void DelClusterReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DelClusterReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.job_id)
  return job_id_;
}
inline void DelClusterReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.job_id)
}

// int64 app_id = 3;
inline void DelClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DelClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.app_id)
  return app_id_;
}
inline void DelClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.app_id)
}

// int32 region_id = 4;
inline void DelClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 DelClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.region_id)
  return region_id_;
}
inline void DelClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.region_id)
}

// int32 set_id = 5;
inline void DelClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 DelClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.set_id)
  return set_id_;
}
inline void DelClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.set_id)
}

// string cluster_id = 6;
inline void DelClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DelClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.cluster_id)
}
#if LANG_CXX11
inline void DelClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelClusterReq.cluster_id)
}
#endif
inline void DelClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelClusterReq.cluster_id)
}
inline void DelClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelClusterReq.cluster_id)
}
inline ::std::string* DelClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterReq.cluster_id)
}

// .masterproto.JobType job_type = 7;
inline void DelClusterReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType DelClusterReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void DelClusterReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterReq.job_type)
}

// -------------------------------------------------------------------

// DelClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool DelClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DelClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DelClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DelClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterRsp.header)
}

// -------------------------------------------------------------------

// ListClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool ListClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ListClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ListClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ListClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ListClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ListClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ListClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ListClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ListClusterReq.header)
}

// int64 app_id = 2;
inline void ListClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterReq.app_id)
  return app_id_;
}
inline void ListClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterReq.app_id)
}

// int32 region_id = 3;
inline void ListClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 ListClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterReq.region_id)
  return region_id_;
}
inline void ListClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterReq.region_id)
}

// int32 set_id = 4;
inline void ListClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 ListClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterReq.set_id)
  return set_id_;
}
inline void ListClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterReq.set_id)
}

// -------------------------------------------------------------------

// ListClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool ListClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ListClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ListClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ListClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ListClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ListClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ListClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ListClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ListClusterRsp.header)
}

// int64 app_id = 2;
inline void ListClusterRsp::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ListClusterRsp::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterRsp.app_id)
  return app_id_;
}
inline void ListClusterRsp::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterRsp.app_id)
}

// int32 region_id = 3;
inline void ListClusterRsp::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 ListClusterRsp::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterRsp.region_id)
  return region_id_;
}
inline void ListClusterRsp::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterRsp.region_id)
}

// int32 set_id = 4;
inline void ListClusterRsp::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 ListClusterRsp::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterRsp.set_id)
  return set_id_;
}
inline void ListClusterRsp::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ListClusterRsp.set_id)
}

// repeated .masterproto.ClusterInfo cluster_list = 5;
inline int ListClusterRsp::cluster_list_size() const {
  return cluster_list_.size();
}
inline void ListClusterRsp::clear_cluster_list() {
  cluster_list_.Clear();
}
inline const ::masterproto::ClusterInfo& ListClusterRsp::cluster_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ListClusterRsp.cluster_list)
  return cluster_list_.Get(index);
}
inline ::masterproto::ClusterInfo* ListClusterRsp::mutable_cluster_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ListClusterRsp.cluster_list)
  return cluster_list_.Mutable(index);
}
inline ::masterproto::ClusterInfo* ListClusterRsp::add_cluster_list() {
  // @@protoc_insertion_point(field_add:masterproto.ListClusterRsp.cluster_list)
  return cluster_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::ClusterInfo >*
ListClusterRsp::mutable_cluster_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ListClusterRsp.cluster_list)
  return &cluster_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::ClusterInfo >&
ListClusterRsp::cluster_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ListClusterRsp.cluster_list)
  return cluster_list_;
}

// -------------------------------------------------------------------

// ChPasswdReq

// .cmongoproto.ReqHeader header = 1;
inline bool ChPasswdReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChPasswdReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ChPasswdReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ChPasswdReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ChPasswdReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChPasswdReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdReq.header)
}

// int64 app_id = 2;
inline void ChPasswdReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ChPasswdReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.app_id)
  return app_id_;
}
inline void ChPasswdReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.app_id)
}

// int32 region_id = 3;
inline void ChPasswdReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 ChPasswdReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.region_id)
  return region_id_;
}
inline void ChPasswdReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.region_id)
}

// int32 set_id = 4;
inline void ChPasswdReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 ChPasswdReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.set_id)
  return set_id_;
}
inline void ChPasswdReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.set_id)
}

// string cluster_id = 5;
inline void ChPasswdReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChPasswdReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ChPasswdReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.cluster_id)
}
#if LANG_CXX11
inline void ChPasswdReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChPasswdReq.cluster_id)
}
#endif
inline void ChPasswdReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChPasswdReq.cluster_id)
}
inline void ChPasswdReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChPasswdReq.cluster_id)
}
inline ::std::string* ChPasswdReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChPasswdReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChPasswdReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdReq.cluster_id)
}

// string user_name = 6;
inline void ChPasswdReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChPasswdReq::user_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.user_name)
  return user_name_.GetNoArena();
}
inline void ChPasswdReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.user_name)
}
#if LANG_CXX11
inline void ChPasswdReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChPasswdReq.user_name)
}
#endif
inline void ChPasswdReq::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChPasswdReq.user_name)
}
inline void ChPasswdReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChPasswdReq.user_name)
}
inline ::std::string* ChPasswdReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChPasswdReq::release_user_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChPasswdReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdReq.user_name)
}

// string old_passwd = 7;
inline void ChPasswdReq::clear_old_passwd() {
  old_passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChPasswdReq::old_passwd() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.old_passwd)
  return old_passwd_.GetNoArena();
}
inline void ChPasswdReq::set_old_passwd(const ::std::string& value) {
  
  old_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.old_passwd)
}
#if LANG_CXX11
inline void ChPasswdReq::set_old_passwd(::std::string&& value) {
  
  old_passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChPasswdReq.old_passwd)
}
#endif
inline void ChPasswdReq::set_old_passwd(const char* value) {
  
  old_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChPasswdReq.old_passwd)
}
inline void ChPasswdReq::set_old_passwd(const char* value, size_t size) {
  
  old_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChPasswdReq.old_passwd)
}
inline ::std::string* ChPasswdReq::mutable_old_passwd() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdReq.old_passwd)
  return old_passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChPasswdReq::release_old_passwd() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdReq.old_passwd)
  
  return old_passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChPasswdReq::set_allocated_old_passwd(::std::string* old_passwd) {
  if (old_passwd != NULL) {
    
  } else {
    
  }
  old_passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), old_passwd);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdReq.old_passwd)
}

// string new_passwd = 8;
inline void ChPasswdReq::clear_new_passwd() {
  new_passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChPasswdReq::new_passwd() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdReq.new_passwd)
  return new_passwd_.GetNoArena();
}
inline void ChPasswdReq::set_new_passwd(const ::std::string& value) {
  
  new_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChPasswdReq.new_passwd)
}
#if LANG_CXX11
inline void ChPasswdReq::set_new_passwd(::std::string&& value) {
  
  new_passwd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChPasswdReq.new_passwd)
}
#endif
inline void ChPasswdReq::set_new_passwd(const char* value) {
  
  new_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChPasswdReq.new_passwd)
}
inline void ChPasswdReq::set_new_passwd(const char* value, size_t size) {
  
  new_passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChPasswdReq.new_passwd)
}
inline ::std::string* ChPasswdReq::mutable_new_passwd() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdReq.new_passwd)
  return new_passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChPasswdReq::release_new_passwd() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdReq.new_passwd)
  
  return new_passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChPasswdReq::set_allocated_new_passwd(::std::string* new_passwd) {
  if (new_passwd != NULL) {
    
  } else {
    
  }
  new_passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_passwd);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdReq.new_passwd)
}

// -------------------------------------------------------------------

// ChPasswdRsp

// .cmongoproto.ResHeader header = 1;
inline bool ChPasswdRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChPasswdRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ChPasswdRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChPasswdRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ChPasswdRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChPasswdRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ChPasswdRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChPasswdRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChPasswdRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChPasswdRsp.header)
}

// -------------------------------------------------------------------

// JobStatusReq

// .cmongoproto.ReqHeader header = 1;
inline bool JobStatusReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void JobStatusReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& JobStatusReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.JobStatusReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* JobStatusReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.JobStatusReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* JobStatusReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.JobStatusReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void JobStatusReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.JobStatusReq.header)
}

// int64 job_id = 2;
inline void JobStatusReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 JobStatusReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.JobStatusReq.job_id)
  return job_id_;
}
inline void JobStatusReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.JobStatusReq.job_id)
}

// -------------------------------------------------------------------

// JobStatusRsp

// .cmongoproto.ResHeader header = 1;
inline bool JobStatusRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void JobStatusRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& JobStatusRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.JobStatusRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* JobStatusRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.JobStatusRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* JobStatusRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.JobStatusRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void JobStatusRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.JobStatusRsp.header)
}

// .masterproto.JobInfo job_info = 2;
inline bool JobStatusRsp::has_job_info() const {
  return this != internal_default_instance() && job_info_ != NULL;
}
inline void JobStatusRsp::clear_job_info() {
  if (GetArenaNoVirtual() == NULL && job_info_ != NULL) delete job_info_;
  job_info_ = NULL;
}
inline const ::masterproto::JobInfo& JobStatusRsp::job_info() const {
  // @@protoc_insertion_point(field_get:masterproto.JobStatusRsp.job_info)
  return job_info_ != NULL ? *job_info_
                         : *::masterproto::JobInfo::internal_default_instance();
}
inline ::masterproto::JobInfo* JobStatusRsp::mutable_job_info() {
  
  if (job_info_ == NULL) {
    job_info_ = new ::masterproto::JobInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.JobStatusRsp.job_info)
  return job_info_;
}
inline ::masterproto::JobInfo* JobStatusRsp::release_job_info() {
  // @@protoc_insertion_point(field_release:masterproto.JobStatusRsp.job_info)
  
  ::masterproto::JobInfo* temp = job_info_;
  job_info_ = NULL;
  return temp;
}
inline void JobStatusRsp::set_allocated_job_info(::masterproto::JobInfo* job_info) {
  delete job_info_;
  job_info_ = job_info;
  if (job_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.JobStatusRsp.job_info)
}

// -------------------------------------------------------------------

// ResizeClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool ResizeClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResizeClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ResizeClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ResizeClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ResizeClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ResizeClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeClusterReq.header)
}

// int64 job_id = 2;
inline void ResizeClusterReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResizeClusterReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.job_id)
  return job_id_;
}
inline void ResizeClusterReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.job_id)
}

// .masterproto.JobType job_type = 3;
inline void ResizeClusterReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType ResizeClusterReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void ResizeClusterReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.job_type)
}

// int64 app_id = 4;
inline void ResizeClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ResizeClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.app_id)
  return app_id_;
}
inline void ResizeClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.app_id)
}

// int32 region_id = 5;
inline void ResizeClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 ResizeClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.region_id)
  return region_id_;
}
inline void ResizeClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.region_id)
}

// int32 set_id = 6;
inline void ResizeClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 ResizeClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.set_id)
  return set_id_;
}
inline void ResizeClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.set_id)
}

// string cluster_id = 7;
inline void ResizeClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResizeClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ResizeClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.cluster_id)
}
#if LANG_CXX11
inline void ResizeClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ResizeClusterReq.cluster_id)
}
#endif
inline void ResizeClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ResizeClusterReq.cluster_id)
}
inline void ResizeClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ResizeClusterReq.cluster_id)
}
inline ::std::string* ResizeClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResizeClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResizeClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeClusterReq.cluster_id)
}

// .masterproto.MachineType machine_type = 8;
inline void ResizeClusterReq::clear_machine_type() {
  machine_type_ = 0;
}
inline ::masterproto::MachineType ResizeClusterReq::machine_type() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.machine_type)
  return static_cast< ::masterproto::MachineType >(machine_type_);
}
inline void ResizeClusterReq::set_machine_type(::masterproto::MachineType value) {
  
  machine_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.machine_type)
}

// .cmongoproto.ResourceDesc quota = 9;
inline bool ResizeClusterReq::has_quota() const {
  return this != internal_default_instance() && quota_ != NULL;
}
inline void ResizeClusterReq::clear_quota() {
  if (GetArenaNoVirtual() == NULL && quota_ != NULL) delete quota_;
  quota_ = NULL;
}
inline const ::cmongoproto::ResourceDesc& ResizeClusterReq::quota() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.quota)
  return quota_ != NULL ? *quota_
                         : *::cmongoproto::ResourceDesc::internal_default_instance();
}
inline ::cmongoproto::ResourceDesc* ResizeClusterReq::mutable_quota() {
  
  if (quota_ == NULL) {
    quota_ = new ::cmongoproto::ResourceDesc;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeClusterReq.quota)
  return quota_;
}
inline ::cmongoproto::ResourceDesc* ResizeClusterReq::release_quota() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeClusterReq.quota)
  
  ::cmongoproto::ResourceDesc* temp = quota_;
  quota_ = NULL;
  return temp;
}
inline void ResizeClusterReq::set_allocated_quota(::cmongoproto::ResourceDesc* quota) {
  delete quota_;
  quota_ = quota;
  if (quota) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeClusterReq.quota)
}

// int32 close_cgroup = 10;
inline void ResizeClusterReq::clear_close_cgroup() {
  close_cgroup_ = 0;
}
inline ::google::protobuf::int32 ResizeClusterReq::close_cgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterReq.close_cgroup)
  return close_cgroup_;
}
inline void ResizeClusterReq::set_close_cgroup(::google::protobuf::int32 value) {
  
  close_cgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeClusterReq.close_cgroup)
}

// -------------------------------------------------------------------

// ResizeClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool ResizeClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResizeClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ResizeClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ResizeClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ResizeClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ResizeClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeClusterRsp.header)
}

// -------------------------------------------------------------------

// BackupClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool BackupClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BackupClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& BackupClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* BackupClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* BackupClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BackupClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterReq.header)
}

// int64 job_id = 2;
inline void BackupClusterReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BackupClusterReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.job_id)
  return job_id_;
}
inline void BackupClusterReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.job_id)
}

// .masterproto.JobType job_type = 3;
inline void BackupClusterReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType BackupClusterReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void BackupClusterReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.job_type)
}

// int64 app_id = 4;
inline void BackupClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BackupClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.app_id)
  return app_id_;
}
inline void BackupClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.app_id)
}

// int32 region_id = 5;
inline void BackupClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 BackupClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.region_id)
  return region_id_;
}
inline void BackupClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.region_id)
}

// int32 set_id = 6;
inline void BackupClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 BackupClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.set_id)
  return set_id_;
}
inline void BackupClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.set_id)
}

// string cluster_id = 7;
inline void BackupClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void BackupClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.cluster_id)
}
#if LANG_CXX11
inline void BackupClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupClusterReq.cluster_id)
}
#endif
inline void BackupClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupClusterReq.cluster_id)
}
inline void BackupClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupClusterReq.cluster_id)
}
inline ::std::string* BackupClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterReq.cluster_id)
}

// int64 peroid = 8;
inline void BackupClusterReq::clear_peroid() {
  peroid_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 BackupClusterReq::peroid() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.peroid)
  return peroid_;
}
inline void BackupClusterReq::set_peroid(::google::protobuf::int64 value) {
  
  peroid_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.peroid)
}

// bool back_type = 9;
inline void BackupClusterReq::clear_back_type() {
  back_type_ = false;
}
inline bool BackupClusterReq::back_type() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.back_type)
  return back_type_;
}
inline void BackupClusterReq::set_back_type(bool value) {
  
  back_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.back_type)
}

// string db = 10;
inline void BackupClusterReq::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupClusterReq::db() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.db)
  return db_.GetNoArena();
}
inline void BackupClusterReq::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.db)
}
#if LANG_CXX11
inline void BackupClusterReq::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupClusterReq.db)
}
#endif
inline void BackupClusterReq::set_db(const char* value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupClusterReq.db)
}
inline void BackupClusterReq::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupClusterReq.db)
}
inline ::std::string* BackupClusterReq::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterReq.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupClusterReq::release_db() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterReq.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupClusterReq::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterReq.db)
}

// string table = 11;
inline void BackupClusterReq::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupClusterReq::table() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterReq.table)
  return table_.GetNoArena();
}
inline void BackupClusterReq::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterReq.table)
}
#if LANG_CXX11
inline void BackupClusterReq::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupClusterReq.table)
}
#endif
inline void BackupClusterReq::set_table(const char* value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupClusterReq.table)
}
inline void BackupClusterReq::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupClusterReq.table)
}
inline ::std::string* BackupClusterReq::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterReq.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupClusterReq::release_table() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterReq.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupClusterReq::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterReq.table)
}

// -------------------------------------------------------------------

// BackupClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool BackupClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BackupClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& BackupClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* BackupClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* BackupClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BackupClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterRsp.header)
}

// string start_time = 2;
inline void BackupClusterRsp::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BackupClusterRsp::start_time() const {
  // @@protoc_insertion_point(field_get:masterproto.BackupClusterRsp.start_time)
  return start_time_.GetNoArena();
}
inline void BackupClusterRsp::set_start_time(const ::std::string& value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BackupClusterRsp.start_time)
}
#if LANG_CXX11
inline void BackupClusterRsp::set_start_time(::std::string&& value) {
  
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BackupClusterRsp.start_time)
}
#endif
inline void BackupClusterRsp::set_start_time(const char* value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BackupClusterRsp.start_time)
}
inline void BackupClusterRsp::set_start_time(const char* value, size_t size) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BackupClusterRsp.start_time)
}
inline ::std::string* BackupClusterRsp::mutable_start_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BackupClusterRsp.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BackupClusterRsp::release_start_time() {
  // @@protoc_insertion_point(field_release:masterproto.BackupClusterRsp.start_time)
  
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BackupClusterRsp::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    
  } else {
    
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BackupClusterRsp.start_time)
}

// -------------------------------------------------------------------

// QueryBackupListReq

// .cmongoproto.ReqHeader header = 1;
inline bool QueryBackupListReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryBackupListReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& QueryBackupListReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* QueryBackupListReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* QueryBackupListReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryBackupListReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.header)
}

// int64 app_id = 2;
inline void QueryBackupListReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QueryBackupListReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.app_id)
  return app_id_;
}
inline void QueryBackupListReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.app_id)
}

// int32 region_id = 3;
inline void QueryBackupListReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 QueryBackupListReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.region_id)
  return region_id_;
}
inline void QueryBackupListReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.region_id)
}

// int32 set_id = 4;
inline void QueryBackupListReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 QueryBackupListReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.set_id)
  return set_id_;
}
inline void QueryBackupListReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.set_id)
}

// string cluster_id = 5;
inline void QueryBackupListReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryBackupListReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void QueryBackupListReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.cluster_id)
}
#if LANG_CXX11
inline void QueryBackupListReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryBackupListReq.cluster_id)
}
#endif
inline void QueryBackupListReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryBackupListReq.cluster_id)
}
inline void QueryBackupListReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryBackupListReq.cluster_id)
}
inline ::std::string* QueryBackupListReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryBackupListReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryBackupListReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.cluster_id)
}

// string start_time = 6;
inline void QueryBackupListReq::clear_start_time() {
  start_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryBackupListReq::start_time() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.start_time)
  return start_time_.GetNoArena();
}
inline void QueryBackupListReq::set_start_time(const ::std::string& value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.start_time)
}
#if LANG_CXX11
inline void QueryBackupListReq::set_start_time(::std::string&& value) {
  
  start_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryBackupListReq.start_time)
}
#endif
inline void QueryBackupListReq::set_start_time(const char* value) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryBackupListReq.start_time)
}
inline void QueryBackupListReq::set_start_time(const char* value, size_t size) {
  
  start_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryBackupListReq.start_time)
}
inline ::std::string* QueryBackupListReq::mutable_start_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.start_time)
  return start_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryBackupListReq::release_start_time() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.start_time)
  
  return start_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryBackupListReq::set_allocated_start_time(::std::string* start_time) {
  if (start_time != NULL) {
    
  } else {
    
  }
  start_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), start_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.start_time)
}

// string end_time = 7;
inline void QueryBackupListReq::clear_end_time() {
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryBackupListReq::end_time() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.end_time)
  return end_time_.GetNoArena();
}
inline void QueryBackupListReq::set_end_time(const ::std::string& value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.end_time)
}
#if LANG_CXX11
inline void QueryBackupListReq::set_end_time(::std::string&& value) {
  
  end_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryBackupListReq.end_time)
}
#endif
inline void QueryBackupListReq::set_end_time(const char* value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryBackupListReq.end_time)
}
inline void QueryBackupListReq::set_end_time(const char* value, size_t size) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryBackupListReq.end_time)
}
inline ::std::string* QueryBackupListReq::mutable_end_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.end_time)
  return end_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryBackupListReq::release_end_time() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.end_time)
  
  return end_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryBackupListReq::set_allocated_end_time(::std::string* end_time) {
  if (end_time != NULL) {
    
  } else {
    
  }
  end_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.end_time)
}

// string db = 8;
inline void QueryBackupListReq::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryBackupListReq::db() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.db)
  return db_.GetNoArena();
}
inline void QueryBackupListReq::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.db)
}
#if LANG_CXX11
inline void QueryBackupListReq::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryBackupListReq.db)
}
#endif
inline void QueryBackupListReq::set_db(const char* value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryBackupListReq.db)
}
inline void QueryBackupListReq::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryBackupListReq.db)
}
inline ::std::string* QueryBackupListReq::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryBackupListReq::release_db() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryBackupListReq::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.db)
}

// string table = 9;
inline void QueryBackupListReq::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryBackupListReq::table() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListReq.table)
  return table_.GetNoArena();
}
inline void QueryBackupListReq::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryBackupListReq.table)
}
#if LANG_CXX11
inline void QueryBackupListReq::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryBackupListReq.table)
}
#endif
inline void QueryBackupListReq::set_table(const char* value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryBackupListReq.table)
}
inline void QueryBackupListReq::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryBackupListReq.table)
}
inline ::std::string* QueryBackupListReq::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListReq.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryBackupListReq::release_table() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListReq.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryBackupListReq::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListReq.table)
}

// -------------------------------------------------------------------

// QueryBackupListRsp

// .cmongoproto.ResHeader header = 1;
inline bool QueryBackupListRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryBackupListRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& QueryBackupListRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* QueryBackupListRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* QueryBackupListRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryBackupListRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryBackupListRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryBackupListRsp.header)
}

// repeated .masterproto.BackupInfo backup_list = 2;
inline int QueryBackupListRsp::backup_list_size() const {
  return backup_list_.size();
}
inline void QueryBackupListRsp::clear_backup_list() {
  backup_list_.Clear();
}
inline const ::masterproto::BackupInfo& QueryBackupListRsp::backup_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.QueryBackupListRsp.backup_list)
  return backup_list_.Get(index);
}
inline ::masterproto::BackupInfo* QueryBackupListRsp::mutable_backup_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.QueryBackupListRsp.backup_list)
  return backup_list_.Mutable(index);
}
inline ::masterproto::BackupInfo* QueryBackupListRsp::add_backup_list() {
  // @@protoc_insertion_point(field_add:masterproto.QueryBackupListRsp.backup_list)
  return backup_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::BackupInfo >*
QueryBackupListRsp::mutable_backup_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.QueryBackupListRsp.backup_list)
  return &backup_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::BackupInfo >&
QueryBackupListRsp::backup_list() const {
  // @@protoc_insertion_point(field_list:masterproto.QueryBackupListRsp.backup_list)
  return backup_list_;
}

// -------------------------------------------------------------------

// CheckRestoreTsReq

// .cmongoproto.ReqHeader header = 1;
inline bool CheckRestoreTsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CheckRestoreTsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& CheckRestoreTsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* CheckRestoreTsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* CheckRestoreTsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CheckRestoreTsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsReq.header)
}

// int64 app_id = 2;
inline void CheckRestoreTsReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 CheckRestoreTsReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.app_id)
  return app_id_;
}
inline void CheckRestoreTsReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.app_id)
}

// int32 region_id = 3;
inline void CheckRestoreTsReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 CheckRestoreTsReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.region_id)
  return region_id_;
}
inline void CheckRestoreTsReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.region_id)
}

// int32 set_id = 4;
inline void CheckRestoreTsReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 CheckRestoreTsReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.set_id)
  return set_id_;
}
inline void CheckRestoreTsReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.set_id)
}

// string cluster_id = 5;
inline void CheckRestoreTsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckRestoreTsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CheckRestoreTsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.cluster_id)
}
#if LANG_CXX11
inline void CheckRestoreTsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CheckRestoreTsReq.cluster_id)
}
#endif
inline void CheckRestoreTsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CheckRestoreTsReq.cluster_id)
}
inline void CheckRestoreTsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CheckRestoreTsReq.cluster_id)
}
inline ::std::string* CheckRestoreTsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckRestoreTsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckRestoreTsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsReq.cluster_id)
}

// string time_stamp = 6;
inline void CheckRestoreTsReq::clear_time_stamp() {
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckRestoreTsReq::time_stamp() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.time_stamp)
  return time_stamp_.GetNoArena();
}
inline void CheckRestoreTsReq::set_time_stamp(const ::std::string& value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.time_stamp)
}
#if LANG_CXX11
inline void CheckRestoreTsReq::set_time_stamp(::std::string&& value) {
  
  time_stamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CheckRestoreTsReq.time_stamp)
}
#endif
inline void CheckRestoreTsReq::set_time_stamp(const char* value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CheckRestoreTsReq.time_stamp)
}
inline void CheckRestoreTsReq::set_time_stamp(const char* value, size_t size) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CheckRestoreTsReq.time_stamp)
}
inline ::std::string* CheckRestoreTsReq::mutable_time_stamp() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsReq.time_stamp)
  return time_stamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckRestoreTsReq::release_time_stamp() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsReq.time_stamp)
  
  return time_stamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckRestoreTsReq::set_allocated_time_stamp(::std::string* time_stamp) {
  if (time_stamp != NULL) {
    
  } else {
    
  }
  time_stamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_stamp);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsReq.time_stamp)
}

// string db = 7;
inline void CheckRestoreTsReq::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckRestoreTsReq::db() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.db)
  return db_.GetNoArena();
}
inline void CheckRestoreTsReq::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.db)
}
#if LANG_CXX11
inline void CheckRestoreTsReq::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CheckRestoreTsReq.db)
}
#endif
inline void CheckRestoreTsReq::set_db(const char* value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CheckRestoreTsReq.db)
}
inline void CheckRestoreTsReq::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CheckRestoreTsReq.db)
}
inline ::std::string* CheckRestoreTsReq::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsReq.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckRestoreTsReq::release_db() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsReq.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckRestoreTsReq::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsReq.db)
}

// string table = 8;
inline void CheckRestoreTsReq::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CheckRestoreTsReq::table() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsReq.table)
  return table_.GetNoArena();
}
inline void CheckRestoreTsReq::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsReq.table)
}
#if LANG_CXX11
inline void CheckRestoreTsReq::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CheckRestoreTsReq.table)
}
#endif
inline void CheckRestoreTsReq::set_table(const char* value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CheckRestoreTsReq.table)
}
inline void CheckRestoreTsReq::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CheckRestoreTsReq.table)
}
inline ::std::string* CheckRestoreTsReq::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsReq.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CheckRestoreTsReq::release_table() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsReq.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CheckRestoreTsReq::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsReq.table)
}

// -------------------------------------------------------------------

// CheckRestoreTsRsp

// .cmongoproto.ResHeader header = 1;
inline bool CheckRestoreTsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CheckRestoreTsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& CheckRestoreTsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* CheckRestoreTsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CheckRestoreTsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* CheckRestoreTsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CheckRestoreTsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CheckRestoreTsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CheckRestoreTsRsp.header)
}

// bool check_result = 2;
inline void CheckRestoreTsRsp::clear_check_result() {
  check_result_ = false;
}
inline bool CheckRestoreTsRsp::check_result() const {
  // @@protoc_insertion_point(field_get:masterproto.CheckRestoreTsRsp.check_result)
  return check_result_;
}
inline void CheckRestoreTsRsp::set_check_result(bool value) {
  
  check_result_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CheckRestoreTsRsp.check_result)
}

// -------------------------------------------------------------------

// RestoreClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool RestoreClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestoreClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& RestoreClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* RestoreClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* RestoreClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestoreClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.header)
}

// int64 job_id = 2;
inline void RestoreClusterReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RestoreClusterReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.job_id)
  return job_id_;
}
inline void RestoreClusterReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.job_id)
}

// .masterproto.JobType job_type = 3;
inline void RestoreClusterReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType RestoreClusterReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void RestoreClusterReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.job_type)
}

// int64 app_id = 4;
inline void RestoreClusterReq::clear_app_id() {
  app_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RestoreClusterReq::app_id() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.app_id)
  return app_id_;
}
inline void RestoreClusterReq::set_app_id(::google::protobuf::int64 value) {
  
  app_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.app_id)
}

// int32 region_id = 5;
inline void RestoreClusterReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 RestoreClusterReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.region_id)
  return region_id_;
}
inline void RestoreClusterReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.region_id)
}

// int32 set_id = 6;
inline void RestoreClusterReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 RestoreClusterReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.set_id)
  return set_id_;
}
inline void RestoreClusterReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.set_id)
}

// string src_cluster = 7;
inline void RestoreClusterReq::clear_src_cluster() {
  src_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::src_cluster() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.src_cluster)
  return src_cluster_.GetNoArena();
}
inline void RestoreClusterReq::set_src_cluster(const ::std::string& value) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.src_cluster)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_src_cluster(::std::string&& value) {
  
  src_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.src_cluster)
}
#endif
inline void RestoreClusterReq::set_src_cluster(const char* value) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.src_cluster)
}
inline void RestoreClusterReq::set_src_cluster(const char* value, size_t size) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.src_cluster)
}
inline ::std::string* RestoreClusterReq::mutable_src_cluster() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.src_cluster)
  return src_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_src_cluster() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.src_cluster)
  
  return src_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_src_cluster(::std::string* src_cluster) {
  if (src_cluster != NULL) {
    
  } else {
    
  }
  src_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_cluster);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.src_cluster)
}

// string dest_cluster = 8;
inline void RestoreClusterReq::clear_dest_cluster() {
  dest_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::dest_cluster() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.dest_cluster)
  return dest_cluster_.GetNoArena();
}
inline void RestoreClusterReq::set_dest_cluster(const ::std::string& value) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.dest_cluster)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_dest_cluster(::std::string&& value) {
  
  dest_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.dest_cluster)
}
#endif
inline void RestoreClusterReq::set_dest_cluster(const char* value) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.dest_cluster)
}
inline void RestoreClusterReq::set_dest_cluster(const char* value, size_t size) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.dest_cluster)
}
inline ::std::string* RestoreClusterReq::mutable_dest_cluster() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.dest_cluster)
  return dest_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_dest_cluster() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.dest_cluster)
  
  return dest_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_dest_cluster(::std::string* dest_cluster) {
  if (dest_cluster != NULL) {
    
  } else {
    
  }
  dest_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_cluster);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.dest_cluster)
}

// string time_stamp = 9;
inline void RestoreClusterReq::clear_time_stamp() {
  time_stamp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::time_stamp() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.time_stamp)
  return time_stamp_.GetNoArena();
}
inline void RestoreClusterReq::set_time_stamp(const ::std::string& value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.time_stamp)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_time_stamp(::std::string&& value) {
  
  time_stamp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.time_stamp)
}
#endif
inline void RestoreClusterReq::set_time_stamp(const char* value) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.time_stamp)
}
inline void RestoreClusterReq::set_time_stamp(const char* value, size_t size) {
  
  time_stamp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.time_stamp)
}
inline ::std::string* RestoreClusterReq::mutable_time_stamp() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.time_stamp)
  return time_stamp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_time_stamp() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.time_stamp)
  
  return time_stamp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_time_stamp(::std::string* time_stamp) {
  if (time_stamp != NULL) {
    
  } else {
    
  }
  time_stamp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), time_stamp);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.time_stamp)
}

// string src_db = 10;
inline void RestoreClusterReq::clear_src_db() {
  src_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::src_db() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.src_db)
  return src_db_.GetNoArena();
}
inline void RestoreClusterReq::set_src_db(const ::std::string& value) {
  
  src_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.src_db)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_src_db(::std::string&& value) {
  
  src_db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.src_db)
}
#endif
inline void RestoreClusterReq::set_src_db(const char* value) {
  
  src_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.src_db)
}
inline void RestoreClusterReq::set_src_db(const char* value, size_t size) {
  
  src_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.src_db)
}
inline ::std::string* RestoreClusterReq::mutable_src_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.src_db)
  return src_db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_src_db() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.src_db)
  
  return src_db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_src_db(::std::string* src_db) {
  if (src_db != NULL) {
    
  } else {
    
  }
  src_db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.src_db)
}

// string src_table = 11;
inline void RestoreClusterReq::clear_src_table() {
  src_table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::src_table() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.src_table)
  return src_table_.GetNoArena();
}
inline void RestoreClusterReq::set_src_table(const ::std::string& value) {
  
  src_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.src_table)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_src_table(::std::string&& value) {
  
  src_table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.src_table)
}
#endif
inline void RestoreClusterReq::set_src_table(const char* value) {
  
  src_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.src_table)
}
inline void RestoreClusterReq::set_src_table(const char* value, size_t size) {
  
  src_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.src_table)
}
inline ::std::string* RestoreClusterReq::mutable_src_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.src_table)
  return src_table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_src_table() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.src_table)
  
  return src_table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_src_table(::std::string* src_table) {
  if (src_table != NULL) {
    
  } else {
    
  }
  src_table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.src_table)
}

// string dst_db = 12;
inline void RestoreClusterReq::clear_dst_db() {
  dst_db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::dst_db() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.dst_db)
  return dst_db_.GetNoArena();
}
inline void RestoreClusterReq::set_dst_db(const ::std::string& value) {
  
  dst_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.dst_db)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_dst_db(::std::string&& value) {
  
  dst_db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.dst_db)
}
#endif
inline void RestoreClusterReq::set_dst_db(const char* value) {
  
  dst_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.dst_db)
}
inline void RestoreClusterReq::set_dst_db(const char* value, size_t size) {
  
  dst_db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.dst_db)
}
inline ::std::string* RestoreClusterReq::mutable_dst_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.dst_db)
  return dst_db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_dst_db() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.dst_db)
  
  return dst_db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_dst_db(::std::string* dst_db) {
  if (dst_db != NULL) {
    
  } else {
    
  }
  dst_db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.dst_db)
}

// string dst_table = 13;
inline void RestoreClusterReq::clear_dst_table() {
  dst_table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreClusterReq::dst_table() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterReq.dst_table)
  return dst_table_.GetNoArena();
}
inline void RestoreClusterReq::set_dst_table(const ::std::string& value) {
  
  dst_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreClusterReq.dst_table)
}
#if LANG_CXX11
inline void RestoreClusterReq::set_dst_table(::std::string&& value) {
  
  dst_table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreClusterReq.dst_table)
}
#endif
inline void RestoreClusterReq::set_dst_table(const char* value) {
  
  dst_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreClusterReq.dst_table)
}
inline void RestoreClusterReq::set_dst_table(const char* value, size_t size) {
  
  dst_table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreClusterReq.dst_table)
}
inline ::std::string* RestoreClusterReq::mutable_dst_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterReq.dst_table)
  return dst_table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreClusterReq::release_dst_table() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterReq.dst_table)
  
  return dst_table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreClusterReq::set_allocated_dst_table(::std::string* dst_table) {
  if (dst_table != NULL) {
    
  } else {
    
  }
  dst_table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterReq.dst_table)
}

// -------------------------------------------------------------------

// RestoreClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool RestoreClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestoreClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& RestoreClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* RestoreClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* RestoreClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestoreClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreClusterRsp.header)
}

// -------------------------------------------------------------------

// ExchangeClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool ExchangeClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ExchangeClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ExchangeClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ExchangeClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ExchangeClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ExchangeClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ExchangeClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ExchangeClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ExchangeClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ExchangeClusterReq.header)
}

// string src_cluster = 2;
inline void ExchangeClusterReq::clear_src_cluster() {
  src_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExchangeClusterReq::src_cluster() const {
  // @@protoc_insertion_point(field_get:masterproto.ExchangeClusterReq.src_cluster)
  return src_cluster_.GetNoArena();
}
inline void ExchangeClusterReq::set_src_cluster(const ::std::string& value) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ExchangeClusterReq.src_cluster)
}
#if LANG_CXX11
inline void ExchangeClusterReq::set_src_cluster(::std::string&& value) {
  
  src_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ExchangeClusterReq.src_cluster)
}
#endif
inline void ExchangeClusterReq::set_src_cluster(const char* value) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ExchangeClusterReq.src_cluster)
}
inline void ExchangeClusterReq::set_src_cluster(const char* value, size_t size) {
  
  src_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ExchangeClusterReq.src_cluster)
}
inline ::std::string* ExchangeClusterReq::mutable_src_cluster() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ExchangeClusterReq.src_cluster)
  return src_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExchangeClusterReq::release_src_cluster() {
  // @@protoc_insertion_point(field_release:masterproto.ExchangeClusterReq.src_cluster)
  
  return src_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExchangeClusterReq::set_allocated_src_cluster(::std::string* src_cluster) {
  if (src_cluster != NULL) {
    
  } else {
    
  }
  src_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_cluster);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ExchangeClusterReq.src_cluster)
}

// string dest_cluster = 3;
inline void ExchangeClusterReq::clear_dest_cluster() {
  dest_cluster_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExchangeClusterReq::dest_cluster() const {
  // @@protoc_insertion_point(field_get:masterproto.ExchangeClusterReq.dest_cluster)
  return dest_cluster_.GetNoArena();
}
inline void ExchangeClusterReq::set_dest_cluster(const ::std::string& value) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ExchangeClusterReq.dest_cluster)
}
#if LANG_CXX11
inline void ExchangeClusterReq::set_dest_cluster(::std::string&& value) {
  
  dest_cluster_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ExchangeClusterReq.dest_cluster)
}
#endif
inline void ExchangeClusterReq::set_dest_cluster(const char* value) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ExchangeClusterReq.dest_cluster)
}
inline void ExchangeClusterReq::set_dest_cluster(const char* value, size_t size) {
  
  dest_cluster_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ExchangeClusterReq.dest_cluster)
}
inline ::std::string* ExchangeClusterReq::mutable_dest_cluster() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ExchangeClusterReq.dest_cluster)
  return dest_cluster_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExchangeClusterReq::release_dest_cluster() {
  // @@protoc_insertion_point(field_release:masterproto.ExchangeClusterReq.dest_cluster)
  
  return dest_cluster_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExchangeClusterReq::set_allocated_dest_cluster(::std::string* dest_cluster) {
  if (dest_cluster != NULL) {
    
  } else {
    
  }
  dest_cluster_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_cluster);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ExchangeClusterReq.dest_cluster)
}

// -------------------------------------------------------------------

// ExchangeClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool ExchangeClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ExchangeClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ExchangeClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ExchangeClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ExchangeClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ExchangeClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ExchangeClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ExchangeClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ExchangeClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ExchangeClusterRsp.header)
}

// -------------------------------------------------------------------

// IsolationClusterReq

// .cmongoproto.ReqHeader header = 1;
inline bool IsolationClusterReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void IsolationClusterReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& IsolationClusterReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.IsolationClusterReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* IsolationClusterReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.IsolationClusterReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* IsolationClusterReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.IsolationClusterReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void IsolationClusterReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsolationClusterReq.header)
}

// string cluster_id = 2;
inline void IsolationClusterReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IsolationClusterReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.IsolationClusterReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void IsolationClusterReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.IsolationClusterReq.cluster_id)
}
#if LANG_CXX11
inline void IsolationClusterReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.IsolationClusterReq.cluster_id)
}
#endif
inline void IsolationClusterReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.IsolationClusterReq.cluster_id)
}
inline void IsolationClusterReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.IsolationClusterReq.cluster_id)
}
inline ::std::string* IsolationClusterReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.IsolationClusterReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IsolationClusterReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.IsolationClusterReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IsolationClusterReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsolationClusterReq.cluster_id)
}

// .masterproto.ClusterStatus status = 3;
inline void IsolationClusterReq::clear_status() {
  status_ = 0;
}
inline ::masterproto::ClusterStatus IsolationClusterReq::status() const {
  // @@protoc_insertion_point(field_get:masterproto.IsolationClusterReq.status)
  return static_cast< ::masterproto::ClusterStatus >(status_);
}
inline void IsolationClusterReq::set_status(::masterproto::ClusterStatus value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:masterproto.IsolationClusterReq.status)
}

// -------------------------------------------------------------------

// IsolationClusterRsp

// .cmongoproto.ResHeader header = 1;
inline bool IsolationClusterRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void IsolationClusterRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& IsolationClusterRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.IsolationClusterRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* IsolationClusterRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.IsolationClusterRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* IsolationClusterRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.IsolationClusterRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void IsolationClusterRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsolationClusterRsp.header)
}

// -------------------------------------------------------------------

// AddRsReq

// .cmongoproto.ReqHeader header = 1;
inline bool AddRsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddRsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& AddRsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* AddRsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* AddRsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddRsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.header)
}

// int64 job_id = 2;
inline void AddRsReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 AddRsReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.job_id)
  return job_id_;
}
inline void AddRsReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.job_id)
}

// string cluster_id = 3;
inline void AddRsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void AddRsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.cluster_id)
}
#if LANG_CXX11
inline void AddRsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddRsReq.cluster_id)
}
#endif
inline void AddRsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddRsReq.cluster_id)
}
inline void AddRsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddRsReq.cluster_id)
}
inline ::std::string* AddRsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.cluster_id)
}

// string rs_name = 4;
inline void AddRsReq::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRsReq::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.rs_name)
  return rs_name_.GetNoArena();
}
inline void AddRsReq::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.rs_name)
}
#if LANG_CXX11
inline void AddRsReq::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddRsReq.rs_name)
}
#endif
inline void AddRsReq::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddRsReq.rs_name)
}
inline void AddRsReq::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddRsReq.rs_name)
}
inline ::std::string* AddRsReq::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRsReq::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRsReq::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.rs_name)
}

// .masterproto.JobType job_type = 5;
inline void AddRsReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType AddRsReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void AddRsReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.job_type)
}

// int32 closeCgroup = 6;
inline void AddRsReq::clear_closecgroup() {
  closecgroup_ = 0;
}
inline ::google::protobuf::int32 AddRsReq::closecgroup() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.closeCgroup)
  return closecgroup_;
}
inline void AddRsReq::set_closecgroup(::google::protobuf::int32 value) {
  
  closecgroup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.closeCgroup)
}

// string proxy_version = 7;
inline void AddRsReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRsReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void AddRsReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.proxy_version)
}
#if LANG_CXX11
inline void AddRsReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddRsReq.proxy_version)
}
#endif
inline void AddRsReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddRsReq.proxy_version)
}
inline void AddRsReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddRsReq.proxy_version)
}
inline ::std::string* AddRsReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRsReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRsReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.proxy_version)
}

// string mongod_subversion = 8;
inline void AddRsReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRsReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void AddRsReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.mongod_subversion)
}
#if LANG_CXX11
inline void AddRsReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddRsReq.mongod_subversion)
}
#endif
inline void AddRsReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddRsReq.mongod_subversion)
}
inline void AddRsReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddRsReq.mongod_subversion)
}
inline ::std::string* AddRsReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRsReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRsReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.mongod_subversion)
}

// string dynamo_proxy_version = 9;
inline void AddRsReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AddRsReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void AddRsReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AddRsReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void AddRsReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AddRsReq.dynamo_proxy_version)
}
#endif
inline void AddRsReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AddRsReq.dynamo_proxy_version)
}
inline void AddRsReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AddRsReq.dynamo_proxy_version)
}
inline ::std::string* AddRsReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AddRsReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AddRsReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsReq.dynamo_proxy_version)
}

// -------------------------------------------------------------------

// AddRsRsp

// .cmongoproto.ResHeader header = 1;
inline bool AddRsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void AddRsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& AddRsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.AddRsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* AddRsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.AddRsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* AddRsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.AddRsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void AddRsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.AddRsRsp.header)
}

// -------------------------------------------------------------------

// DelRsReq

// .cmongoproto.ReqHeader header = 1;
inline bool DelRsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelRsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DelRsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DelRsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelRsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DelRsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelRsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelRsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelRsReq.header)
}

// int64 job_id = 2;
inline void DelRsReq::clear_job_id() {
  job_id_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 DelRsReq::job_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsReq.job_id)
  return job_id_;
}
inline void DelRsReq::set_job_id(::google::protobuf::int64 value) {
  
  job_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelRsReq.job_id)
}

// string cluster_id = 3;
inline void DelRsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelRsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DelRsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelRsReq.cluster_id)
}
#if LANG_CXX11
inline void DelRsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelRsReq.cluster_id)
}
#endif
inline void DelRsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelRsReq.cluster_id)
}
inline void DelRsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelRsReq.cluster_id)
}
inline ::std::string* DelRsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelRsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelRsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DelRsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelRsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelRsReq.cluster_id)
}

// string rs_name = 4;
inline void DelRsReq::clear_rs_name() {
  rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelRsReq::rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsReq.rs_name)
  return rs_name_.GetNoArena();
}
inline void DelRsReq::set_rs_name(const ::std::string& value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelRsReq.rs_name)
}
#if LANG_CXX11
inline void DelRsReq::set_rs_name(::std::string&& value) {
  
  rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelRsReq.rs_name)
}
#endif
inline void DelRsReq::set_rs_name(const char* value) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelRsReq.rs_name)
}
inline void DelRsReq::set_rs_name(const char* value, size_t size) {
  
  rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelRsReq.rs_name)
}
inline ::std::string* DelRsReq::mutable_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelRsReq.rs_name)
  return rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelRsReq::release_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.DelRsReq.rs_name)
  
  return rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelRsReq::set_allocated_rs_name(::std::string* rs_name) {
  if (rs_name != NULL) {
    
  } else {
    
  }
  rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelRsReq.rs_name)
}

// .masterproto.JobType job_type = 5;
inline void DelRsReq::clear_job_type() {
  job_type_ = 0;
}
inline ::masterproto::JobType DelRsReq::job_type() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsReq.job_type)
  return static_cast< ::masterproto::JobType >(job_type_);
}
inline void DelRsReq::set_job_type(::masterproto::JobType value) {
  
  job_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelRsReq.job_type)
}

// -------------------------------------------------------------------

// DelRsRsp

// .cmongoproto.ResHeader header = 1;
inline bool DelRsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelRsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DelRsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelRsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DelRsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelRsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DelRsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelRsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelRsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelRsRsp.header)
}

// -------------------------------------------------------------------

// OpLogStatusReq

// .cmongoproto.ReqHeader header = 1;
inline bool OpLogStatusReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void OpLogStatusReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& OpLogStatusReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.OpLogStatusReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* OpLogStatusReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.OpLogStatusReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* OpLogStatusReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.OpLogStatusReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void OpLogStatusReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.OpLogStatusReq.header)
}

// string cluster_id = 2;
inline void OpLogStatusReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpLogStatusReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.OpLogStatusReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void OpLogStatusReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.OpLogStatusReq.cluster_id)
}
#if LANG_CXX11
inline void OpLogStatusReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.OpLogStatusReq.cluster_id)
}
#endif
inline void OpLogStatusReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.OpLogStatusReq.cluster_id)
}
inline void OpLogStatusReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.OpLogStatusReq.cluster_id)
}
inline ::std::string* OpLogStatusReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.OpLogStatusReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpLogStatusReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.OpLogStatusReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpLogStatusReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.OpLogStatusReq.cluster_id)
}

// -------------------------------------------------------------------

// OpLogStatusRsp

// .cmongoproto.ResHeader header = 1;
inline bool OpLogStatusRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void OpLogStatusRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& OpLogStatusRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.OpLogStatusRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* OpLogStatusRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.OpLogStatusRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* OpLogStatusRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.OpLogStatusRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void OpLogStatusRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.OpLogStatusRsp.header)
}

// repeated .masterproto.OplogInfo oplog_infos = 2;
inline int OpLogStatusRsp::oplog_infos_size() const {
  return oplog_infos_.size();
}
inline void OpLogStatusRsp::clear_oplog_infos() {
  oplog_infos_.Clear();
}
inline const ::masterproto::OplogInfo& OpLogStatusRsp::oplog_infos(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.OpLogStatusRsp.oplog_infos)
  return oplog_infos_.Get(index);
}
inline ::masterproto::OplogInfo* OpLogStatusRsp::mutable_oplog_infos(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.OpLogStatusRsp.oplog_infos)
  return oplog_infos_.Mutable(index);
}
inline ::masterproto::OplogInfo* OpLogStatusRsp::add_oplog_infos() {
  // @@protoc_insertion_point(field_add:masterproto.OpLogStatusRsp.oplog_infos)
  return oplog_infos_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::OplogInfo >*
OpLogStatusRsp::mutable_oplog_infos() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.OpLogStatusRsp.oplog_infos)
  return &oplog_infos_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::OplogInfo >&
OpLogStatusRsp::oplog_infos() const {
  // @@protoc_insertion_point(field_list:masterproto.OpLogStatusRsp.oplog_infos)
  return oplog_infos_;
}

// -------------------------------------------------------------------

// ShowDbReq

// .cmongoproto.ReqHeader header = 1;
inline bool ShowDbReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ShowDbReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ShowDbReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowDbReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ShowDbReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ShowDbReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ShowDbReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ShowDbReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ShowDbReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowDbReq.header)
}

// string cluster_id = 2;
inline void ShowDbReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowDbReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowDbReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ShowDbReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ShowDbReq.cluster_id)
}
#if LANG_CXX11
inline void ShowDbReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ShowDbReq.cluster_id)
}
#endif
inline void ShowDbReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ShowDbReq.cluster_id)
}
inline void ShowDbReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ShowDbReq.cluster_id)
}
inline ::std::string* ShowDbReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ShowDbReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowDbReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ShowDbReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowDbReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowDbReq.cluster_id)
}

// -------------------------------------------------------------------

// ShowDbRsp

// .cmongoproto.ResHeader header = 1;
inline bool ShowDbRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ShowDbRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ShowDbRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowDbRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ShowDbRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ShowDbRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ShowDbRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ShowDbRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ShowDbRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowDbRsp.header)
}

// repeated string db_list = 2;
inline int ShowDbRsp::db_list_size() const {
  return db_list_.size();
}
inline void ShowDbRsp::clear_db_list() {
  db_list_.Clear();
}
inline const ::std::string& ShowDbRsp::db_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ShowDbRsp.db_list)
  return db_list_.Get(index);
}
inline ::std::string* ShowDbRsp::mutable_db_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ShowDbRsp.db_list)
  return db_list_.Mutable(index);
}
inline void ShowDbRsp::set_db_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.ShowDbRsp.db_list)
  db_list_.Mutable(index)->assign(value);
}
inline void ShowDbRsp::set_db_list(int index, const char* value) {
  db_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.ShowDbRsp.db_list)
}
inline void ShowDbRsp::set_db_list(int index, const char* value, size_t size) {
  db_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.ShowDbRsp.db_list)
}
inline ::std::string* ShowDbRsp::add_db_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.ShowDbRsp.db_list)
  return db_list_.Add();
}
inline void ShowDbRsp::add_db_list(const ::std::string& value) {
  db_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.ShowDbRsp.db_list)
}
inline void ShowDbRsp::add_db_list(const char* value) {
  db_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.ShowDbRsp.db_list)
}
inline void ShowDbRsp::add_db_list(const char* value, size_t size) {
  db_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.ShowDbRsp.db_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ShowDbRsp::db_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ShowDbRsp.db_list)
  return db_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ShowDbRsp::mutable_db_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ShowDbRsp.db_list)
  return &db_list_;
}

// -------------------------------------------------------------------

// Collection

// repeated string coll_list = 1;
inline int Collection::coll_list_size() const {
  return coll_list_.size();
}
inline void Collection::clear_coll_list() {
  coll_list_.Clear();
}
inline const ::std::string& Collection::coll_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.Collection.coll_list)
  return coll_list_.Get(index);
}
inline ::std::string* Collection::mutable_coll_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.Collection.coll_list)
  return coll_list_.Mutable(index);
}
inline void Collection::set_coll_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.Collection.coll_list)
  coll_list_.Mutable(index)->assign(value);
}
inline void Collection::set_coll_list(int index, const char* value) {
  coll_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.Collection.coll_list)
}
inline void Collection::set_coll_list(int index, const char* value, size_t size) {
  coll_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.Collection.coll_list)
}
inline ::std::string* Collection::add_coll_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.Collection.coll_list)
  return coll_list_.Add();
}
inline void Collection::add_coll_list(const ::std::string& value) {
  coll_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.Collection.coll_list)
}
inline void Collection::add_coll_list(const char* value) {
  coll_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.Collection.coll_list)
}
inline void Collection::add_coll_list(const char* value, size_t size) {
  coll_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.Collection.coll_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Collection::coll_list() const {
  // @@protoc_insertion_point(field_list:masterproto.Collection.coll_list)
  return coll_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Collection::mutable_coll_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.Collection.coll_list)
  return &coll_list_;
}

// -------------------------------------------------------------------

// ShowCollsReq

// .cmongoproto.ReqHeader header = 1;
inline bool ShowCollsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ShowCollsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ShowCollsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowCollsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ShowCollsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ShowCollsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ShowCollsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ShowCollsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ShowCollsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowCollsReq.header)
}

// string cluster_id = 2;
inline void ShowCollsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ShowCollsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowCollsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ShowCollsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ShowCollsReq.cluster_id)
}
#if LANG_CXX11
inline void ShowCollsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ShowCollsReq.cluster_id)
}
#endif
inline void ShowCollsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ShowCollsReq.cluster_id)
}
inline void ShowCollsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ShowCollsReq.cluster_id)
}
inline ::std::string* ShowCollsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ShowCollsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ShowCollsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ShowCollsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ShowCollsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowCollsReq.cluster_id)
}

// repeated string db_list = 3;
inline int ShowCollsReq::db_list_size() const {
  return db_list_.size();
}
inline void ShowCollsReq::clear_db_list() {
  db_list_.Clear();
}
inline const ::std::string& ShowCollsReq::db_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ShowCollsReq.db_list)
  return db_list_.Get(index);
}
inline ::std::string* ShowCollsReq::mutable_db_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.ShowCollsReq.db_list)
  return db_list_.Mutable(index);
}
inline void ShowCollsReq::set_db_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.ShowCollsReq.db_list)
  db_list_.Mutable(index)->assign(value);
}
inline void ShowCollsReq::set_db_list(int index, const char* value) {
  db_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.ShowCollsReq.db_list)
}
inline void ShowCollsReq::set_db_list(int index, const char* value, size_t size) {
  db_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.ShowCollsReq.db_list)
}
inline ::std::string* ShowCollsReq::add_db_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.ShowCollsReq.db_list)
  return db_list_.Add();
}
inline void ShowCollsReq::add_db_list(const ::std::string& value) {
  db_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.ShowCollsReq.db_list)
}
inline void ShowCollsReq::add_db_list(const char* value) {
  db_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.ShowCollsReq.db_list)
}
inline void ShowCollsReq::add_db_list(const char* value, size_t size) {
  db_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.ShowCollsReq.db_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
ShowCollsReq::db_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ShowCollsReq.db_list)
  return db_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
ShowCollsReq::mutable_db_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ShowCollsReq.db_list)
  return &db_list_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ShowCollsRsp

// .cmongoproto.ResHeader header = 1;
inline bool ShowCollsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ShowCollsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ShowCollsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ShowCollsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ShowCollsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ShowCollsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ShowCollsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ShowCollsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ShowCollsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ShowCollsRsp.header)
}

// map<string, .masterproto.Collection> database_list = 2;
inline int ShowCollsRsp::database_list_size() const {
  return database_list_.size();
}
inline void ShowCollsRsp::clear_database_list() {
  database_list_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::masterproto::Collection >&
ShowCollsRsp::database_list() const {
  // @@protoc_insertion_point(field_map:masterproto.ShowCollsRsp.database_list)
  return database_list_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::masterproto::Collection >*
ShowCollsRsp::mutable_database_list() {
  // @@protoc_insertion_point(field_mutable_map:masterproto.ShowCollsRsp.database_list)
  return database_list_.MutableMap();
}

// -------------------------------------------------------------------

// GetSlowQueryReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetSlowQueryReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetSlowQueryReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetSlowQueryReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetSlowQueryReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetSlowQueryReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetSlowQueryReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryReq.header)
}

// string begin_time = 2;
inline void GetSlowQueryReq::clear_begin_time() {
  begin_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSlowQueryReq::begin_time() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.begin_time)
  return begin_time_.GetNoArena();
}
inline void GetSlowQueryReq::set_begin_time(const ::std::string& value) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.begin_time)
}
#if LANG_CXX11
inline void GetSlowQueryReq::set_begin_time(::std::string&& value) {
  
  begin_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetSlowQueryReq.begin_time)
}
#endif
inline void GetSlowQueryReq::set_begin_time(const char* value) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetSlowQueryReq.begin_time)
}
inline void GetSlowQueryReq::set_begin_time(const char* value, size_t size) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetSlowQueryReq.begin_time)
}
inline ::std::string* GetSlowQueryReq::mutable_begin_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryReq.begin_time)
  return begin_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSlowQueryReq::release_begin_time() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryReq.begin_time)
  
  return begin_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSlowQueryReq::set_allocated_begin_time(::std::string* begin_time) {
  if (begin_time != NULL) {
    
  } else {
    
  }
  begin_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begin_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryReq.begin_time)
}

// string end_time = 3;
inline void GetSlowQueryReq::clear_end_time() {
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSlowQueryReq::end_time() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.end_time)
  return end_time_.GetNoArena();
}
inline void GetSlowQueryReq::set_end_time(const ::std::string& value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.end_time)
}
#if LANG_CXX11
inline void GetSlowQueryReq::set_end_time(::std::string&& value) {
  
  end_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetSlowQueryReq.end_time)
}
#endif
inline void GetSlowQueryReq::set_end_time(const char* value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetSlowQueryReq.end_time)
}
inline void GetSlowQueryReq::set_end_time(const char* value, size_t size) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetSlowQueryReq.end_time)
}
inline ::std::string* GetSlowQueryReq::mutable_end_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryReq.end_time)
  return end_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSlowQueryReq::release_end_time() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryReq.end_time)
  
  return end_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSlowQueryReq::set_allocated_end_time(::std::string* end_time) {
  if (end_time != NULL) {
    
  } else {
    
  }
  end_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryReq.end_time)
}

// string cluster_id = 4;
inline void GetSlowQueryReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSlowQueryReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetSlowQueryReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.cluster_id)
}
#if LANG_CXX11
inline void GetSlowQueryReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetSlowQueryReq.cluster_id)
}
#endif
inline void GetSlowQueryReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetSlowQueryReq.cluster_id)
}
inline void GetSlowQueryReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetSlowQueryReq.cluster_id)
}
inline ::std::string* GetSlowQueryReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSlowQueryReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSlowQueryReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryReq.cluster_id)
}

// int32 slow_ms = 5;
inline void GetSlowQueryReq::clear_slow_ms() {
  slow_ms_ = 0;
}
inline ::google::protobuf::int32 GetSlowQueryReq::slow_ms() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.slow_ms)
  return slow_ms_;
}
inline void GetSlowQueryReq::set_slow_ms(::google::protobuf::int32 value) {
  
  slow_ms_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.slow_ms)
}

// int32 start = 6;
inline void GetSlowQueryReq::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 GetSlowQueryReq::start() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.start)
  return start_;
}
inline void GetSlowQueryReq::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.start)
}

// int32 limit = 7;
inline void GetSlowQueryReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 GetSlowQueryReq::limit() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryReq.limit)
  return limit_;
}
inline void GetSlowQueryReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryReq.limit)
}

// -------------------------------------------------------------------

// SlowQueryInfo

// string detail = 1;
inline void SlowQueryInfo::clear_detail() {
  detail_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SlowQueryInfo::detail() const {
  // @@protoc_insertion_point(field_get:masterproto.SlowQueryInfo.detail)
  return detail_.GetNoArena();
}
inline void SlowQueryInfo::set_detail(const ::std::string& value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SlowQueryInfo.detail)
}
#if LANG_CXX11
inline void SlowQueryInfo::set_detail(::std::string&& value) {
  
  detail_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SlowQueryInfo.detail)
}
#endif
inline void SlowQueryInfo::set_detail(const char* value) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SlowQueryInfo.detail)
}
inline void SlowQueryInfo::set_detail(const char* value, size_t size) {
  
  detail_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SlowQueryInfo.detail)
}
inline ::std::string* SlowQueryInfo::mutable_detail() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SlowQueryInfo.detail)
  return detail_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SlowQueryInfo::release_detail() {
  // @@protoc_insertion_point(field_release:masterproto.SlowQueryInfo.detail)
  
  return detail_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SlowQueryInfo::set_allocated_detail(::std::string* detail) {
  if (detail != NULL) {
    
  } else {
    
  }
  detail_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detail);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SlowQueryInfo.detail)
}

// int32 avg_time = 2;
inline void SlowQueryInfo::clear_avg_time() {
  avg_time_ = 0;
}
inline ::google::protobuf::int32 SlowQueryInfo::avg_time() const {
  // @@protoc_insertion_point(field_get:masterproto.SlowQueryInfo.avg_time)
  return avg_time_;
}
inline void SlowQueryInfo::set_avg_time(::google::protobuf::int32 value) {
  
  avg_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SlowQueryInfo.avg_time)
}

// int32 count = 3;
inline void SlowQueryInfo::clear_count() {
  count_ = 0;
}
inline ::google::protobuf::int32 SlowQueryInfo::count() const {
  // @@protoc_insertion_point(field_get:masterproto.SlowQueryInfo.count)
  return count_;
}
inline void SlowQueryInfo::set_count(::google::protobuf::int32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SlowQueryInfo.count)
}

// int32 max_time = 4;
inline void SlowQueryInfo::clear_max_time() {
  max_time_ = 0;
}
inline ::google::protobuf::int32 SlowQueryInfo::max_time() const {
  // @@protoc_insertion_point(field_get:masterproto.SlowQueryInfo.max_time)
  return max_time_;
}
inline void SlowQueryInfo::set_max_time(::google::protobuf::int32 value) {
  
  max_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SlowQueryInfo.max_time)
}

// -------------------------------------------------------------------

// GetSlowQueryRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetSlowQueryRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetSlowQueryRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetSlowQueryRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetSlowQueryRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetSlowQueryRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetSlowQueryRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryRsp.header)
}

// string cluster_id = 2;
inline void GetSlowQueryRsp::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetSlowQueryRsp::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryRsp.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetSlowQueryRsp::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryRsp.cluster_id)
}
#if LANG_CXX11
inline void GetSlowQueryRsp::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetSlowQueryRsp.cluster_id)
}
#endif
inline void GetSlowQueryRsp::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetSlowQueryRsp.cluster_id)
}
inline void GetSlowQueryRsp::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetSlowQueryRsp.cluster_id)
}
inline ::std::string* GetSlowQueryRsp::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryRsp.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetSlowQueryRsp::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetSlowQueryRsp.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetSlowQueryRsp::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetSlowQueryRsp.cluster_id)
}

// int64 count = 3;
inline void GetSlowQueryRsp::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetSlowQueryRsp::count() const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryRsp.count)
  return count_;
}
inline void GetSlowQueryRsp::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryRsp.count)
}

// repeated string slow_query = 4;
inline int GetSlowQueryRsp::slow_query_size() const {
  return slow_query_.size();
}
inline void GetSlowQueryRsp::clear_slow_query() {
  slow_query_.Clear();
}
inline const ::std::string& GetSlowQueryRsp::slow_query(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GetSlowQueryRsp.slow_query)
  return slow_query_.Get(index);
}
inline ::std::string* GetSlowQueryRsp::mutable_slow_query(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GetSlowQueryRsp.slow_query)
  return slow_query_.Mutable(index);
}
inline void GetSlowQueryRsp::set_slow_query(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.GetSlowQueryRsp.slow_query)
  slow_query_.Mutable(index)->assign(value);
}
inline void GetSlowQueryRsp::set_slow_query(int index, const char* value) {
  slow_query_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.GetSlowQueryRsp.slow_query)
}
inline void GetSlowQueryRsp::set_slow_query(int index, const char* value, size_t size) {
  slow_query_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetSlowQueryRsp.slow_query)
}
inline ::std::string* GetSlowQueryRsp::add_slow_query() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.GetSlowQueryRsp.slow_query)
  return slow_query_.Add();
}
inline void GetSlowQueryRsp::add_slow_query(const ::std::string& value) {
  slow_query_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.GetSlowQueryRsp.slow_query)
}
inline void GetSlowQueryRsp::add_slow_query(const char* value) {
  slow_query_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.GetSlowQueryRsp.slow_query)
}
inline void GetSlowQueryRsp::add_slow_query(const char* value, size_t size) {
  slow_query_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.GetSlowQueryRsp.slow_query)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
GetSlowQueryRsp::slow_query() const {
  // @@protoc_insertion_point(field_list:masterproto.GetSlowQueryRsp.slow_query)
  return slow_query_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
GetSlowQueryRsp::mutable_slow_query() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GetSlowQueryRsp.slow_query)
  return &slow_query_;
}

// -------------------------------------------------------------------

// QrySlowInfoReq

// .cmongoproto.ReqHeader header = 1;
inline bool QrySlowInfoReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QrySlowInfoReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& QrySlowInfoReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* QrySlowInfoReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* QrySlowInfoReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QrySlowInfoReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoReq.header)
}

// string begin_time = 2;
inline void QrySlowInfoReq::clear_begin_time() {
  begin_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QrySlowInfoReq::begin_time() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.begin_time)
  return begin_time_.GetNoArena();
}
inline void QrySlowInfoReq::set_begin_time(const ::std::string& value) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.begin_time)
}
#if LANG_CXX11
inline void QrySlowInfoReq::set_begin_time(::std::string&& value) {
  
  begin_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QrySlowInfoReq.begin_time)
}
#endif
inline void QrySlowInfoReq::set_begin_time(const char* value) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QrySlowInfoReq.begin_time)
}
inline void QrySlowInfoReq::set_begin_time(const char* value, size_t size) {
  
  begin_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QrySlowInfoReq.begin_time)
}
inline ::std::string* QrySlowInfoReq::mutable_begin_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoReq.begin_time)
  return begin_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QrySlowInfoReq::release_begin_time() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoReq.begin_time)
  
  return begin_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QrySlowInfoReq::set_allocated_begin_time(::std::string* begin_time) {
  if (begin_time != NULL) {
    
  } else {
    
  }
  begin_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), begin_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoReq.begin_time)
}

// string end_time = 3;
inline void QrySlowInfoReq::clear_end_time() {
  end_time_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QrySlowInfoReq::end_time() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.end_time)
  return end_time_.GetNoArena();
}
inline void QrySlowInfoReq::set_end_time(const ::std::string& value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.end_time)
}
#if LANG_CXX11
inline void QrySlowInfoReq::set_end_time(::std::string&& value) {
  
  end_time_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QrySlowInfoReq.end_time)
}
#endif
inline void QrySlowInfoReq::set_end_time(const char* value) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QrySlowInfoReq.end_time)
}
inline void QrySlowInfoReq::set_end_time(const char* value, size_t size) {
  
  end_time_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QrySlowInfoReq.end_time)
}
inline ::std::string* QrySlowInfoReq::mutable_end_time() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoReq.end_time)
  return end_time_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QrySlowInfoReq::release_end_time() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoReq.end_time)
  
  return end_time_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QrySlowInfoReq::set_allocated_end_time(::std::string* end_time) {
  if (end_time != NULL) {
    
  } else {
    
  }
  end_time_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), end_time);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoReq.end_time)
}

// string cluster_id = 4;
inline void QrySlowInfoReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QrySlowInfoReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void QrySlowInfoReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.cluster_id)
}
#if LANG_CXX11
inline void QrySlowInfoReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QrySlowInfoReq.cluster_id)
}
#endif
inline void QrySlowInfoReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QrySlowInfoReq.cluster_id)
}
inline void QrySlowInfoReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QrySlowInfoReq.cluster_id)
}
inline ::std::string* QrySlowInfoReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QrySlowInfoReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QrySlowInfoReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoReq.cluster_id)
}

// int32 slow_ms = 5;
inline void QrySlowInfoReq::clear_slow_ms() {
  slow_ms_ = 0;
}
inline ::google::protobuf::int32 QrySlowInfoReq::slow_ms() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.slow_ms)
  return slow_ms_;
}
inline void QrySlowInfoReq::set_slow_ms(::google::protobuf::int32 value) {
  
  slow_ms_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.slow_ms)
}

// int32 start = 6;
inline void QrySlowInfoReq::clear_start() {
  start_ = 0;
}
inline ::google::protobuf::int32 QrySlowInfoReq::start() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.start)
  return start_;
}
inline void QrySlowInfoReq::set_start(::google::protobuf::int32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.start)
}

// int32 limit = 7;
inline void QrySlowInfoReq::clear_limit() {
  limit_ = 0;
}
inline ::google::protobuf::int32 QrySlowInfoReq::limit() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoReq.limit)
  return limit_;
}
inline void QrySlowInfoReq::set_limit(::google::protobuf::int32 value) {
  
  limit_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoReq.limit)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// QrySlowInfoRsp

// .cmongoproto.ResHeader header = 1;
inline bool QrySlowInfoRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QrySlowInfoRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& QrySlowInfoRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* QrySlowInfoRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* QrySlowInfoRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QrySlowInfoRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoRsp.header)
}

// string cluster_id = 2;
inline void QrySlowInfoRsp::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QrySlowInfoRsp::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoRsp.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void QrySlowInfoRsp::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoRsp.cluster_id)
}
#if LANG_CXX11
inline void QrySlowInfoRsp::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QrySlowInfoRsp.cluster_id)
}
#endif
inline void QrySlowInfoRsp::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QrySlowInfoRsp.cluster_id)
}
inline void QrySlowInfoRsp::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QrySlowInfoRsp.cluster_id)
}
inline ::std::string* QrySlowInfoRsp::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QrySlowInfoRsp.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QrySlowInfoRsp::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.QrySlowInfoRsp.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QrySlowInfoRsp::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QrySlowInfoRsp.cluster_id)
}

// int64 count = 3;
inline void QrySlowInfoRsp::clear_count() {
  count_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 QrySlowInfoRsp::count() const {
  // @@protoc_insertion_point(field_get:masterproto.QrySlowInfoRsp.count)
  return count_;
}
inline void QrySlowInfoRsp::set_count(::google::protobuf::int64 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:masterproto.QrySlowInfoRsp.count)
}

// map<string, .masterproto.SlowQueryInfo> slow_qmap = 4;
inline int QrySlowInfoRsp::slow_qmap_size() const {
  return slow_qmap_.size();
}
inline void QrySlowInfoRsp::clear_slow_qmap() {
  slow_qmap_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::masterproto::SlowQueryInfo >&
QrySlowInfoRsp::slow_qmap() const {
  // @@protoc_insertion_point(field_map:masterproto.QrySlowInfoRsp.slow_qmap)
  return slow_qmap_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::masterproto::SlowQueryInfo >*
QrySlowInfoRsp::mutable_slow_qmap() {
  // @@protoc_insertion_point(field_mutable_map:masterproto.QrySlowInfoRsp.slow_qmap)
  return slow_qmap_.MutableMap();
}

// -------------------------------------------------------------------

// AuthRole

// string ns = 1;
inline void AuthRole::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthRole::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.AuthRole.ns)
  return ns_.GetNoArena();
}
inline void AuthRole::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AuthRole.ns)
}
#if LANG_CXX11
inline void AuthRole::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AuthRole.ns)
}
#endif
inline void AuthRole::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AuthRole.ns)
}
inline void AuthRole::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AuthRole.ns)
}
inline ::std::string* AuthRole::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AuthRole.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthRole::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.AuthRole.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthRole::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AuthRole.ns)
}

// .masterproto.AuthMask mask = 2;
inline void AuthRole::clear_mask() {
  mask_ = 0;
}
inline ::masterproto::AuthMask AuthRole::mask() const {
  // @@protoc_insertion_point(field_get:masterproto.AuthRole.mask)
  return static_cast< ::masterproto::AuthMask >(mask_);
}
inline void AuthRole::set_mask(::masterproto::AuthMask value) {
  
  mask_ = value;
  // @@protoc_insertion_point(field_set:masterproto.AuthRole.mask)
}

// -------------------------------------------------------------------

// AuthEntry

// string user = 1;
inline void AuthEntry::clear_user() {
  user_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AuthEntry::user() const {
  // @@protoc_insertion_point(field_get:masterproto.AuthEntry.user)
  return user_.GetNoArena();
}
inline void AuthEntry::set_user(const ::std::string& value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.AuthEntry.user)
}
#if LANG_CXX11
inline void AuthEntry::set_user(::std::string&& value) {
  
  user_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.AuthEntry.user)
}
#endif
inline void AuthEntry::set_user(const char* value) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.AuthEntry.user)
}
inline void AuthEntry::set_user(const char* value, size_t size) {
  
  user_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.AuthEntry.user)
}
inline ::std::string* AuthEntry::mutable_user() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.AuthEntry.user)
  return user_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AuthEntry::release_user() {
  // @@protoc_insertion_point(field_release:masterproto.AuthEntry.user)
  
  return user_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AuthEntry::set_allocated_user(::std::string* user) {
  if (user != NULL) {
    
  } else {
    
  }
  user_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user);
  // @@protoc_insertion_point(field_set_allocated:masterproto.AuthEntry.user)
}

// repeated .masterproto.AuthRole roles = 2;
inline int AuthEntry::roles_size() const {
  return roles_.size();
}
inline void AuthEntry::clear_roles() {
  roles_.Clear();
}
inline const ::masterproto::AuthRole& AuthEntry::roles(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.AuthEntry.roles)
  return roles_.Get(index);
}
inline ::masterproto::AuthRole* AuthEntry::mutable_roles(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.AuthEntry.roles)
  return roles_.Mutable(index);
}
inline ::masterproto::AuthRole* AuthEntry::add_roles() {
  // @@protoc_insertion_point(field_add:masterproto.AuthEntry.roles)
  return roles_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
AuthEntry::mutable_roles() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.AuthEntry.roles)
  return &roles_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
AuthEntry::roles() const {
  // @@protoc_insertion_point(field_list:masterproto.AuthEntry.roles)
  return roles_;
}

// -------------------------------------------------------------------

// CreateUserReq

// .cmongoproto.ReqHeader header = 1;
inline bool CreateUserReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateUserReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& CreateUserReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* CreateUserReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* CreateUserReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateUserReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateUserReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateUserReq.header)
}

// string cluster_id = 2;
inline void CreateUserReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateUserReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CreateUserReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateUserReq.cluster_id)
}
#if LANG_CXX11
inline void CreateUserReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateUserReq.cluster_id)
}
#endif
inline void CreateUserReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateUserReq.cluster_id)
}
inline void CreateUserReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateUserReq.cluster_id)
}
inline ::std::string* CreateUserReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateUserReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.CreateUserReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateUserReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateUserReq.cluster_id)
}

// string user_name = 3;
inline void CreateUserReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateUserReq::user_name() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserReq.user_name)
  return user_name_.GetNoArena();
}
inline void CreateUserReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateUserReq.user_name)
}
#if LANG_CXX11
inline void CreateUserReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateUserReq.user_name)
}
#endif
inline void CreateUserReq::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateUserReq.user_name)
}
inline void CreateUserReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateUserReq.user_name)
}
inline ::std::string* CreateUserReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateUserReq::release_user_name() {
  // @@protoc_insertion_point(field_release:masterproto.CreateUserReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateUserReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateUserReq.user_name)
}

// string password = 4;
inline void CreateUserReq::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateUserReq::password() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserReq.password)
  return password_.GetNoArena();
}
inline void CreateUserReq::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateUserReq.password)
}
#if LANG_CXX11
inline void CreateUserReq::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateUserReq.password)
}
#endif
inline void CreateUserReq::set_password(const char* value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateUserReq.password)
}
inline void CreateUserReq::set_password(const char* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateUserReq.password)
}
inline ::std::string* CreateUserReq::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserReq.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateUserReq::release_password() {
  // @@protoc_insertion_point(field_release:masterproto.CreateUserReq.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateUserReq::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateUserReq.password)
}

// repeated .masterproto.AuthRole auth_role = 5;
inline int CreateUserReq::auth_role_size() const {
  return auth_role_.size();
}
inline void CreateUserReq::clear_auth_role() {
  auth_role_.Clear();
}
inline const ::masterproto::AuthRole& CreateUserReq::auth_role(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserReq.auth_role)
  return auth_role_.Get(index);
}
inline ::masterproto::AuthRole* CreateUserReq::mutable_auth_role(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserReq.auth_role)
  return auth_role_.Mutable(index);
}
inline ::masterproto::AuthRole* CreateUserReq::add_auth_role() {
  // @@protoc_insertion_point(field_add:masterproto.CreateUserReq.auth_role)
  return auth_role_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
CreateUserReq::mutable_auth_role() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.CreateUserReq.auth_role)
  return &auth_role_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
CreateUserReq::auth_role() const {
  // @@protoc_insertion_point(field_list:masterproto.CreateUserReq.auth_role)
  return auth_role_;
}

// -------------------------------------------------------------------

// CreateUserRsp

// .cmongoproto.ResHeader header = 1;
inline bool CreateUserRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateUserRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& CreateUserRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateUserRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* CreateUserRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateUserRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* CreateUserRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateUserRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateUserRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateUserRsp.header)
}

// -------------------------------------------------------------------

// QueryUserListReq

// .cmongoproto.ReqHeader header = 1;
inline bool QueryUserListReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryUserListReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& QueryUserListReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryUserListReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* QueryUserListReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryUserListReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* QueryUserListReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryUserListReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryUserListReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryUserListReq.header)
}

// string cluster_id = 2;
inline void QueryUserListReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& QueryUserListReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryUserListReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void QueryUserListReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.QueryUserListReq.cluster_id)
}
#if LANG_CXX11
inline void QueryUserListReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.QueryUserListReq.cluster_id)
}
#endif
inline void QueryUserListReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.QueryUserListReq.cluster_id)
}
inline void QueryUserListReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.QueryUserListReq.cluster_id)
}
inline ::std::string* QueryUserListReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.QueryUserListReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* QueryUserListReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.QueryUserListReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void QueryUserListReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryUserListReq.cluster_id)
}

// -------------------------------------------------------------------

// QueryUserListRsp

// .cmongoproto.ResHeader header = 1;
inline bool QueryUserListRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void QueryUserListRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& QueryUserListRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.QueryUserListRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* QueryUserListRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.QueryUserListRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* QueryUserListRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.QueryUserListRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void QueryUserListRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.QueryUserListRsp.header)
}

// repeated .masterproto.AuthEntry auth_list = 2;
inline int QueryUserListRsp::auth_list_size() const {
  return auth_list_.size();
}
inline void QueryUserListRsp::clear_auth_list() {
  auth_list_.Clear();
}
inline const ::masterproto::AuthEntry& QueryUserListRsp::auth_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.QueryUserListRsp.auth_list)
  return auth_list_.Get(index);
}
inline ::masterproto::AuthEntry* QueryUserListRsp::mutable_auth_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.QueryUserListRsp.auth_list)
  return auth_list_.Mutable(index);
}
inline ::masterproto::AuthEntry* QueryUserListRsp::add_auth_list() {
  // @@protoc_insertion_point(field_add:masterproto.QueryUserListRsp.auth_list)
  return auth_list_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::AuthEntry >*
QueryUserListRsp::mutable_auth_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.QueryUserListRsp.auth_list)
  return &auth_list_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthEntry >&
QueryUserListRsp::auth_list() const {
  // @@protoc_insertion_point(field_list:masterproto.QueryUserListRsp.auth_list)
  return auth_list_;
}

// -------------------------------------------------------------------

// DeleteUserReq

// .cmongoproto.ReqHeader header = 1;
inline bool DeleteUserReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DeleteUserReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DeleteUserReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DeleteUserReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DeleteUserReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DeleteUserReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DeleteUserReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DeleteUserReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DeleteUserReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DeleteUserReq.header)
}

// string cluster_id = 2;
inline void DeleteUserReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteUserReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DeleteUserReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DeleteUserReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DeleteUserReq.cluster_id)
}
#if LANG_CXX11
inline void DeleteUserReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DeleteUserReq.cluster_id)
}
#endif
inline void DeleteUserReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DeleteUserReq.cluster_id)
}
inline void DeleteUserReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DeleteUserReq.cluster_id)
}
inline ::std::string* DeleteUserReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DeleteUserReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteUserReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DeleteUserReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteUserReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DeleteUserReq.cluster_id)
}

// string user_name = 3;
inline void DeleteUserReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DeleteUserReq::user_name() const {
  // @@protoc_insertion_point(field_get:masterproto.DeleteUserReq.user_name)
  return user_name_.GetNoArena();
}
inline void DeleteUserReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DeleteUserReq.user_name)
}
#if LANG_CXX11
inline void DeleteUserReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DeleteUserReq.user_name)
}
#endif
inline void DeleteUserReq::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DeleteUserReq.user_name)
}
inline void DeleteUserReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DeleteUserReq.user_name)
}
inline ::std::string* DeleteUserReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DeleteUserReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeleteUserReq::release_user_name() {
  // @@protoc_insertion_point(field_release:masterproto.DeleteUserReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeleteUserReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DeleteUserReq.user_name)
}

// -------------------------------------------------------------------

// DeleteUserRsp

// .cmongoproto.ResHeader header = 1;
inline bool DeleteUserRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DeleteUserRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DeleteUserRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DeleteUserRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DeleteUserRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DeleteUserRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DeleteUserRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DeleteUserRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DeleteUserRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DeleteUserRsp.header)
}

// -------------------------------------------------------------------

// SetUserAuthReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetUserAuthReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetUserAuthReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetUserAuthReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetUserAuthReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetUserAuthReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetUserAuthReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetUserAuthReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetUserAuthReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetUserAuthReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetUserAuthReq.header)
}

// string cluster_id = 2;
inline void SetUserAuthReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetUserAuthReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetUserAuthReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void SetUserAuthReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetUserAuthReq.cluster_id)
}
#if LANG_CXX11
inline void SetUserAuthReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetUserAuthReq.cluster_id)
}
#endif
inline void SetUserAuthReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetUserAuthReq.cluster_id)
}
inline void SetUserAuthReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetUserAuthReq.cluster_id)
}
inline ::std::string* SetUserAuthReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetUserAuthReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetUserAuthReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.SetUserAuthReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetUserAuthReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetUserAuthReq.cluster_id)
}

// string user_name = 3;
inline void SetUserAuthReq::clear_user_name() {
  user_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetUserAuthReq::user_name() const {
  // @@protoc_insertion_point(field_get:masterproto.SetUserAuthReq.user_name)
  return user_name_.GetNoArena();
}
inline void SetUserAuthReq::set_user_name(const ::std::string& value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetUserAuthReq.user_name)
}
#if LANG_CXX11
inline void SetUserAuthReq::set_user_name(::std::string&& value) {
  
  user_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetUserAuthReq.user_name)
}
#endif
inline void SetUserAuthReq::set_user_name(const char* value) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetUserAuthReq.user_name)
}
inline void SetUserAuthReq::set_user_name(const char* value, size_t size) {
  
  user_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetUserAuthReq.user_name)
}
inline ::std::string* SetUserAuthReq::mutable_user_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetUserAuthReq.user_name)
  return user_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetUserAuthReq::release_user_name() {
  // @@protoc_insertion_point(field_release:masterproto.SetUserAuthReq.user_name)
  
  return user_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetUserAuthReq::set_allocated_user_name(::std::string* user_name) {
  if (user_name != NULL) {
    
  } else {
    
  }
  user_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), user_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetUserAuthReq.user_name)
}

// repeated .masterproto.AuthRole auth_role = 4;
inline int SetUserAuthReq::auth_role_size() const {
  return auth_role_.size();
}
inline void SetUserAuthReq::clear_auth_role() {
  auth_role_.Clear();
}
inline const ::masterproto::AuthRole& SetUserAuthReq::auth_role(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.SetUserAuthReq.auth_role)
  return auth_role_.Get(index);
}
inline ::masterproto::AuthRole* SetUserAuthReq::mutable_auth_role(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.SetUserAuthReq.auth_role)
  return auth_role_.Mutable(index);
}
inline ::masterproto::AuthRole* SetUserAuthReq::add_auth_role() {
  // @@protoc_insertion_point(field_add:masterproto.SetUserAuthReq.auth_role)
  return auth_role_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >*
SetUserAuthReq::mutable_auth_role() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.SetUserAuthReq.auth_role)
  return &auth_role_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::AuthRole >&
SetUserAuthReq::auth_role() const {
  // @@protoc_insertion_point(field_list:masterproto.SetUserAuthReq.auth_role)
  return auth_role_;
}

// -------------------------------------------------------------------

// SetUserAuthRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetUserAuthRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetUserAuthRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetUserAuthRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetUserAuthRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetUserAuthRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetUserAuthRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetUserAuthRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetUserAuthRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetUserAuthRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetUserAuthRsp.header)
}

// -------------------------------------------------------------------

// CreateTableReq

// .cmongoproto.ReqHeader header = 1;
inline bool CreateTableReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateTableReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& CreateTableReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* CreateTableReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* CreateTableReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateTableReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateTableReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateTableReq.header)
}

// string cluster_id = 2;
inline void CreateTableReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CreateTableReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.cluster_id)
}
#if LANG_CXX11
inline void CreateTableReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateTableReq.cluster_id)
}
#endif
inline void CreateTableReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateTableReq.cluster_id)
}
inline void CreateTableReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateTableReq.cluster_id)
}
inline ::std::string* CreateTableReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.CreateTableReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateTableReq.cluster_id)
}

// string table_type = 3;
inline void CreateTableReq::clear_table_type() {
  table_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableReq::table_type() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.table_type)
  return table_type_.GetNoArena();
}
inline void CreateTableReq::set_table_type(const ::std::string& value) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.table_type)
}
#if LANG_CXX11
inline void CreateTableReq::set_table_type(::std::string&& value) {
  
  table_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateTableReq.table_type)
}
#endif
inline void CreateTableReq::set_table_type(const char* value) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateTableReq.table_type)
}
inline void CreateTableReq::set_table_type(const char* value, size_t size) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateTableReq.table_type)
}
inline ::std::string* CreateTableReq::mutable_table_type() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.table_type)
  return table_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableReq::release_table_type() {
  // @@protoc_insertion_point(field_release:masterproto.CreateTableReq.table_type)
  
  return table_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableReq::set_allocated_table_type(::std::string* table_type) {
  if (table_type != NULL) {
    
  } else {
    
  }
  table_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_type);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateTableReq.table_type)
}

// string namespace = 4;
inline void CreateTableReq::clear_namespace_() {
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateTableReq::namespace_() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.namespace)
  return namespace__.GetNoArena();
}
inline void CreateTableReq::set_namespace_(const ::std::string& value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.namespace)
}
#if LANG_CXX11
inline void CreateTableReq::set_namespace_(::std::string&& value) {
  
  namespace__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CreateTableReq.namespace)
}
#endif
inline void CreateTableReq::set_namespace_(const char* value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CreateTableReq.namespace)
}
inline void CreateTableReq::set_namespace_(const char* value, size_t size) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateTableReq.namespace)
}
inline ::std::string* CreateTableReq::mutable_namespace_() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.namespace)
  return namespace__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateTableReq::release_namespace_() {
  // @@protoc_insertion_point(field_release:masterproto.CreateTableReq.namespace)
  
  return namespace__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateTableReq::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace_ != NULL) {
    
  } else {
    
  }
  namespace__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateTableReq.namespace)
}

// repeated string shard_keys = 5;
inline int CreateTableReq::shard_keys_size() const {
  return shard_keys_.size();
}
inline void CreateTableReq::clear_shard_keys() {
  shard_keys_.Clear();
}
inline const ::std::string& CreateTableReq::shard_keys(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.shard_keys)
  return shard_keys_.Get(index);
}
inline ::std::string* CreateTableReq::mutable_shard_keys(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.shard_keys)
  return shard_keys_.Mutable(index);
}
inline void CreateTableReq::set_shard_keys(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.shard_keys)
  shard_keys_.Mutable(index)->assign(value);
}
inline void CreateTableReq::set_shard_keys(int index, const char* value) {
  shard_keys_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.CreateTableReq.shard_keys)
}
inline void CreateTableReq::set_shard_keys(int index, const char* value, size_t size) {
  shard_keys_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateTableReq.shard_keys)
}
inline ::std::string* CreateTableReq::add_shard_keys() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.CreateTableReq.shard_keys)
  return shard_keys_.Add();
}
inline void CreateTableReq::add_shard_keys(const ::std::string& value) {
  shard_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.CreateTableReq.shard_keys)
}
inline void CreateTableReq::add_shard_keys(const char* value) {
  shard_keys_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.CreateTableReq.shard_keys)
}
inline void CreateTableReq::add_shard_keys(const char* value, size_t size) {
  shard_keys_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.CreateTableReq.shard_keys)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateTableReq::shard_keys() const {
  // @@protoc_insertion_point(field_list:masterproto.CreateTableReq.shard_keys)
  return shard_keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateTableReq::mutable_shard_keys() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.CreateTableReq.shard_keys)
  return &shard_keys_;
}

// bool is_uniq_key = 6;
inline void CreateTableReq::clear_is_uniq_key() {
  is_uniq_key_ = false;
}
inline bool CreateTableReq::is_uniq_key() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.is_uniq_key)
  return is_uniq_key_;
}
inline void CreateTableReq::set_is_uniq_key(bool value) {
  
  is_uniq_key_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.is_uniq_key)
}

// repeated string shard_list = 7;
inline int CreateTableReq::shard_list_size() const {
  return shard_list_.size();
}
inline void CreateTableReq::clear_shard_list() {
  shard_list_.Clear();
}
inline const ::std::string& CreateTableReq::shard_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableReq.shard_list)
  return shard_list_.Get(index);
}
inline ::std::string* CreateTableReq::mutable_shard_list(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableReq.shard_list)
  return shard_list_.Mutable(index);
}
inline void CreateTableReq::set_shard_list(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.CreateTableReq.shard_list)
  shard_list_.Mutable(index)->assign(value);
}
inline void CreateTableReq::set_shard_list(int index, const char* value) {
  shard_list_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.CreateTableReq.shard_list)
}
inline void CreateTableReq::set_shard_list(int index, const char* value, size_t size) {
  shard_list_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.CreateTableReq.shard_list)
}
inline ::std::string* CreateTableReq::add_shard_list() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.CreateTableReq.shard_list)
  return shard_list_.Add();
}
inline void CreateTableReq::add_shard_list(const ::std::string& value) {
  shard_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.CreateTableReq.shard_list)
}
inline void CreateTableReq::add_shard_list(const char* value) {
  shard_list_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.CreateTableReq.shard_list)
}
inline void CreateTableReq::add_shard_list(const char* value, size_t size) {
  shard_list_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.CreateTableReq.shard_list)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
CreateTableReq::shard_list() const {
  // @@protoc_insertion_point(field_list:masterproto.CreateTableReq.shard_list)
  return shard_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
CreateTableReq::mutable_shard_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.CreateTableReq.shard_list)
  return &shard_list_;
}

// -------------------------------------------------------------------

// CreateTableRsp

// .cmongoproto.ResHeader header = 1;
inline bool CreateTableRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CreateTableRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& CreateTableRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CreateTableRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* CreateTableRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CreateTableRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* CreateTableRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CreateTableRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CreateTableRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CreateTableRsp.header)
}

// -------------------------------------------------------------------

// DropTableReq

// .cmongoproto.ReqHeader header = 1;
inline bool DropTableReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropTableReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DropTableReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropTableReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DropTableReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropTableReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DropTableReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropTableReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropTableReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropTableReq.header)
}

// string cluster_id = 2;
inline void DropTableReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropTableReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DropTableReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DropTableReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropTableReq.cluster_id)
}
#if LANG_CXX11
inline void DropTableReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropTableReq.cluster_id)
}
#endif
inline void DropTableReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropTableReq.cluster_id)
}
inline void DropTableReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropTableReq.cluster_id)
}
inline ::std::string* DropTableReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropTableReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropTableReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DropTableReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropTableReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropTableReq.cluster_id)
}

// string namespace = 3;
inline void DropTableReq::clear_namespace_() {
  namespace__.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropTableReq::namespace_() const {
  // @@protoc_insertion_point(field_get:masterproto.DropTableReq.namespace)
  return namespace__.GetNoArena();
}
inline void DropTableReq::set_namespace_(const ::std::string& value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropTableReq.namespace)
}
#if LANG_CXX11
inline void DropTableReq::set_namespace_(::std::string&& value) {
  
  namespace__.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropTableReq.namespace)
}
#endif
inline void DropTableReq::set_namespace_(const char* value) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropTableReq.namespace)
}
inline void DropTableReq::set_namespace_(const char* value, size_t size) {
  
  namespace__.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropTableReq.namespace)
}
inline ::std::string* DropTableReq::mutable_namespace_() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropTableReq.namespace)
  return namespace__.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropTableReq::release_namespace_() {
  // @@protoc_insertion_point(field_release:masterproto.DropTableReq.namespace)
  
  return namespace__.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropTableReq::set_allocated_namespace_(::std::string* namespace_) {
  if (namespace_ != NULL) {
    
  } else {
    
  }
  namespace__.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namespace_);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropTableReq.namespace)
}

// -------------------------------------------------------------------

// DropTableRsp

// .cmongoproto.ResHeader header = 1;
inline bool DropTableRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropTableRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DropTableRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropTableRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DropTableRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropTableRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DropTableRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropTableRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropTableRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropTableRsp.header)
}

// -------------------------------------------------------------------

// DropDatabaseReq

// .cmongoproto.ReqHeader header = 1;
inline bool DropDatabaseReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropDatabaseReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DropDatabaseReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropDatabaseReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DropDatabaseReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropDatabaseReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DropDatabaseReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropDatabaseReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropDatabaseReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropDatabaseReq.header)
}

// string cluster_id = 2;
inline void DropDatabaseReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropDatabaseReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DropDatabaseReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DropDatabaseReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropDatabaseReq.cluster_id)
}
#if LANG_CXX11
inline void DropDatabaseReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropDatabaseReq.cluster_id)
}
#endif
inline void DropDatabaseReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropDatabaseReq.cluster_id)
}
inline void DropDatabaseReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropDatabaseReq.cluster_id)
}
inline ::std::string* DropDatabaseReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropDatabaseReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropDatabaseReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DropDatabaseReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropDatabaseReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropDatabaseReq.cluster_id)
}

// string db_name = 3;
inline void DropDatabaseReq::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropDatabaseReq::db_name() const {
  // @@protoc_insertion_point(field_get:masterproto.DropDatabaseReq.db_name)
  return db_name_.GetNoArena();
}
inline void DropDatabaseReq::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropDatabaseReq.db_name)
}
#if LANG_CXX11
inline void DropDatabaseReq::set_db_name(::std::string&& value) {
  
  db_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropDatabaseReq.db_name)
}
#endif
inline void DropDatabaseReq::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropDatabaseReq.db_name)
}
inline void DropDatabaseReq::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropDatabaseReq.db_name)
}
inline ::std::string* DropDatabaseReq::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropDatabaseReq.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropDatabaseReq::release_db_name() {
  // @@protoc_insertion_point(field_release:masterproto.DropDatabaseReq.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropDatabaseReq::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropDatabaseReq.db_name)
}

// -------------------------------------------------------------------

// DropDatabaseRsp

// .cmongoproto.ResHeader header = 1;
inline bool DropDatabaseRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropDatabaseRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DropDatabaseRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropDatabaseRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DropDatabaseRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropDatabaseRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DropDatabaseRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropDatabaseRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropDatabaseRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropDatabaseRsp.header)
}

// -------------------------------------------------------------------

// EnsureIndexReq

// .cmongoproto.ReqHeader header = 1;
inline bool EnsureIndexReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void EnsureIndexReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& EnsureIndexReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* EnsureIndexReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* EnsureIndexReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.EnsureIndexReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void EnsureIndexReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.EnsureIndexReq.header)
}

// string cluster_id = 2;
inline void EnsureIndexReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnsureIndexReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void EnsureIndexReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.cluster_id)
}
#if LANG_CXX11
inline void EnsureIndexReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.EnsureIndexReq.cluster_id)
}
#endif
inline void EnsureIndexReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.EnsureIndexReq.cluster_id)
}
inline void EnsureIndexReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.EnsureIndexReq.cluster_id)
}
inline ::std::string* EnsureIndexReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnsureIndexReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.EnsureIndexReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnsureIndexReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.EnsureIndexReq.cluster_id)
}

// string ns = 3;
inline void EnsureIndexReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnsureIndexReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.ns)
  return ns_.GetNoArena();
}
inline void EnsureIndexReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.ns)
}
#if LANG_CXX11
inline void EnsureIndexReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.EnsureIndexReq.ns)
}
#endif
inline void EnsureIndexReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.EnsureIndexReq.ns)
}
inline void EnsureIndexReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.EnsureIndexReq.ns)
}
inline ::std::string* EnsureIndexReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnsureIndexReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.EnsureIndexReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnsureIndexReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.EnsureIndexReq.ns)
}

// repeated string key = 4;
inline int EnsureIndexReq::key_size() const {
  return key_.size();
}
inline void EnsureIndexReq::clear_key() {
  key_.Clear();
}
inline const ::std::string& EnsureIndexReq::key(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.key)
  return key_.Get(index);
}
inline ::std::string* EnsureIndexReq::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexReq.key)
  return key_.Mutable(index);
}
inline void EnsureIndexReq::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.key)
  key_.Mutable(index)->assign(value);
}
inline void EnsureIndexReq::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.EnsureIndexReq.key)
}
inline void EnsureIndexReq::set_key(int index, const char* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.EnsureIndexReq.key)
}
inline ::std::string* EnsureIndexReq::add_key() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.EnsureIndexReq.key)
  return key_.Add();
}
inline void EnsureIndexReq::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.EnsureIndexReq.key)
}
inline void EnsureIndexReq::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.EnsureIndexReq.key)
}
inline void EnsureIndexReq::add_key(const char* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.EnsureIndexReq.key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
EnsureIndexReq::key() const {
  // @@protoc_insertion_point(field_list:masterproto.EnsureIndexReq.key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
EnsureIndexReq::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.EnsureIndexReq.key)
  return &key_;
}

// bool unique = 5;
inline void EnsureIndexReq::clear_unique() {
  unique_ = false;
}
inline bool EnsureIndexReq::unique() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.unique)
  return unique_;
}
inline void EnsureIndexReq::set_unique(bool value) {
  
  unique_ = value;
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.unique)
}

// bool drop_dups = 6;
inline void EnsureIndexReq::clear_drop_dups() {
  drop_dups_ = false;
}
inline bool EnsureIndexReq::drop_dups() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.drop_dups)
  return drop_dups_;
}
inline void EnsureIndexReq::set_drop_dups(bool value) {
  
  drop_dups_ = value;
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.drop_dups)
}

// bool background = 7;
inline void EnsureIndexReq::clear_background() {
  background_ = false;
}
inline bool EnsureIndexReq::background() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.background)
  return background_;
}
inline void EnsureIndexReq::set_background(bool value) {
  
  background_ = value;
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.background)
}

// bool sparse = 8;
inline void EnsureIndexReq::clear_sparse() {
  sparse_ = false;
}
inline bool EnsureIndexReq::sparse() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.sparse)
  return sparse_;
}
inline void EnsureIndexReq::set_sparse(bool value) {
  
  sparse_ = value;
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.sparse)
}

// int32 expire_after = 9;
inline void EnsureIndexReq::clear_expire_after() {
  expire_after_ = 0;
}
inline ::google::protobuf::int32 EnsureIndexReq::expire_after() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.expire_after)
  return expire_after_;
}
inline void EnsureIndexReq::set_expire_after(::google::protobuf::int32 value) {
  
  expire_after_ = value;
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.expire_after)
}

// string name = 10;
inline void EnsureIndexReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EnsureIndexReq::name() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexReq.name)
  return name_.GetNoArena();
}
inline void EnsureIndexReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.EnsureIndexReq.name)
}
#if LANG_CXX11
inline void EnsureIndexReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.EnsureIndexReq.name)
}
#endif
inline void EnsureIndexReq::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.EnsureIndexReq.name)
}
inline void EnsureIndexReq::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.EnsureIndexReq.name)
}
inline ::std::string* EnsureIndexReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnsureIndexReq::release_name() {
  // @@protoc_insertion_point(field_release:masterproto.EnsureIndexReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnsureIndexReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.EnsureIndexReq.name)
}

// -------------------------------------------------------------------

// EnsureIndexRsp

// .cmongoproto.ResHeader header = 1;
inline bool EnsureIndexRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void EnsureIndexRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& EnsureIndexRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.EnsureIndexRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* EnsureIndexRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.EnsureIndexRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* EnsureIndexRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.EnsureIndexRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void EnsureIndexRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.EnsureIndexRsp.header)
}

// -------------------------------------------------------------------

// DropIndexReq

// .cmongoproto.ReqHeader header = 1;
inline bool DropIndexReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropIndexReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DropIndexReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DropIndexReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DropIndexReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropIndexReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexReq.header)
}

// string cluster_id = 2;
inline void DropIndexReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropIndexReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DropIndexReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropIndexReq.cluster_id)
}
#if LANG_CXX11
inline void DropIndexReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropIndexReq.cluster_id)
}
#endif
inline void DropIndexReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexReq.cluster_id)
}
inline void DropIndexReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexReq.cluster_id)
}
inline ::std::string* DropIndexReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropIndexReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropIndexReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexReq.cluster_id)
}

// string ns = 3;
inline void DropIndexReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropIndexReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexReq.ns)
  return ns_.GetNoArena();
}
inline void DropIndexReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropIndexReq.ns)
}
#if LANG_CXX11
inline void DropIndexReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropIndexReq.ns)
}
#endif
inline void DropIndexReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexReq.ns)
}
inline void DropIndexReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexReq.ns)
}
inline ::std::string* DropIndexReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropIndexReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropIndexReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexReq.ns)
}

// repeated string key = 4;
inline int DropIndexReq::key_size() const {
  return key_.size();
}
inline void DropIndexReq::clear_key() {
  key_.Clear();
}
inline const ::std::string& DropIndexReq::key(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexReq.key)
  return key_.Get(index);
}
inline ::std::string* DropIndexReq::mutable_key(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexReq.key)
  return key_.Mutable(index);
}
inline void DropIndexReq::set_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.DropIndexReq.key)
  key_.Mutable(index)->assign(value);
}
inline void DropIndexReq::set_key(int index, const char* value) {
  key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexReq.key)
}
inline void DropIndexReq::set_key(int index, const char* value, size_t size) {
  key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexReq.key)
}
inline ::std::string* DropIndexReq::add_key() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.DropIndexReq.key)
  return key_.Add();
}
inline void DropIndexReq::add_key(const ::std::string& value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.DropIndexReq.key)
}
inline void DropIndexReq::add_key(const char* value) {
  key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.DropIndexReq.key)
}
inline void DropIndexReq::add_key(const char* value, size_t size) {
  key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.DropIndexReq.key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DropIndexReq::key() const {
  // @@protoc_insertion_point(field_list:masterproto.DropIndexReq.key)
  return key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DropIndexReq::mutable_key() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.DropIndexReq.key)
  return &key_;
}

// -------------------------------------------------------------------

// DropIndexRsp

// .cmongoproto.ResHeader header = 1;
inline bool DropIndexRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropIndexRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DropIndexRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DropIndexRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DropIndexRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropIndexRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexRsp.header)
}

// -------------------------------------------------------------------

// DropIndexNameReq

// .cmongoproto.ReqHeader header = 1;
inline bool DropIndexNameReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropIndexNameReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DropIndexNameReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexNameReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DropIndexNameReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexNameReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DropIndexNameReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexNameReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropIndexNameReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexNameReq.header)
}

// string cluster_id = 2;
inline void DropIndexNameReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropIndexNameReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexNameReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DropIndexNameReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropIndexNameReq.cluster_id)
}
#if LANG_CXX11
inline void DropIndexNameReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropIndexNameReq.cluster_id)
}
#endif
inline void DropIndexNameReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexNameReq.cluster_id)
}
inline void DropIndexNameReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexNameReq.cluster_id)
}
inline ::std::string* DropIndexNameReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexNameReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropIndexNameReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexNameReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropIndexNameReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexNameReq.cluster_id)
}

// string ns = 3;
inline void DropIndexNameReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropIndexNameReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexNameReq.ns)
  return ns_.GetNoArena();
}
inline void DropIndexNameReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropIndexNameReq.ns)
}
#if LANG_CXX11
inline void DropIndexNameReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropIndexNameReq.ns)
}
#endif
inline void DropIndexNameReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexNameReq.ns)
}
inline void DropIndexNameReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexNameReq.ns)
}
inline ::std::string* DropIndexNameReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexNameReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropIndexNameReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexNameReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropIndexNameReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexNameReq.ns)
}

// string key = 4;
inline void DropIndexNameReq::clear_key() {
  key_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DropIndexNameReq::key() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexNameReq.key)
  return key_.GetNoArena();
}
inline void DropIndexNameReq::set_key(const ::std::string& value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DropIndexNameReq.key)
}
#if LANG_CXX11
inline void DropIndexNameReq::set_key(::std::string&& value) {
  
  key_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DropIndexNameReq.key)
}
#endif
inline void DropIndexNameReq::set_key(const char* value) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DropIndexNameReq.key)
}
inline void DropIndexNameReq::set_key(const char* value, size_t size) {
  
  key_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DropIndexNameReq.key)
}
inline ::std::string* DropIndexNameReq::mutable_key() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexNameReq.key)
  return key_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DropIndexNameReq::release_key() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexNameReq.key)
  
  return key_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DropIndexNameReq::set_allocated_key(::std::string* key) {
  if (key != NULL) {
    
  } else {
    
  }
  key_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), key);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexNameReq.key)
}

// -------------------------------------------------------------------

// DropIndexNameRsp

// .cmongoproto.ResHeader header = 1;
inline bool DropIndexNameRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DropIndexNameRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DropIndexNameRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DropIndexNameRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DropIndexNameRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DropIndexNameRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DropIndexNameRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DropIndexNameRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DropIndexNameRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DropIndexNameRsp.header)
}

// -------------------------------------------------------------------

// MigrateReq

// .cmongoproto.ReqHeader header = 1;
inline bool MigrateReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& MigrateReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* MigrateReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* MigrateReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.header)
}

// string cluster_id = 2;
inline void MigrateReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void MigrateReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.cluster_id)
}
#if LANG_CXX11
inline void MigrateReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateReq.cluster_id)
}
#endif
inline void MigrateReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateReq.cluster_id)
}
inline void MigrateReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateReq.cluster_id)
}
inline ::std::string* MigrateReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.cluster_id)
}

// string src_set_name = 3;
inline void MigrateReq::clear_src_set_name() {
  src_set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateReq::src_set_name() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.src_set_name)
  return src_set_name_.GetNoArena();
}
inline void MigrateReq::set_src_set_name(const ::std::string& value) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.src_set_name)
}
#if LANG_CXX11
inline void MigrateReq::set_src_set_name(::std::string&& value) {
  
  src_set_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateReq.src_set_name)
}
#endif
inline void MigrateReq::set_src_set_name(const char* value) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateReq.src_set_name)
}
inline void MigrateReq::set_src_set_name(const char* value, size_t size) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateReq.src_set_name)
}
inline ::std::string* MigrateReq::mutable_src_set_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.src_set_name)
  return src_set_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateReq::release_src_set_name() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.src_set_name)
  
  return src_set_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateReq::set_allocated_src_set_name(::std::string* src_set_name) {
  if (src_set_name != NULL) {
    
  } else {
    
  }
  src_set_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_set_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.src_set_name)
}

// string dst_set_name = 4;
inline void MigrateReq::clear_dst_set_name() {
  dst_set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateReq::dst_set_name() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.dst_set_name)
  return dst_set_name_.GetNoArena();
}
inline void MigrateReq::set_dst_set_name(const ::std::string& value) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.dst_set_name)
}
#if LANG_CXX11
inline void MigrateReq::set_dst_set_name(::std::string&& value) {
  
  dst_set_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateReq.dst_set_name)
}
#endif
inline void MigrateReq::set_dst_set_name(const char* value) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateReq.dst_set_name)
}
inline void MigrateReq::set_dst_set_name(const char* value, size_t size) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateReq.dst_set_name)
}
inline ::std::string* MigrateReq::mutable_dst_set_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.dst_set_name)
  return dst_set_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateReq::release_dst_set_name() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.dst_set_name)
  
  return dst_set_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateReq::set_allocated_dst_set_name(::std::string* dst_set_name) {
  if (dst_set_name != NULL) {
    
  } else {
    
  }
  dst_set_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_set_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.dst_set_name)
}

// string ns = 5;
inline void MigrateReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.ns)
  return ns_.GetNoArena();
}
inline void MigrateReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.ns)
}
#if LANG_CXX11
inline void MigrateReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateReq.ns)
}
#endif
inline void MigrateReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateReq.ns)
}
inline void MigrateReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateReq.ns)
}
inline ::std::string* MigrateReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.ns)
}

// string creator = 6;
inline void MigrateReq::clear_creator() {
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateReq::creator() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.creator)
  return creator_.GetNoArena();
}
inline void MigrateReq::set_creator(const ::std::string& value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.creator)
}
#if LANG_CXX11
inline void MigrateReq::set_creator(::std::string&& value) {
  
  creator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateReq.creator)
}
#endif
inline void MigrateReq::set_creator(const char* value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateReq.creator)
}
inline void MigrateReq::set_creator(const char* value, size_t size) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateReq.creator)
}
inline ::std::string* MigrateReq::mutable_creator() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateReq.creator)
  return creator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateReq::release_creator() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateReq.creator)
  
  return creator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateReq::set_allocated_creator(::std::string* creator) {
  if (creator != NULL) {
    
  } else {
    
  }
  creator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateReq.creator)
}

// repeated int32 chunk_list = 7;
inline int MigrateReq::chunk_list_size() const {
  return chunk_list_.size();
}
inline void MigrateReq::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 MigrateReq::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.chunk_list)
  return chunk_list_.Get(index);
}
inline void MigrateReq::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.chunk_list)
}
inline void MigrateReq::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.MigrateReq.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MigrateReq::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateReq.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MigrateReq::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateReq.chunk_list)
  return &chunk_list_;
}

// bool auto_clean = 8;
inline void MigrateReq::clear_auto_clean() {
  auto_clean_ = false;
}
inline bool MigrateReq::auto_clean() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateReq.auto_clean)
  return auto_clean_;
}
inline void MigrateReq::set_auto_clean(bool value) {
  
  auto_clean_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateReq.auto_clean)
}

// -------------------------------------------------------------------

// MigrateRsp

// .cmongoproto.ResHeader header = 1;
inline bool MigrateRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void MigrateRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& MigrateRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* MigrateRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* MigrateRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void MigrateRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateRsp.header)
}

// uint64 task_id = 2;
inline void MigrateRsp::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MigrateRsp::task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateRsp.task_id)
  return task_id_;
}
inline void MigrateRsp::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateRsp.task_id)
}

// -------------------------------------------------------------------

// CleanMigrateReq

// .cmongoproto.ReqHeader header = 1;
inline bool CleanMigrateReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CleanMigrateReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& CleanMigrateReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CleanMigrateReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* CleanMigrateReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CleanMigrateReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* CleanMigrateReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CleanMigrateReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CleanMigrateReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CleanMigrateReq.header)
}

// string cluster_id = 2;
inline void CleanMigrateReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CleanMigrateReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CleanMigrateReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void CleanMigrateReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CleanMigrateReq.cluster_id)
}
#if LANG_CXX11
inline void CleanMigrateReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CleanMigrateReq.cluster_id)
}
#endif
inline void CleanMigrateReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CleanMigrateReq.cluster_id)
}
inline void CleanMigrateReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CleanMigrateReq.cluster_id)
}
inline ::std::string* CleanMigrateReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CleanMigrateReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CleanMigrateReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.CleanMigrateReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanMigrateReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CleanMigrateReq.cluster_id)
}

// uint64 task_id = 3;
inline void CleanMigrateReq::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CleanMigrateReq::task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CleanMigrateReq.task_id)
  return task_id_;
}
inline void CleanMigrateReq::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.CleanMigrateReq.task_id)
}

// string sub_task_id = 4;
inline void CleanMigrateReq::clear_sub_task_id() {
  sub_task_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CleanMigrateReq::sub_task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.CleanMigrateReq.sub_task_id)
  return sub_task_id_.GetNoArena();
}
inline void CleanMigrateReq::set_sub_task_id(const ::std::string& value) {
  
  sub_task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.CleanMigrateReq.sub_task_id)
}
#if LANG_CXX11
inline void CleanMigrateReq::set_sub_task_id(::std::string&& value) {
  
  sub_task_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.CleanMigrateReq.sub_task_id)
}
#endif
inline void CleanMigrateReq::set_sub_task_id(const char* value) {
  
  sub_task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.CleanMigrateReq.sub_task_id)
}
inline void CleanMigrateReq::set_sub_task_id(const char* value, size_t size) {
  
  sub_task_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.CleanMigrateReq.sub_task_id)
}
inline ::std::string* CleanMigrateReq::mutable_sub_task_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.CleanMigrateReq.sub_task_id)
  return sub_task_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CleanMigrateReq::release_sub_task_id() {
  // @@protoc_insertion_point(field_release:masterproto.CleanMigrateReq.sub_task_id)
  
  return sub_task_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CleanMigrateReq::set_allocated_sub_task_id(::std::string* sub_task_id) {
  if (sub_task_id != NULL) {
    
  } else {
    
  }
  sub_task_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sub_task_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.CleanMigrateReq.sub_task_id)
}

// -------------------------------------------------------------------

// CleanMigrateRsp

// .cmongoproto.ResHeader header = 1;
inline bool CleanMigrateRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void CleanMigrateRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& CleanMigrateRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.CleanMigrateRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* CleanMigrateRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.CleanMigrateRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* CleanMigrateRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.CleanMigrateRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void CleanMigrateRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.CleanMigrateRsp.header)
}

// -------------------------------------------------------------------

// GetMigrateStatusReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetMigrateStatusReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetMigrateStatusReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetMigrateStatusReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetMigrateStatusReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetMigrateStatusReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetMigrateStatusReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetMigrateStatusReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetMigrateStatusReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetMigrateStatusReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetMigrateStatusReq.header)
}

// string cluster_id = 2;
inline void GetMigrateStatusReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetMigrateStatusReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetMigrateStatusReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetMigrateStatusReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetMigrateStatusReq.cluster_id)
}
#if LANG_CXX11
inline void GetMigrateStatusReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetMigrateStatusReq.cluster_id)
}
#endif
inline void GetMigrateStatusReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetMigrateStatusReq.cluster_id)
}
inline void GetMigrateStatusReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetMigrateStatusReq.cluster_id)
}
inline ::std::string* GetMigrateStatusReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetMigrateStatusReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetMigrateStatusReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetMigrateStatusReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetMigrateStatusReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetMigrateStatusReq.cluster_id)
}

// uint64 task_id = 3;
inline void GetMigrateStatusReq::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 GetMigrateStatusReq::task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetMigrateStatusReq.task_id)
  return task_id_;
}
inline void GetMigrateStatusReq::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetMigrateStatusReq.task_id)
}

// -------------------------------------------------------------------

// MigrateStatus

// string src_ip = 1;
inline void MigrateStatus::clear_src_ip() {
  src_ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::src_ip() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.src_ip)
  return src_ip_.GetNoArena();
}
inline void MigrateStatus::set_src_ip(const ::std::string& value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.src_ip)
}
#if LANG_CXX11
inline void MigrateStatus::set_src_ip(::std::string&& value) {
  
  src_ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.src_ip)
}
#endif
inline void MigrateStatus::set_src_ip(const char* value) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.src_ip)
}
inline void MigrateStatus::set_src_ip(const char* value, size_t size) {
  
  src_ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.src_ip)
}
inline ::std::string* MigrateStatus::mutable_src_ip() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.src_ip)
  return src_ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_src_ip() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.src_ip)
  
  return src_ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_src_ip(::std::string* src_ip) {
  if (src_ip != NULL) {
    
  } else {
    
  }
  src_ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_ip);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.src_ip)
}

// string src_set_name = 2;
inline void MigrateStatus::clear_src_set_name() {
  src_set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::src_set_name() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.src_set_name)
  return src_set_name_.GetNoArena();
}
inline void MigrateStatus::set_src_set_name(const ::std::string& value) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.src_set_name)
}
#if LANG_CXX11
inline void MigrateStatus::set_src_set_name(::std::string&& value) {
  
  src_set_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.src_set_name)
}
#endif
inline void MigrateStatus::set_src_set_name(const char* value) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.src_set_name)
}
inline void MigrateStatus::set_src_set_name(const char* value, size_t size) {
  
  src_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.src_set_name)
}
inline ::std::string* MigrateStatus::mutable_src_set_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.src_set_name)
  return src_set_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_src_set_name() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.src_set_name)
  
  return src_set_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_src_set_name(::std::string* src_set_name) {
  if (src_set_name != NULL) {
    
  } else {
    
  }
  src_set_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_set_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.src_set_name)
}

// string dst_set_name = 3;
inline void MigrateStatus::clear_dst_set_name() {
  dst_set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::dst_set_name() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.dst_set_name)
  return dst_set_name_.GetNoArena();
}
inline void MigrateStatus::set_dst_set_name(const ::std::string& value) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.dst_set_name)
}
#if LANG_CXX11
inline void MigrateStatus::set_dst_set_name(::std::string&& value) {
  
  dst_set_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.dst_set_name)
}
#endif
inline void MigrateStatus::set_dst_set_name(const char* value) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.dst_set_name)
}
inline void MigrateStatus::set_dst_set_name(const char* value, size_t size) {
  
  dst_set_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.dst_set_name)
}
inline ::std::string* MigrateStatus::mutable_dst_set_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.dst_set_name)
  return dst_set_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_dst_set_name() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.dst_set_name)
  
  return dst_set_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_dst_set_name(::std::string* dst_set_name) {
  if (dst_set_name != NULL) {
    
  } else {
    
  }
  dst_set_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_set_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.dst_set_name)
}

// repeated int32 chunk_list = 4;
inline int MigrateStatus::chunk_list_size() const {
  return chunk_list_.size();
}
inline void MigrateStatus::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 MigrateStatus::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.chunk_list)
  return chunk_list_.Get(index);
}
inline void MigrateStatus::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.chunk_list)
}
inline void MigrateStatus::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.MigrateStatus.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MigrateStatus::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateStatus.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MigrateStatus::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateStatus.chunk_list)
  return &chunk_list_;
}

// uint32 c_time = 5;
inline void MigrateStatus::clear_c_time() {
  c_time_ = 0u;
}
inline ::google::protobuf::uint32 MigrateStatus::c_time() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.c_time)
  return c_time_;
}
inline void MigrateStatus::set_c_time(::google::protobuf::uint32 value) {
  
  c_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.c_time)
}

// uint32 f_time = 6;
inline void MigrateStatus::clear_f_time() {
  f_time_ = 0u;
}
inline ::google::protobuf::uint32 MigrateStatus::f_time() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.f_time)
  return f_time_;
}
inline void MigrateStatus::set_f_time(::google::protobuf::uint32 value) {
  
  f_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.f_time)
}

// string ns = 7;
inline void MigrateStatus::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.ns)
  return ns_.GetNoArena();
}
inline void MigrateStatus::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.ns)
}
#if LANG_CXX11
inline void MigrateStatus::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.ns)
}
#endif
inline void MigrateStatus::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.ns)
}
inline void MigrateStatus::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.ns)
}
inline ::std::string* MigrateStatus::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.ns)
}

// string stage = 8;
inline void MigrateStatus::clear_stage() {
  stage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::stage() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.stage)
  return stage_.GetNoArena();
}
inline void MigrateStatus::set_stage(const ::std::string& value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.stage)
}
#if LANG_CXX11
inline void MigrateStatus::set_stage(::std::string&& value) {
  
  stage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.stage)
}
#endif
inline void MigrateStatus::set_stage(const char* value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.stage)
}
inline void MigrateStatus::set_stage(const char* value, size_t size) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.stage)
}
inline ::std::string* MigrateStatus::mutable_stage() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.stage)
  return stage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_stage() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.stage)
  
  return stage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_stage(::std::string* stage) {
  if (stage != NULL) {
    
  } else {
    
  }
  stage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stage);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.stage)
}

// string status = 9;
inline void MigrateStatus::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateStatus::status() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateStatus.status)
  return status_.GetNoArena();
}
inline void MigrateStatus::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateStatus.status)
}
#if LANG_CXX11
inline void MigrateStatus::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateStatus.status)
}
#endif
inline void MigrateStatus::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateStatus.status)
}
inline void MigrateStatus::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateStatus.status)
}
inline ::std::string* MigrateStatus::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateStatus.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateStatus::release_status() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateStatus.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateStatus::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateStatus.status)
}

// -------------------------------------------------------------------

// MigrateGroup

// uint64 task_id = 1;
inline void MigrateGroup::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MigrateGroup::task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateGroup.task_id)
  return task_id_;
}
inline void MigrateGroup::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateGroup.task_id)
}

// repeated string sub_task_id = 2;
inline int MigrateGroup::sub_task_id_size() const {
  return sub_task_id_.size();
}
inline void MigrateGroup::clear_sub_task_id() {
  sub_task_id_.Clear();
}
inline const ::std::string& MigrateGroup::sub_task_id(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateGroup.sub_task_id)
  return sub_task_id_.Get(index);
}
inline ::std::string* MigrateGroup::mutable_sub_task_id(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateGroup.sub_task_id)
  return sub_task_id_.Mutable(index);
}
inline void MigrateGroup::set_sub_task_id(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.MigrateGroup.sub_task_id)
  sub_task_id_.Mutable(index)->assign(value);
}
inline void MigrateGroup::set_sub_task_id(int index, const char* value) {
  sub_task_id_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateGroup.sub_task_id)
}
inline void MigrateGroup::set_sub_task_id(int index, const char* value, size_t size) {
  sub_task_id_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateGroup.sub_task_id)
}
inline ::std::string* MigrateGroup::add_sub_task_id() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.MigrateGroup.sub_task_id)
  return sub_task_id_.Add();
}
inline void MigrateGroup::add_sub_task_id(const ::std::string& value) {
  sub_task_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.MigrateGroup.sub_task_id)
}
inline void MigrateGroup::add_sub_task_id(const char* value) {
  sub_task_id_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.MigrateGroup.sub_task_id)
}
inline void MigrateGroup::add_sub_task_id(const char* value, size_t size) {
  sub_task_id_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.MigrateGroup.sub_task_id)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MigrateGroup::sub_task_id() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateGroup.sub_task_id)
  return sub_task_id_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MigrateGroup::mutable_sub_task_id() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateGroup.sub_task_id)
  return &sub_task_id_;
}

// -------------------------------------------------------------------

// GetMigrateStatusRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetMigrateStatusRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetMigrateStatusRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetMigrateStatusRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetMigrateStatusRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetMigrateStatusRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetMigrateStatusRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetMigrateStatusRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetMigrateStatusRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetMigrateStatusRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetMigrateStatusRsp.header)
}

// repeated .masterproto.MigrateStatus migrate_status = 2;
inline int GetMigrateStatusRsp::migrate_status_size() const {
  return migrate_status_.size();
}
inline void GetMigrateStatusRsp::clear_migrate_status() {
  migrate_status_.Clear();
}
inline const ::masterproto::MigrateStatus& GetMigrateStatusRsp::migrate_status(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GetMigrateStatusRsp.migrate_status)
  return migrate_status_.Get(index);
}
inline ::masterproto::MigrateStatus* GetMigrateStatusRsp::mutable_migrate_status(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GetMigrateStatusRsp.migrate_status)
  return migrate_status_.Mutable(index);
}
inline ::masterproto::MigrateStatus* GetMigrateStatusRsp::add_migrate_status() {
  // @@protoc_insertion_point(field_add:masterproto.GetMigrateStatusRsp.migrate_status)
  return migrate_status_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateStatus >*
GetMigrateStatusRsp::mutable_migrate_status() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GetMigrateStatusRsp.migrate_status)
  return &migrate_status_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateStatus >&
GetMigrateStatusRsp::migrate_status() const {
  // @@protoc_insertion_point(field_list:masterproto.GetMigrateStatusRsp.migrate_status)
  return migrate_status_;
}

// -------------------------------------------------------------------

// MigrateJob

// string id = 1;
inline void MigrateJob::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateJob::id() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.id)
  return id_.GetNoArena();
}
inline void MigrateJob::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.id)
}
#if LANG_CXX11
inline void MigrateJob::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateJob.id)
}
#endif
inline void MigrateJob::set_id(const char* value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateJob.id)
}
inline void MigrateJob::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateJob.id)
}
inline ::std::string* MigrateJob::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateJob.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateJob::release_id() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateJob.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateJob::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateJob.id)
}

// string stage = 2;
inline void MigrateJob::clear_stage() {
  stage_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateJob::stage() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.stage)
  return stage_.GetNoArena();
}
inline void MigrateJob::set_stage(const ::std::string& value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.stage)
}
#if LANG_CXX11
inline void MigrateJob::set_stage(::std::string&& value) {
  
  stage_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateJob.stage)
}
#endif
inline void MigrateJob::set_stage(const char* value) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateJob.stage)
}
inline void MigrateJob::set_stage(const char* value, size_t size) {
  
  stage_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateJob.stage)
}
inline ::std::string* MigrateJob::mutable_stage() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateJob.stage)
  return stage_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateJob::release_stage() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateJob.stage)
  
  return stage_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateJob::set_allocated_stage(::std::string* stage) {
  if (stage != NULL) {
    
  } else {
    
  }
  stage_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), stage);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateJob.stage)
}

// string status = 3;
inline void MigrateJob::clear_status() {
  status_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateJob::status() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.status)
  return status_.GetNoArena();
}
inline void MigrateJob::set_status(const ::std::string& value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.status)
}
#if LANG_CXX11
inline void MigrateJob::set_status(::std::string&& value) {
  
  status_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateJob.status)
}
#endif
inline void MigrateJob::set_status(const char* value) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateJob.status)
}
inline void MigrateJob::set_status(const char* value, size_t size) {
  
  status_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateJob.status)
}
inline ::std::string* MigrateJob::mutable_status() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateJob.status)
  return status_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateJob::release_status() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateJob.status)
  
  return status_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateJob::set_allocated_status(::std::string* status) {
  if (status != NULL) {
    
  } else {
    
  }
  status_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), status);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateJob.status)
}

// string err = 4;
inline void MigrateJob::clear_err() {
  err_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateJob::err() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.err)
  return err_.GetNoArena();
}
inline void MigrateJob::set_err(const ::std::string& value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.err)
}
#if LANG_CXX11
inline void MigrateJob::set_err(::std::string&& value) {
  
  err_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateJob.err)
}
#endif
inline void MigrateJob::set_err(const char* value) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateJob.err)
}
inline void MigrateJob::set_err(const char* value, size_t size) {
  
  err_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateJob.err)
}
inline ::std::string* MigrateJob::mutable_err() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateJob.err)
  return err_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateJob::release_err() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateJob.err)
  
  return err_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateJob::set_allocated_err(::std::string* err) {
  if (err != NULL) {
    
  } else {
    
  }
  err_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), err);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateJob.err)
}

// uint64 read_ct = 5;
inline void MigrateJob::clear_read_ct() {
  read_ct_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MigrateJob::read_ct() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.read_ct)
  return read_ct_;
}
inline void MigrateJob::set_read_ct(::google::protobuf::uint64 value) {
  
  read_ct_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.read_ct)
}

// uint64 send_ct = 6;
inline void MigrateJob::clear_send_ct() {
  send_ct_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MigrateJob::send_ct() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.send_ct)
  return send_ct_;
}
inline void MigrateJob::set_send_ct(::google::protobuf::uint64 value) {
  
  send_ct_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.send_ct)
}

// uint32 version = 7;
inline void MigrateJob::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 MigrateJob::version() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateJob.version)
  return version_;
}
inline void MigrateJob::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateJob.version)
}

// -------------------------------------------------------------------

// ReportMigrateInfoReq

// .cmongoproto.ReqHeader header = 1;
inline bool ReportMigrateInfoReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ReportMigrateInfoReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ReportMigrateInfoReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ReportMigrateInfoReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ReportMigrateInfoReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ReportMigrateInfoReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ReportMigrateInfoReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ReportMigrateInfoReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ReportMigrateInfoReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ReportMigrateInfoReq.header)
}

// string session_id = 2;
inline void ReportMigrateInfoReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ReportMigrateInfoReq::session_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ReportMigrateInfoReq.session_id)
  return session_id_.GetNoArena();
}
inline void ReportMigrateInfoReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ReportMigrateInfoReq.session_id)
}
#if LANG_CXX11
inline void ReportMigrateInfoReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ReportMigrateInfoReq.session_id)
}
#endif
inline void ReportMigrateInfoReq::set_session_id(const char* value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ReportMigrateInfoReq.session_id)
}
inline void ReportMigrateInfoReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ReportMigrateInfoReq.session_id)
}
inline ::std::string* ReportMigrateInfoReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ReportMigrateInfoReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ReportMigrateInfoReq::release_session_id() {
  // @@protoc_insertion_point(field_release:masterproto.ReportMigrateInfoReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ReportMigrateInfoReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ReportMigrateInfoReq.session_id)
}

// .masterproto.MigrateJob job = 3;
inline bool ReportMigrateInfoReq::has_job() const {
  return this != internal_default_instance() && job_ != NULL;
}
inline void ReportMigrateInfoReq::clear_job() {
  if (GetArenaNoVirtual() == NULL && job_ != NULL) delete job_;
  job_ = NULL;
}
inline const ::masterproto::MigrateJob& ReportMigrateInfoReq::job() const {
  // @@protoc_insertion_point(field_get:masterproto.ReportMigrateInfoReq.job)
  return job_ != NULL ? *job_
                         : *::masterproto::MigrateJob::internal_default_instance();
}
inline ::masterproto::MigrateJob* ReportMigrateInfoReq::mutable_job() {
  
  if (job_ == NULL) {
    job_ = new ::masterproto::MigrateJob;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ReportMigrateInfoReq.job)
  return job_;
}
inline ::masterproto::MigrateJob* ReportMigrateInfoReq::release_job() {
  // @@protoc_insertion_point(field_release:masterproto.ReportMigrateInfoReq.job)
  
  ::masterproto::MigrateJob* temp = job_;
  job_ = NULL;
  return temp;
}
inline void ReportMigrateInfoReq::set_allocated_job(::masterproto::MigrateJob* job) {
  delete job_;
  job_ = job;
  if (job) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ReportMigrateInfoReq.job)
}

// -------------------------------------------------------------------

// ReportMigrateInfoRsp

// .cmongoproto.ResHeader header = 1;
inline bool ReportMigrateInfoRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ReportMigrateInfoRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ReportMigrateInfoRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ReportMigrateInfoRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ReportMigrateInfoRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ReportMigrateInfoRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ReportMigrateInfoRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ReportMigrateInfoRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ReportMigrateInfoRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ReportMigrateInfoRsp.header)
}

// -------------------------------------------------------------------

// IsTableInMigratingReq

// .cmongoproto.ReqHeader header = 1;
inline bool IsTableInMigratingReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void IsTableInMigratingReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& IsTableInMigratingReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.IsTableInMigratingReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* IsTableInMigratingReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.IsTableInMigratingReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* IsTableInMigratingReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.IsTableInMigratingReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void IsTableInMigratingReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsTableInMigratingReq.header)
}

// string cluster_id = 2;
inline void IsTableInMigratingReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IsTableInMigratingReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.IsTableInMigratingReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void IsTableInMigratingReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.IsTableInMigratingReq.cluster_id)
}
#if LANG_CXX11
inline void IsTableInMigratingReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.IsTableInMigratingReq.cluster_id)
}
#endif
inline void IsTableInMigratingReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.IsTableInMigratingReq.cluster_id)
}
inline void IsTableInMigratingReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.IsTableInMigratingReq.cluster_id)
}
inline ::std::string* IsTableInMigratingReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.IsTableInMigratingReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IsTableInMigratingReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.IsTableInMigratingReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IsTableInMigratingReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsTableInMigratingReq.cluster_id)
}

// string ns = 3;
inline void IsTableInMigratingReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& IsTableInMigratingReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.IsTableInMigratingReq.ns)
  return ns_.GetNoArena();
}
inline void IsTableInMigratingReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.IsTableInMigratingReq.ns)
}
#if LANG_CXX11
inline void IsTableInMigratingReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.IsTableInMigratingReq.ns)
}
#endif
inline void IsTableInMigratingReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.IsTableInMigratingReq.ns)
}
inline void IsTableInMigratingReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.IsTableInMigratingReq.ns)
}
inline ::std::string* IsTableInMigratingReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.IsTableInMigratingReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* IsTableInMigratingReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.IsTableInMigratingReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void IsTableInMigratingReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsTableInMigratingReq.ns)
}

// -------------------------------------------------------------------

// IsTableInMigratingRsp

// .cmongoproto.ResHeader header = 1;
inline bool IsTableInMigratingRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void IsTableInMigratingRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& IsTableInMigratingRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.IsTableInMigratingRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* IsTableInMigratingRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.IsTableInMigratingRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* IsTableInMigratingRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.IsTableInMigratingRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void IsTableInMigratingRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.IsTableInMigratingRsp.header)
}

// bool is_migrating = 2;
inline void IsTableInMigratingRsp::clear_is_migrating() {
  is_migrating_ = false;
}
inline bool IsTableInMigratingRsp::is_migrating() const {
  // @@protoc_insertion_point(field_get:masterproto.IsTableInMigratingRsp.is_migrating)
  return is_migrating_;
}
inline void IsTableInMigratingRsp::set_is_migrating(bool value) {
  
  is_migrating_ = value;
  // @@protoc_insertion_point(field_set:masterproto.IsTableInMigratingRsp.is_migrating)
}

// -------------------------------------------------------------------

// RestoreFilesReq

// .cmongoproto.ReqHeader header = 1;
inline bool RestoreFilesReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestoreFilesReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& RestoreFilesReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* RestoreFilesReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* RestoreFilesReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestoreFilesReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesReq.header)
}

// string src = 2;
inline void RestoreFilesReq::clear_src() {
  src_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreFilesReq::src() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesReq.src)
  return src_.GetNoArena();
}
inline void RestoreFilesReq::set_src(const ::std::string& value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesReq.src)
}
#if LANG_CXX11
inline void RestoreFilesReq::set_src(::std::string&& value) {
  
  src_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreFilesReq.src)
}
#endif
inline void RestoreFilesReq::set_src(const char* value) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreFilesReq.src)
}
inline void RestoreFilesReq::set_src(const char* value, size_t size) {
  
  src_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreFilesReq.src)
}
inline ::std::string* RestoreFilesReq::mutable_src() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesReq.src)
  return src_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreFilesReq::release_src() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesReq.src)
  
  return src_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreFilesReq::set_allocated_src(::std::string* src) {
  if (src != NULL) {
    
  } else {
    
  }
  src_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesReq.src)
}

// int64 ts = 3;
inline void RestoreFilesReq::clear_ts() {
  ts_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 RestoreFilesReq::ts() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesReq.ts)
  return ts_;
}
inline void RestoreFilesReq::set_ts(::google::protobuf::int64 value) {
  
  ts_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesReq.ts)
}

// string db = 4;
inline void RestoreFilesReq::clear_db() {
  db_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreFilesReq::db() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesReq.db)
  return db_.GetNoArena();
}
inline void RestoreFilesReq::set_db(const ::std::string& value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesReq.db)
}
#if LANG_CXX11
inline void RestoreFilesReq::set_db(::std::string&& value) {
  
  db_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreFilesReq.db)
}
#endif
inline void RestoreFilesReq::set_db(const char* value) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreFilesReq.db)
}
inline void RestoreFilesReq::set_db(const char* value, size_t size) {
  
  db_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreFilesReq.db)
}
inline ::std::string* RestoreFilesReq::mutable_db() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesReq.db)
  return db_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreFilesReq::release_db() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesReq.db)
  
  return db_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreFilesReq::set_allocated_db(::std::string* db) {
  if (db != NULL) {
    
  } else {
    
  }
  db_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesReq.db)
}

// string table = 5;
inline void RestoreFilesReq::clear_table() {
  table_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreFilesReq::table() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesReq.table)
  return table_.GetNoArena();
}
inline void RestoreFilesReq::set_table(const ::std::string& value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesReq.table)
}
#if LANG_CXX11
inline void RestoreFilesReq::set_table(::std::string&& value) {
  
  table_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreFilesReq.table)
}
#endif
inline void RestoreFilesReq::set_table(const char* value) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreFilesReq.table)
}
inline void RestoreFilesReq::set_table(const char* value, size_t size) {
  
  table_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreFilesReq.table)
}
inline ::std::string* RestoreFilesReq::mutable_table() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesReq.table)
  return table_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreFilesReq::release_table() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesReq.table)
  
  return table_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreFilesReq::set_allocated_table(::std::string* table) {
  if (table != NULL) {
    
  } else {
    
  }
  table_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesReq.table)
}

// -------------------------------------------------------------------

// RestoreFilesRes

// .cmongoproto.ResHeader header = 1;
inline bool RestoreFilesRes::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestoreFilesRes::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& RestoreFilesRes::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesRes.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* RestoreFilesRes::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesRes.header)
  return header_;
}
inline ::cmongoproto::ResHeader* RestoreFilesRes::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesRes.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestoreFilesRes::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesRes.header)
}

// string snapshotFile = 2;
inline void RestoreFilesRes::clear_snapshotfile() {
  snapshotfile_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestoreFilesRes::snapshotfile() const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesRes.snapshotFile)
  return snapshotfile_.GetNoArena();
}
inline void RestoreFilesRes::set_snapshotfile(const ::std::string& value) {
  
  snapshotfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesRes.snapshotFile)
}
#if LANG_CXX11
inline void RestoreFilesRes::set_snapshotfile(::std::string&& value) {
  
  snapshotfile_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestoreFilesRes.snapshotFile)
}
#endif
inline void RestoreFilesRes::set_snapshotfile(const char* value) {
  
  snapshotfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreFilesRes.snapshotFile)
}
inline void RestoreFilesRes::set_snapshotfile(const char* value, size_t size) {
  
  snapshotfile_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreFilesRes.snapshotFile)
}
inline ::std::string* RestoreFilesRes::mutable_snapshotfile() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesRes.snapshotFile)
  return snapshotfile_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestoreFilesRes::release_snapshotfile() {
  // @@protoc_insertion_point(field_release:masterproto.RestoreFilesRes.snapshotFile)
  
  return snapshotfile_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestoreFilesRes::set_allocated_snapshotfile(::std::string* snapshotfile) {
  if (snapshotfile != NULL) {
    
  } else {
    
  }
  snapshotfile_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), snapshotfile);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestoreFilesRes.snapshotFile)
}

// repeated string incrementFiles = 3;
inline int RestoreFilesRes::incrementfiles_size() const {
  return incrementfiles_.size();
}
inline void RestoreFilesRes::clear_incrementfiles() {
  incrementfiles_.Clear();
}
inline const ::std::string& RestoreFilesRes::incrementfiles(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.RestoreFilesRes.incrementFiles)
  return incrementfiles_.Get(index);
}
inline ::std::string* RestoreFilesRes::mutable_incrementfiles(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.RestoreFilesRes.incrementFiles)
  return incrementfiles_.Mutable(index);
}
inline void RestoreFilesRes::set_incrementfiles(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.RestoreFilesRes.incrementFiles)
  incrementfiles_.Mutable(index)->assign(value);
}
inline void RestoreFilesRes::set_incrementfiles(int index, const char* value) {
  incrementfiles_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.RestoreFilesRes.incrementFiles)
}
inline void RestoreFilesRes::set_incrementfiles(int index, const char* value, size_t size) {
  incrementfiles_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestoreFilesRes.incrementFiles)
}
inline ::std::string* RestoreFilesRes::add_incrementfiles() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.RestoreFilesRes.incrementFiles)
  return incrementfiles_.Add();
}
inline void RestoreFilesRes::add_incrementfiles(const ::std::string& value) {
  incrementfiles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.RestoreFilesRes.incrementFiles)
}
inline void RestoreFilesRes::add_incrementfiles(const char* value) {
  incrementfiles_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.RestoreFilesRes.incrementFiles)
}
inline void RestoreFilesRes::add_incrementfiles(const char* value, size_t size) {
  incrementfiles_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.RestoreFilesRes.incrementFiles)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
RestoreFilesRes::incrementfiles() const {
  // @@protoc_insertion_point(field_list:masterproto.RestoreFilesRes.incrementFiles)
  return incrementfiles_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
RestoreFilesRes::mutable_incrementfiles() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.RestoreFilesRes.incrementFiles)
  return &incrementfiles_;
}

// -------------------------------------------------------------------

// ActiveNodeInfo

// string nameserviceId = 1;
inline void ActiveNodeInfo::clear_nameserviceid() {
  nameserviceid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveNodeInfo::nameserviceid() const {
  // @@protoc_insertion_point(field_get:masterproto.ActiveNodeInfo.nameserviceId)
  return nameserviceid_.GetNoArena();
}
inline void ActiveNodeInfo::set_nameserviceid(const ::std::string& value) {
  
  nameserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ActiveNodeInfo.nameserviceId)
}
#if LANG_CXX11
inline void ActiveNodeInfo::set_nameserviceid(::std::string&& value) {
  
  nameserviceid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ActiveNodeInfo.nameserviceId)
}
#endif
inline void ActiveNodeInfo::set_nameserviceid(const char* value) {
  
  nameserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ActiveNodeInfo.nameserviceId)
}
inline void ActiveNodeInfo::set_nameserviceid(const char* value, size_t size) {
  
  nameserviceid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ActiveNodeInfo.nameserviceId)
}
inline ::std::string* ActiveNodeInfo::mutable_nameserviceid() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ActiveNodeInfo.nameserviceId)
  return nameserviceid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveNodeInfo::release_nameserviceid() {
  // @@protoc_insertion_point(field_release:masterproto.ActiveNodeInfo.nameserviceId)
  
  return nameserviceid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveNodeInfo::set_allocated_nameserviceid(::std::string* nameserviceid) {
  if (nameserviceid != NULL) {
    
  } else {
    
  }
  nameserviceid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nameserviceid);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ActiveNodeInfo.nameserviceId)
}

// string namenodeId = 2;
inline void ActiveNodeInfo::clear_namenodeid() {
  namenodeid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveNodeInfo::namenodeid() const {
  // @@protoc_insertion_point(field_get:masterproto.ActiveNodeInfo.namenodeId)
  return namenodeid_.GetNoArena();
}
inline void ActiveNodeInfo::set_namenodeid(const ::std::string& value) {
  
  namenodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ActiveNodeInfo.namenodeId)
}
#if LANG_CXX11
inline void ActiveNodeInfo::set_namenodeid(::std::string&& value) {
  
  namenodeid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ActiveNodeInfo.namenodeId)
}
#endif
inline void ActiveNodeInfo::set_namenodeid(const char* value) {
  
  namenodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ActiveNodeInfo.namenodeId)
}
inline void ActiveNodeInfo::set_namenodeid(const char* value, size_t size) {
  
  namenodeid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ActiveNodeInfo.namenodeId)
}
inline ::std::string* ActiveNodeInfo::mutable_namenodeid() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ActiveNodeInfo.namenodeId)
  return namenodeid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveNodeInfo::release_namenodeid() {
  // @@protoc_insertion_point(field_release:masterproto.ActiveNodeInfo.namenodeId)
  
  return namenodeid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveNodeInfo::set_allocated_namenodeid(::std::string* namenodeid) {
  if (namenodeid != NULL) {
    
  } else {
    
  }
  namenodeid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), namenodeid);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ActiveNodeInfo.namenodeId)
}

// string hostname = 3;
inline void ActiveNodeInfo::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ActiveNodeInfo::hostname() const {
  // @@protoc_insertion_point(field_get:masterproto.ActiveNodeInfo.hostname)
  return hostname_.GetNoArena();
}
inline void ActiveNodeInfo::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ActiveNodeInfo.hostname)
}
#if LANG_CXX11
inline void ActiveNodeInfo::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ActiveNodeInfo.hostname)
}
#endif
inline void ActiveNodeInfo::set_hostname(const char* value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ActiveNodeInfo.hostname)
}
inline void ActiveNodeInfo::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ActiveNodeInfo.hostname)
}
inline ::std::string* ActiveNodeInfo::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ActiveNodeInfo.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ActiveNodeInfo::release_hostname() {
  // @@protoc_insertion_point(field_release:masterproto.ActiveNodeInfo.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ActiveNodeInfo::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ActiveNodeInfo.hostname)
}

// int32 port = 4;
inline void ActiveNodeInfo::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 ActiveNodeInfo::port() const {
  // @@protoc_insertion_point(field_get:masterproto.ActiveNodeInfo.port)
  return port_;
}
inline void ActiveNodeInfo::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ActiveNodeInfo.port)
}

// int32 zkfcPort = 5;
inline void ActiveNodeInfo::clear_zkfcport() {
  zkfcport_ = 0;
}
inline ::google::protobuf::int32 ActiveNodeInfo::zkfcport() const {
  // @@protoc_insertion_point(field_get:masterproto.ActiveNodeInfo.zkfcPort)
  return zkfcport_;
}
inline void ActiveNodeInfo::set_zkfcport(::google::protobuf::int32 value) {
  
  zkfcport_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ActiveNodeInfo.zkfcPort)
}

// -------------------------------------------------------------------

// GenBalanceTaskReq

// .cmongoproto.ReqHeader header = 1;
inline bool GenBalanceTaskReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GenBalanceTaskReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GenBalanceTaskReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GenBalanceTaskReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GenBalanceTaskReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GenBalanceTaskReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GenBalanceTaskReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GenBalanceTaskReq.header)
}

// string cluster_id = 2;
inline void GenBalanceTaskReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenBalanceTaskReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GenBalanceTaskReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GenBalanceTaskReq.cluster_id)
}
#if LANG_CXX11
inline void GenBalanceTaskReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GenBalanceTaskReq.cluster_id)
}
#endif
inline void GenBalanceTaskReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GenBalanceTaskReq.cluster_id)
}
inline void GenBalanceTaskReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GenBalanceTaskReq.cluster_id)
}
inline ::std::string* GenBalanceTaskReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBalanceTaskReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GenBalanceTaskReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBalanceTaskReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GenBalanceTaskReq.cluster_id)
}

// string ns = 3;
inline void GenBalanceTaskReq::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenBalanceTaskReq::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskReq.ns)
  return ns_.GetNoArena();
}
inline void GenBalanceTaskReq::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GenBalanceTaskReq.ns)
}
#if LANG_CXX11
inline void GenBalanceTaskReq::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GenBalanceTaskReq.ns)
}
#endif
inline void GenBalanceTaskReq::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GenBalanceTaskReq.ns)
}
inline void GenBalanceTaskReq::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GenBalanceTaskReq.ns)
}
inline ::std::string* GenBalanceTaskReq::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskReq.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBalanceTaskReq::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.GenBalanceTaskReq.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBalanceTaskReq::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GenBalanceTaskReq.ns)
}

// string creator = 4;
inline void GenBalanceTaskReq::clear_creator() {
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GenBalanceTaskReq::creator() const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskReq.creator)
  return creator_.GetNoArena();
}
inline void GenBalanceTaskReq::set_creator(const ::std::string& value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GenBalanceTaskReq.creator)
}
#if LANG_CXX11
inline void GenBalanceTaskReq::set_creator(::std::string&& value) {
  
  creator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GenBalanceTaskReq.creator)
}
#endif
inline void GenBalanceTaskReq::set_creator(const char* value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GenBalanceTaskReq.creator)
}
inline void GenBalanceTaskReq::set_creator(const char* value, size_t size) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GenBalanceTaskReq.creator)
}
inline ::std::string* GenBalanceTaskReq::mutable_creator() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskReq.creator)
  return creator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GenBalanceTaskReq::release_creator() {
  // @@protoc_insertion_point(field_release:masterproto.GenBalanceTaskReq.creator)
  
  return creator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GenBalanceTaskReq::set_allocated_creator(::std::string* creator) {
  if (creator != NULL) {
    
  } else {
    
  }
  creator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GenBalanceTaskReq.creator)
}

// -------------------------------------------------------------------

// BalanceTask

// string cluster_id = 1;
inline void BalanceTask::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BalanceTask::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void BalanceTask::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.cluster_id)
}
#if LANG_CXX11
inline void BalanceTask::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BalanceTask.cluster_id)
}
#endif
inline void BalanceTask::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BalanceTask.cluster_id)
}
inline void BalanceTask::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BalanceTask.cluster_id)
}
inline ::std::string* BalanceTask::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceTask.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BalanceTask::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceTask.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BalanceTask::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceTask.cluster_id)
}

// string ns = 2;
inline void BalanceTask::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BalanceTask::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.ns)
  return ns_.GetNoArena();
}
inline void BalanceTask::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.ns)
}
#if LANG_CXX11
inline void BalanceTask::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BalanceTask.ns)
}
#endif
inline void BalanceTask::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BalanceTask.ns)
}
inline void BalanceTask::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BalanceTask.ns)
}
inline ::std::string* BalanceTask::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceTask.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BalanceTask::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceTask.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BalanceTask::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceTask.ns)
}

// repeated int32 chunk_list = 3;
inline int BalanceTask::chunk_list_size() const {
  return chunk_list_.size();
}
inline void BalanceTask::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 BalanceTask::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.chunk_list)
  return chunk_list_.Get(index);
}
inline void BalanceTask::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.chunk_list)
}
inline void BalanceTask::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.BalanceTask.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
BalanceTask::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.BalanceTask.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
BalanceTask::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.BalanceTask.chunk_list)
  return &chunk_list_;
}

// string src_shard = 4;
inline void BalanceTask::clear_src_shard() {
  src_shard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BalanceTask::src_shard() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.src_shard)
  return src_shard_.GetNoArena();
}
inline void BalanceTask::set_src_shard(const ::std::string& value) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.src_shard)
}
#if LANG_CXX11
inline void BalanceTask::set_src_shard(::std::string&& value) {
  
  src_shard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BalanceTask.src_shard)
}
#endif
inline void BalanceTask::set_src_shard(const char* value) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BalanceTask.src_shard)
}
inline void BalanceTask::set_src_shard(const char* value, size_t size) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BalanceTask.src_shard)
}
inline ::std::string* BalanceTask::mutable_src_shard() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceTask.src_shard)
  return src_shard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BalanceTask::release_src_shard() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceTask.src_shard)
  
  return src_shard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BalanceTask::set_allocated_src_shard(::std::string* src_shard) {
  if (src_shard != NULL) {
    
  } else {
    
  }
  src_shard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_shard);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceTask.src_shard)
}

// string dst_shard = 5;
inline void BalanceTask::clear_dst_shard() {
  dst_shard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BalanceTask::dst_shard() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.dst_shard)
  return dst_shard_.GetNoArena();
}
inline void BalanceTask::set_dst_shard(const ::std::string& value) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.dst_shard)
}
#if LANG_CXX11
inline void BalanceTask::set_dst_shard(::std::string&& value) {
  
  dst_shard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BalanceTask.dst_shard)
}
#endif
inline void BalanceTask::set_dst_shard(const char* value) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BalanceTask.dst_shard)
}
inline void BalanceTask::set_dst_shard(const char* value, size_t size) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BalanceTask.dst_shard)
}
inline ::std::string* BalanceTask::mutable_dst_shard() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceTask.dst_shard)
  return dst_shard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BalanceTask::release_dst_shard() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceTask.dst_shard)
  
  return dst_shard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BalanceTask::set_allocated_dst_shard(::std::string* dst_shard) {
  if (dst_shard != NULL) {
    
  } else {
    
  }
  dst_shard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_shard);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceTask.dst_shard)
}

// bool auto_clean = 6;
inline void BalanceTask::clear_auto_clean() {
  auto_clean_ = false;
}
inline bool BalanceTask::auto_clean() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceTask.auto_clean)
  return auto_clean_;
}
inline void BalanceTask::set_auto_clean(bool value) {
  
  auto_clean_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BalanceTask.auto_clean)
}

// -------------------------------------------------------------------

// GenBalanceTaskRsp

// .cmongoproto.ResHeader header = 1;
inline bool GenBalanceTaskRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GenBalanceTaskRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GenBalanceTaskRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GenBalanceTaskRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GenBalanceTaskRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GenBalanceTaskRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GenBalanceTaskRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GenBalanceTaskRsp.header)
}

// repeated .masterproto.BalanceTask tasks = 2;
inline int GenBalanceTaskRsp::tasks_size() const {
  return tasks_.size();
}
inline void GenBalanceTaskRsp::clear_tasks() {
  tasks_.Clear();
}
inline const ::masterproto::BalanceTask& GenBalanceTaskRsp::tasks(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GenBalanceTaskRsp.tasks)
  return tasks_.Get(index);
}
inline ::masterproto::BalanceTask* GenBalanceTaskRsp::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GenBalanceTaskRsp.tasks)
  return tasks_.Mutable(index);
}
inline ::masterproto::BalanceTask* GenBalanceTaskRsp::add_tasks() {
  // @@protoc_insertion_point(field_add:masterproto.GenBalanceTaskRsp.tasks)
  return tasks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >*
GenBalanceTaskRsp::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GenBalanceTaskRsp.tasks)
  return &tasks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >&
GenBalanceTaskRsp::tasks() const {
  // @@protoc_insertion_point(field_list:masterproto.GenBalanceTaskRsp.tasks)
  return tasks_;
}

// -------------------------------------------------------------------

// BalanceReq

// .cmongoproto.ReqHeader header = 1;
inline bool BalanceReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BalanceReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& BalanceReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* BalanceReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* BalanceReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BalanceReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceReq.header)
}

// repeated .masterproto.BalanceTask tasks = 2;
inline int BalanceReq::tasks_size() const {
  return tasks_.size();
}
inline void BalanceReq::clear_tasks() {
  tasks_.Clear();
}
inline const ::masterproto::BalanceTask& BalanceReq::tasks(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceReq.tasks)
  return tasks_.Get(index);
}
inline ::masterproto::BalanceTask* BalanceReq::mutable_tasks(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceReq.tasks)
  return tasks_.Mutable(index);
}
inline ::masterproto::BalanceTask* BalanceReq::add_tasks() {
  // @@protoc_insertion_point(field_add:masterproto.BalanceReq.tasks)
  return tasks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >*
BalanceReq::mutable_tasks() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.BalanceReq.tasks)
  return &tasks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::BalanceTask >&
BalanceReq::tasks() const {
  // @@protoc_insertion_point(field_list:masterproto.BalanceReq.tasks)
  return tasks_;
}

// string creator = 3;
inline void BalanceReq::clear_creator() {
  creator_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& BalanceReq::creator() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceReq.creator)
  return creator_.GetNoArena();
}
inline void BalanceReq::set_creator(const ::std::string& value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.BalanceReq.creator)
}
#if LANG_CXX11
inline void BalanceReq::set_creator(::std::string&& value) {
  
  creator_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.BalanceReq.creator)
}
#endif
inline void BalanceReq::set_creator(const char* value) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.BalanceReq.creator)
}
inline void BalanceReq::set_creator(const char* value, size_t size) {
  
  creator_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.BalanceReq.creator)
}
inline ::std::string* BalanceReq::mutable_creator() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceReq.creator)
  return creator_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* BalanceReq::release_creator() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceReq.creator)
  
  return creator_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void BalanceReq::set_allocated_creator(::std::string* creator) {
  if (creator != NULL) {
    
  } else {
    
  }
  creator_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), creator);
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceReq.creator)
}

// -------------------------------------------------------------------

// BalanceRsp

// .cmongoproto.ResHeader header = 1;
inline bool BalanceRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void BalanceRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& BalanceRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* BalanceRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.BalanceRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* BalanceRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.BalanceRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void BalanceRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.BalanceRsp.header)
}

// uint64 task_id = 2;
inline void BalanceRsp::clear_task_id() {
  task_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 BalanceRsp::task_id() const {
  // @@protoc_insertion_point(field_get:masterproto.BalanceRsp.task_id)
  return task_id_;
}
inline void BalanceRsp::set_task_id(::google::protobuf::uint64 value) {
  
  task_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.BalanceRsp.task_id)
}

// -------------------------------------------------------------------

// ChangeRouteStateReq

// .cmongoproto.ReqHeader header = 1;
inline bool ChangeRouteStateReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChangeRouteStateReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ChangeRouteStateReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ChangeRouteStateReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteStateReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ChangeRouteStateReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteStateReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChangeRouteStateReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteStateReq.header)
}

// string cluster_id = 2;
inline void ChangeRouteStateReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteStateReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ChangeRouteStateReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteStateReq.cluster_id)
}
#if LANG_CXX11
inline void ChangeRouteStateReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteStateReq.cluster_id)
}
#endif
inline void ChangeRouteStateReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteStateReq.cluster_id)
}
inline void ChangeRouteStateReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteStateReq.cluster_id)
}
inline ::std::string* ChangeRouteStateReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteStateReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteStateReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteStateReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteStateReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteStateReq.cluster_id)
}

// string db_name = 3;
inline void ChangeRouteStateReq::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteStateReq::db_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.db_name)
  return db_name_.GetNoArena();
}
inline void ChangeRouteStateReq::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteStateReq.db_name)
}
#if LANG_CXX11
inline void ChangeRouteStateReq::set_db_name(::std::string&& value) {
  
  db_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteStateReq.db_name)
}
#endif
inline void ChangeRouteStateReq::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteStateReq.db_name)
}
inline void ChangeRouteStateReq::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteStateReq.db_name)
}
inline ::std::string* ChangeRouteStateReq::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteStateReq.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteStateReq::release_db_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteStateReq.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteStateReq::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteStateReq.db_name)
}

// string table_name = 4;
inline void ChangeRouteStateReq::clear_table_name() {
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteStateReq::table_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.table_name)
  return table_name_.GetNoArena();
}
inline void ChangeRouteStateReq::set_table_name(const ::std::string& value) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteStateReq.table_name)
}
#if LANG_CXX11
inline void ChangeRouteStateReq::set_table_name(::std::string&& value) {
  
  table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteStateReq.table_name)
}
#endif
inline void ChangeRouteStateReq::set_table_name(const char* value) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteStateReq.table_name)
}
inline void ChangeRouteStateReq::set_table_name(const char* value, size_t size) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteStateReq.table_name)
}
inline ::std::string* ChangeRouteStateReq::mutable_table_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteStateReq.table_name)
  return table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteStateReq::release_table_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteStateReq.table_name)
  
  return table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteStateReq::set_allocated_table_name(::std::string* table_name) {
  if (table_name != NULL) {
    
  } else {
    
  }
  table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteStateReq.table_name)
}

// repeated int32 chunk_list = 5;
inline int ChangeRouteStateReq::chunk_list_size() const {
  return chunk_list_.size();
}
inline void ChangeRouteStateReq::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 ChangeRouteStateReq::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.chunk_list)
  return chunk_list_.Get(index);
}
inline void ChangeRouteStateReq::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteStateReq.chunk_list)
}
inline void ChangeRouteStateReq::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.ChangeRouteStateReq.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChangeRouteStateReq::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ChangeRouteStateReq.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChangeRouteStateReq::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ChangeRouteStateReq.chunk_list)
  return &chunk_list_;
}

// int32 state = 6;
inline void ChangeRouteStateReq::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 ChangeRouteStateReq::state() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateReq.state)
  return state_;
}
inline void ChangeRouteStateReq::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteStateReq.state)
}

// -------------------------------------------------------------------

// ChangeRouteStateRsp

// .cmongoproto.ResHeader header = 1;
inline bool ChangeRouteStateRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChangeRouteStateRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ChangeRouteStateRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteStateRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ChangeRouteStateRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteStateRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ChangeRouteStateRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteStateRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChangeRouteStateRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteStateRsp.header)
}

// -------------------------------------------------------------------

// ChangeRouteRsReq

// .cmongoproto.ReqHeader header = 1;
inline bool ChangeRouteRsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChangeRouteRsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ChangeRouteRsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ChangeRouteRsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ChangeRouteRsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChangeRouteRsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.header)
}

// string cluster_id = 2;
inline void ChangeRouteRsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ChangeRouteRsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.cluster_id)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.cluster_id)
}
#endif
inline void ChangeRouteRsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.cluster_id)
}
inline void ChangeRouteRsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.cluster_id)
}
inline ::std::string* ChangeRouteRsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.cluster_id)
}

// string db_name = 3;
inline void ChangeRouteRsReq::clear_db_name() {
  db_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::db_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.db_name)
  return db_name_.GetNoArena();
}
inline void ChangeRouteRsReq::set_db_name(const ::std::string& value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.db_name)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_db_name(::std::string&& value) {
  
  db_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.db_name)
}
#endif
inline void ChangeRouteRsReq::set_db_name(const char* value) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.db_name)
}
inline void ChangeRouteRsReq::set_db_name(const char* value, size_t size) {
  
  db_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.db_name)
}
inline ::std::string* ChangeRouteRsReq::mutable_db_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.db_name)
  return db_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_db_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.db_name)
  
  return db_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_db_name(::std::string* db_name) {
  if (db_name != NULL) {
    
  } else {
    
  }
  db_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), db_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.db_name)
}

// string table_name = 4;
inline void ChangeRouteRsReq::clear_table_name() {
  table_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::table_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.table_name)
  return table_name_.GetNoArena();
}
inline void ChangeRouteRsReq::set_table_name(const ::std::string& value) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.table_name)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_table_name(::std::string&& value) {
  
  table_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.table_name)
}
#endif
inline void ChangeRouteRsReq::set_table_name(const char* value) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.table_name)
}
inline void ChangeRouteRsReq::set_table_name(const char* value, size_t size) {
  
  table_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.table_name)
}
inline ::std::string* ChangeRouteRsReq::mutable_table_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.table_name)
  return table_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_table_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.table_name)
  
  return table_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_table_name(::std::string* table_name) {
  if (table_name != NULL) {
    
  } else {
    
  }
  table_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.table_name)
}

// repeated int32 chunk_list = 5;
inline int ChangeRouteRsReq::chunk_list_size() const {
  return chunk_list_.size();
}
inline void ChangeRouteRsReq::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 ChangeRouteRsReq::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.chunk_list)
  return chunk_list_.Get(index);
}
inline void ChangeRouteRsReq::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.chunk_list)
}
inline void ChangeRouteRsReq::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.ChangeRouteRsReq.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
ChangeRouteRsReq::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.ChangeRouteRsReq.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
ChangeRouteRsReq::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.ChangeRouteRsReq.chunk_list)
  return &chunk_list_;
}

// string source_rs_name = 6;
inline void ChangeRouteRsReq::clear_source_rs_name() {
  source_rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::source_rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.source_rs_name)
  return source_rs_name_.GetNoArena();
}
inline void ChangeRouteRsReq::set_source_rs_name(const ::std::string& value) {
  
  source_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.source_rs_name)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_source_rs_name(::std::string&& value) {
  
  source_rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.source_rs_name)
}
#endif
inline void ChangeRouteRsReq::set_source_rs_name(const char* value) {
  
  source_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.source_rs_name)
}
inline void ChangeRouteRsReq::set_source_rs_name(const char* value, size_t size) {
  
  source_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.source_rs_name)
}
inline ::std::string* ChangeRouteRsReq::mutable_source_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.source_rs_name)
  return source_rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_source_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.source_rs_name)
  
  return source_rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_source_rs_name(::std::string* source_rs_name) {
  if (source_rs_name != NULL) {
    
  } else {
    
  }
  source_rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source_rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.source_rs_name)
}

// string dest_rs_name = 7;
inline void ChangeRouteRsReq::clear_dest_rs_name() {
  dest_rs_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::dest_rs_name() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.dest_rs_name)
  return dest_rs_name_.GetNoArena();
}
inline void ChangeRouteRsReq::set_dest_rs_name(const ::std::string& value) {
  
  dest_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.dest_rs_name)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_dest_rs_name(::std::string&& value) {
  
  dest_rs_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.dest_rs_name)
}
#endif
inline void ChangeRouteRsReq::set_dest_rs_name(const char* value) {
  
  dest_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.dest_rs_name)
}
inline void ChangeRouteRsReq::set_dest_rs_name(const char* value, size_t size) {
  
  dest_rs_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.dest_rs_name)
}
inline ::std::string* ChangeRouteRsReq::mutable_dest_rs_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.dest_rs_name)
  return dest_rs_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_dest_rs_name() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.dest_rs_name)
  
  return dest_rs_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_dest_rs_name(::std::string* dest_rs_name) {
  if (dest_rs_name != NULL) {
    
  } else {
    
  }
  dest_rs_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dest_rs_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.dest_rs_name)
}

// int32 state = 8;
inline void ChangeRouteRsReq::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 ChangeRouteRsReq::state() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.state)
  return state_;
}
inline void ChangeRouteRsReq::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.state)
}

// string session_id = 9;
inline void ChangeRouteRsReq::clear_session_id() {
  session_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ChangeRouteRsReq::session_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsReq.session_id)
  return session_id_.GetNoArena();
}
inline void ChangeRouteRsReq::set_session_id(const ::std::string& value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ChangeRouteRsReq.session_id)
}
#if LANG_CXX11
inline void ChangeRouteRsReq::set_session_id(::std::string&& value) {
  
  session_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ChangeRouteRsReq.session_id)
}
#endif
inline void ChangeRouteRsReq::set_session_id(const char* value) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ChangeRouteRsReq.session_id)
}
inline void ChangeRouteRsReq::set_session_id(const char* value, size_t size) {
  
  session_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ChangeRouteRsReq.session_id)
}
inline ::std::string* ChangeRouteRsReq::mutable_session_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsReq.session_id)
  return session_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ChangeRouteRsReq::release_session_id() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsReq.session_id)
  
  return session_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ChangeRouteRsReq::set_allocated_session_id(::std::string* session_id) {
  if (session_id != NULL) {
    
  } else {
    
  }
  session_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), session_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsReq.session_id)
}

// -------------------------------------------------------------------

// ChangeRouteRsRsp

// .cmongoproto.ResHeader header = 1;
inline bool ChangeRouteRsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ChangeRouteRsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ChangeRouteRsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ChangeRouteRsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ChangeRouteRsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ChangeRouteRsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ChangeRouteRsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ChangeRouteRsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ChangeRouteRsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ChangeRouteRsRsp.header)
}

// -------------------------------------------------------------------

// GetClusterRoutesReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetClusterRoutesReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterRoutesReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetClusterRoutesReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetClusterRoutesReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetClusterRoutesReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterRoutesReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesReq.header)
}

// string cluster_id = 2;
inline void GetClusterRoutesReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterRoutesReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetClusterRoutesReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetClusterRoutesReq.cluster_id)
}
#if LANG_CXX11
inline void GetClusterRoutesReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetClusterRoutesReq.cluster_id)
}
#endif
inline void GetClusterRoutesReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetClusterRoutesReq.cluster_id)
}
inline void GetClusterRoutesReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetClusterRoutesReq.cluster_id)
}
inline ::std::string* GetClusterRoutesReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterRoutesReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterRoutesReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesReq.cluster_id)
}

// int64 time_nano = 3;
inline void GetClusterRoutesReq::clear_time_nano() {
  time_nano_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetClusterRoutesReq::time_nano() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesReq.time_nano)
  return time_nano_;
}
inline void GetClusterRoutesReq::set_time_nano(::google::protobuf::int64 value) {
  
  time_nano_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterRoutesReq.time_nano)
}

// -------------------------------------------------------------------

// RouteChunk

// string shard_name = 1;
inline void RouteChunk::clear_shard_name() {
  shard_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RouteChunk::shard_name() const {
  // @@protoc_insertion_point(field_get:masterproto.RouteChunk.shard_name)
  return shard_name_.GetNoArena();
}
inline void RouteChunk::set_shard_name(const ::std::string& value) {
  
  shard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RouteChunk.shard_name)
}
#if LANG_CXX11
inline void RouteChunk::set_shard_name(::std::string&& value) {
  
  shard_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RouteChunk.shard_name)
}
#endif
inline void RouteChunk::set_shard_name(const char* value) {
  
  shard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RouteChunk.shard_name)
}
inline void RouteChunk::set_shard_name(const char* value, size_t size) {
  
  shard_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RouteChunk.shard_name)
}
inline ::std::string* RouteChunk::mutable_shard_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RouteChunk.shard_name)
  return shard_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RouteChunk::release_shard_name() {
  // @@protoc_insertion_point(field_release:masterproto.RouteChunk.shard_name)
  
  return shard_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RouteChunk::set_allocated_shard_name(::std::string* shard_name) {
  if (shard_name != NULL) {
    
  } else {
    
  }
  shard_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), shard_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RouteChunk.shard_name)
}

// int32 state = 2;
inline void RouteChunk::clear_state() {
  state_ = 0;
}
inline ::google::protobuf::int32 RouteChunk::state() const {
  // @@protoc_insertion_point(field_get:masterproto.RouteChunk.state)
  return state_;
}
inline void RouteChunk::set_state(::google::protobuf::int32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RouteChunk.state)
}

// -------------------------------------------------------------------

// TableRoutesRaw

// string ns = 1;
inline void TableRoutesRaw::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutesRaw::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutesRaw.ns)
  return ns_.GetNoArena();
}
inline void TableRoutesRaw::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutesRaw.ns)
}
#if LANG_CXX11
inline void TableRoutesRaw::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutesRaw.ns)
}
#endif
inline void TableRoutesRaw::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutesRaw.ns)
}
inline void TableRoutesRaw::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutesRaw.ns)
}
inline ::std::string* TableRoutesRaw::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutesRaw.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutesRaw::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutesRaw.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutesRaw::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutesRaw.ns)
}

// string raw_route = 2;
inline void TableRoutesRaw::clear_raw_route() {
  raw_route_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutesRaw::raw_route() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutesRaw.raw_route)
  return raw_route_.GetNoArena();
}
inline void TableRoutesRaw::set_raw_route(const ::std::string& value) {
  
  raw_route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutesRaw.raw_route)
}
#if LANG_CXX11
inline void TableRoutesRaw::set_raw_route(::std::string&& value) {
  
  raw_route_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutesRaw.raw_route)
}
#endif
inline void TableRoutesRaw::set_raw_route(const char* value) {
  
  raw_route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutesRaw.raw_route)
}
inline void TableRoutesRaw::set_raw_route(const char* value, size_t size) {
  
  raw_route_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutesRaw.raw_route)
}
inline ::std::string* TableRoutesRaw::mutable_raw_route() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutesRaw.raw_route)
  return raw_route_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutesRaw::release_raw_route() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutesRaw.raw_route)
  
  return raw_route_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutesRaw::set_allocated_raw_route(::std::string* raw_route) {
  if (raw_route != NULL) {
    
  } else {
    
  }
  raw_route_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), raw_route);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutesRaw.raw_route)
}

// -------------------------------------------------------------------

// TableRoutes

// string ns = 1;
inline void TableRoutes::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutes::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.ns)
  return ns_.GetNoArena();
}
inline void TableRoutes::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.ns)
}
#if LANG_CXX11
inline void TableRoutes::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutes.ns)
}
#endif
inline void TableRoutes::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.ns)
}
inline void TableRoutes::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.ns)
}
inline ::std::string* TableRoutes::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutes::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutes.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutes::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutes.ns)
}

// repeated string shard_key = 2;
inline int TableRoutes::shard_key_size() const {
  return shard_key_.size();
}
inline void TableRoutes::clear_shard_key() {
  shard_key_.Clear();
}
inline const ::std::string& TableRoutes::shard_key(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.shard_key)
  return shard_key_.Get(index);
}
inline ::std::string* TableRoutes::mutable_shard_key(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.shard_key)
  return shard_key_.Mutable(index);
}
inline void TableRoutes::set_shard_key(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.shard_key)
  shard_key_.Mutable(index)->assign(value);
}
inline void TableRoutes::set_shard_key(int index, const char* value) {
  shard_key_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.shard_key)
}
inline void TableRoutes::set_shard_key(int index, const char* value, size_t size) {
  shard_key_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.shard_key)
}
inline ::std::string* TableRoutes::add_shard_key() {
  // @@protoc_insertion_point(field_add_mutable:masterproto.TableRoutes.shard_key)
  return shard_key_.Add();
}
inline void TableRoutes::add_shard_key(const ::std::string& value) {
  shard_key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:masterproto.TableRoutes.shard_key)
}
inline void TableRoutes::add_shard_key(const char* value) {
  shard_key_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:masterproto.TableRoutes.shard_key)
}
inline void TableRoutes::add_shard_key(const char* value, size_t size) {
  shard_key_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:masterproto.TableRoutes.shard_key)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
TableRoutes::shard_key() const {
  // @@protoc_insertion_point(field_list:masterproto.TableRoutes.shard_key)
  return shard_key_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
TableRoutes::mutable_shard_key() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.TableRoutes.shard_key)
  return &shard_key_;
}

// repeated .masterproto.RouteChunk routes = 3;
inline int TableRoutes::routes_size() const {
  return routes_.size();
}
inline void TableRoutes::clear_routes() {
  routes_.Clear();
}
inline const ::masterproto::RouteChunk& TableRoutes::routes(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.routes)
  return routes_.Get(index);
}
inline ::masterproto::RouteChunk* TableRoutes::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.routes)
  return routes_.Mutable(index);
}
inline ::masterproto::RouteChunk* TableRoutes::add_routes() {
  // @@protoc_insertion_point(field_add:masterproto.TableRoutes.routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::RouteChunk >*
TableRoutes::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.TableRoutes.routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::RouteChunk >&
TableRoutes::routes() const {
  // @@protoc_insertion_point(field_list:masterproto.TableRoutes.routes)
  return routes_;
}

// string route_data = 4;
inline void TableRoutes::clear_route_data() {
  route_data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutes::route_data() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.route_data)
  return route_data_.GetNoArena();
}
inline void TableRoutes::set_route_data(const ::std::string& value) {
  
  route_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.route_data)
}
#if LANG_CXX11
inline void TableRoutes::set_route_data(::std::string&& value) {
  
  route_data_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutes.route_data)
}
#endif
inline void TableRoutes::set_route_data(const char* value) {
  
  route_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.route_data)
}
inline void TableRoutes::set_route_data(const char* value, size_t size) {
  
  route_data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.route_data)
}
inline ::std::string* TableRoutes::mutable_route_data() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.route_data)
  return route_data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutes::release_route_data() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutes.route_data)
  
  return route_data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutes::set_allocated_route_data(::std::string* route_data) {
  if (route_data != NULL) {
    
  } else {
    
  }
  route_data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), route_data);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutes.route_data)
}

// int32 version = 5;
inline void TableRoutes::clear_version() {
  version_ = 0;
}
inline ::google::protobuf::int32 TableRoutes::version() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.version)
  return version_;
}
inline void TableRoutes::set_version(::google::protobuf::int32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.version)
}

// string md5 = 6;
inline void TableRoutes::clear_md5() {
  md5_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutes::md5() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.md5)
  return md5_.GetNoArena();
}
inline void TableRoutes::set_md5(const ::std::string& value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.md5)
}
#if LANG_CXX11
inline void TableRoutes::set_md5(::std::string&& value) {
  
  md5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutes.md5)
}
#endif
inline void TableRoutes::set_md5(const char* value) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.md5)
}
inline void TableRoutes::set_md5(const char* value, size_t size) {
  
  md5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.md5)
}
inline ::std::string* TableRoutes::mutable_md5() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.md5)
  return md5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutes::release_md5() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutes.md5)
  
  return md5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutes::set_allocated_md5(::std::string* md5) {
  if (md5 != NULL) {
    
  } else {
    
  }
  md5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), md5);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutes.md5)
}

// string route_type = 7;
inline void TableRoutes::clear_route_type() {
  route_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutes::route_type() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.route_type)
  return route_type_.GetNoArena();
}
inline void TableRoutes::set_route_type(const ::std::string& value) {
  
  route_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.route_type)
}
#if LANG_CXX11
inline void TableRoutes::set_route_type(::std::string&& value) {
  
  route_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutes.route_type)
}
#endif
inline void TableRoutes::set_route_type(const char* value) {
  
  route_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.route_type)
}
inline void TableRoutes::set_route_type(const char* value, size_t size) {
  
  route_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.route_type)
}
inline ::std::string* TableRoutes::mutable_route_type() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.route_type)
  return route_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutes::release_route_type() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutes.route_type)
  
  return route_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutes::set_allocated_route_type(::std::string* route_type) {
  if (route_type != NULL) {
    
  } else {
    
  }
  route_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), route_type);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutes.route_type)
}

// string table_type = 8;
inline void TableRoutes::clear_table_type() {
  table_type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& TableRoutes::table_type() const {
  // @@protoc_insertion_point(field_get:masterproto.TableRoutes.table_type)
  return table_type_.GetNoArena();
}
inline void TableRoutes::set_table_type(const ::std::string& value) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.TableRoutes.table_type)
}
#if LANG_CXX11
inline void TableRoutes::set_table_type(::std::string&& value) {
  
  table_type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.TableRoutes.table_type)
}
#endif
inline void TableRoutes::set_table_type(const char* value) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.TableRoutes.table_type)
}
inline void TableRoutes::set_table_type(const char* value, size_t size) {
  
  table_type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.TableRoutes.table_type)
}
inline ::std::string* TableRoutes::mutable_table_type() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.TableRoutes.table_type)
  return table_type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* TableRoutes::release_table_type() {
  // @@protoc_insertion_point(field_release:masterproto.TableRoutes.table_type)
  
  return table_type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void TableRoutes::set_allocated_table_type(::std::string* table_type) {
  if (table_type != NULL) {
    
  } else {
    
  }
  table_type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), table_type);
  // @@protoc_insertion_point(field_set_allocated:masterproto.TableRoutes.table_type)
}

// -------------------------------------------------------------------

// GetClusterRoutesRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetClusterRoutesRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterRoutesRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetClusterRoutesRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetClusterRoutesRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetClusterRoutesRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterRoutesRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesRsp.header)
}

// repeated .masterproto.TableRoutes routes = 2;
inline int GetClusterRoutesRsp::routes_size() const {
  return routes_.size();
}
inline void GetClusterRoutesRsp::clear_routes() {
  routes_.Clear();
}
inline const ::masterproto::TableRoutes& GetClusterRoutesRsp::routes(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRsp.routes)
  return routes_.Get(index);
}
inline ::masterproto::TableRoutes* GetClusterRoutesRsp::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRsp.routes)
  return routes_.Mutable(index);
}
inline ::masterproto::TableRoutes* GetClusterRoutesRsp::add_routes() {
  // @@protoc_insertion_point(field_add:masterproto.GetClusterRoutesRsp.routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutes >*
GetClusterRoutesRsp::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GetClusterRoutesRsp.routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutes >&
GetClusterRoutesRsp::routes() const {
  // @@protoc_insertion_point(field_list:masterproto.GetClusterRoutesRsp.routes)
  return routes_;
}

// -------------------------------------------------------------------

// GetIntersectMigrateJobsReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetIntersectMigrateJobsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetIntersectMigrateJobsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetIntersectMigrateJobsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetIntersectMigrateJobsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetIntersectMigrateJobsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetIntersectMigrateJobsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetIntersectMigrateJobsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetIntersectMigrateJobsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetIntersectMigrateJobsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetIntersectMigrateJobsReq.header)
}

// string cluster_id = 2;
inline void GetIntersectMigrateJobsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetIntersectMigrateJobsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetIntersectMigrateJobsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetIntersectMigrateJobsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetIntersectMigrateJobsReq.cluster_id)
}
#if LANG_CXX11
inline void GetIntersectMigrateJobsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetIntersectMigrateJobsReq.cluster_id)
}
#endif
inline void GetIntersectMigrateJobsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetIntersectMigrateJobsReq.cluster_id)
}
inline void GetIntersectMigrateJobsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetIntersectMigrateJobsReq.cluster_id)
}
inline ::std::string* GetIntersectMigrateJobsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetIntersectMigrateJobsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetIntersectMigrateJobsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetIntersectMigrateJobsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetIntersectMigrateJobsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetIntersectMigrateJobsReq.cluster_id)
}

// int64 time_nano = 3;
inline void GetIntersectMigrateJobsReq::clear_time_nano() {
  time_nano_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetIntersectMigrateJobsReq::time_nano() const {
  // @@protoc_insertion_point(field_get:masterproto.GetIntersectMigrateJobsReq.time_nano)
  return time_nano_;
}
inline void GetIntersectMigrateJobsReq::set_time_nano(::google::protobuf::int64 value) {
  
  time_nano_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetIntersectMigrateJobsReq.time_nano)
}

// -------------------------------------------------------------------

// MigrateInterval

// string src_shard = 3;
inline void MigrateInterval::clear_src_shard() {
  src_shard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateInterval::src_shard() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.src_shard)
  return src_shard_.GetNoArena();
}
inline void MigrateInterval::set_src_shard(const ::std::string& value) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.src_shard)
}
#if LANG_CXX11
inline void MigrateInterval::set_src_shard(::std::string&& value) {
  
  src_shard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateInterval.src_shard)
}
#endif
inline void MigrateInterval::set_src_shard(const char* value) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateInterval.src_shard)
}
inline void MigrateInterval::set_src_shard(const char* value, size_t size) {
  
  src_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateInterval.src_shard)
}
inline ::std::string* MigrateInterval::mutable_src_shard() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateInterval.src_shard)
  return src_shard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateInterval::release_src_shard() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateInterval.src_shard)
  
  return src_shard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateInterval::set_allocated_src_shard(::std::string* src_shard) {
  if (src_shard != NULL) {
    
  } else {
    
  }
  src_shard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), src_shard);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateInterval.src_shard)
}

// string dst_shard = 4;
inline void MigrateInterval::clear_dst_shard() {
  dst_shard_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateInterval::dst_shard() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.dst_shard)
  return dst_shard_.GetNoArena();
}
inline void MigrateInterval::set_dst_shard(const ::std::string& value) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.dst_shard)
}
#if LANG_CXX11
inline void MigrateInterval::set_dst_shard(::std::string&& value) {
  
  dst_shard_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateInterval.dst_shard)
}
#endif
inline void MigrateInterval::set_dst_shard(const char* value) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateInterval.dst_shard)
}
inline void MigrateInterval::set_dst_shard(const char* value, size_t size) {
  
  dst_shard_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateInterval.dst_shard)
}
inline ::std::string* MigrateInterval::mutable_dst_shard() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateInterval.dst_shard)
  return dst_shard_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateInterval::release_dst_shard() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateInterval.dst_shard)
  
  return dst_shard_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateInterval::set_allocated_dst_shard(::std::string* dst_shard) {
  if (dst_shard != NULL) {
    
  } else {
    
  }
  dst_shard_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dst_shard);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateInterval.dst_shard)
}

// string ns = 5;
inline void MigrateInterval::clear_ns() {
  ns_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MigrateInterval::ns() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.ns)
  return ns_.GetNoArena();
}
inline void MigrateInterval::set_ns(const ::std::string& value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.ns)
}
#if LANG_CXX11
inline void MigrateInterval::set_ns(::std::string&& value) {
  
  ns_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.MigrateInterval.ns)
}
#endif
inline void MigrateInterval::set_ns(const char* value) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.MigrateInterval.ns)
}
inline void MigrateInterval::set_ns(const char* value, size_t size) {
  
  ns_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.MigrateInterval.ns)
}
inline ::std::string* MigrateInterval::mutable_ns() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.MigrateInterval.ns)
  return ns_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MigrateInterval::release_ns() {
  // @@protoc_insertion_point(field_release:masterproto.MigrateInterval.ns)
  
  return ns_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MigrateInterval::set_allocated_ns(::std::string* ns) {
  if (ns != NULL) {
    
  } else {
    
  }
  ns_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ns);
  // @@protoc_insertion_point(field_set_allocated:masterproto.MigrateInterval.ns)
}

// repeated int32 chunk_list = 6;
inline int MigrateInterval::chunk_list_size() const {
  return chunk_list_.size();
}
inline void MigrateInterval::clear_chunk_list() {
  chunk_list_.Clear();
}
inline ::google::protobuf::int32 MigrateInterval::chunk_list(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.chunk_list)
  return chunk_list_.Get(index);
}
inline void MigrateInterval::set_chunk_list(int index, ::google::protobuf::int32 value) {
  chunk_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.chunk_list)
}
inline void MigrateInterval::add_chunk_list(::google::protobuf::int32 value) {
  chunk_list_.Add(value);
  // @@protoc_insertion_point(field_add:masterproto.MigrateInterval.chunk_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
MigrateInterval::chunk_list() const {
  // @@protoc_insertion_point(field_list:masterproto.MigrateInterval.chunk_list)
  return chunk_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
MigrateInterval::mutable_chunk_list() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.MigrateInterval.chunk_list)
  return &chunk_list_;
}

// int64 begin_time = 7;
inline void MigrateInterval::clear_begin_time() {
  begin_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MigrateInterval::begin_time() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.begin_time)
  return begin_time_;
}
inline void MigrateInterval::set_begin_time(::google::protobuf::int64 value) {
  
  begin_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.begin_time)
}

// int64 end_time = 8;
inline void MigrateInterval::clear_end_time() {
  end_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MigrateInterval::end_time() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.end_time)
  return end_time_;
}
inline void MigrateInterval::set_end_time(::google::protobuf::int64 value) {
  
  end_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.end_time)
}

// int64 change_time = 9;
inline void MigrateInterval::clear_change_time() {
  change_time_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 MigrateInterval::change_time() const {
  // @@protoc_insertion_point(field_get:masterproto.MigrateInterval.change_time)
  return change_time_;
}
inline void MigrateInterval::set_change_time(::google::protobuf::int64 value) {
  
  change_time_ = value;
  // @@protoc_insertion_point(field_set:masterproto.MigrateInterval.change_time)
}

// -------------------------------------------------------------------

// GetIntersectMigrateJobsRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetIntersectMigrateJobsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetIntersectMigrateJobsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetIntersectMigrateJobsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetIntersectMigrateJobsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetIntersectMigrateJobsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetIntersectMigrateJobsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetIntersectMigrateJobsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetIntersectMigrateJobsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetIntersectMigrateJobsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetIntersectMigrateJobsRsp.header)
}

// repeated .masterproto.MigrateInterval jobs = 2;
inline int GetIntersectMigrateJobsRsp::jobs_size() const {
  return jobs_.size();
}
inline void GetIntersectMigrateJobsRsp::clear_jobs() {
  jobs_.Clear();
}
inline const ::masterproto::MigrateInterval& GetIntersectMigrateJobsRsp::jobs(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GetIntersectMigrateJobsRsp.jobs)
  return jobs_.Get(index);
}
inline ::masterproto::MigrateInterval* GetIntersectMigrateJobsRsp::mutable_jobs(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GetIntersectMigrateJobsRsp.jobs)
  return jobs_.Mutable(index);
}
inline ::masterproto::MigrateInterval* GetIntersectMigrateJobsRsp::add_jobs() {
  // @@protoc_insertion_point(field_add:masterproto.GetIntersectMigrateJobsRsp.jobs)
  return jobs_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateInterval >*
GetIntersectMigrateJobsRsp::mutable_jobs() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GetIntersectMigrateJobsRsp.jobs)
  return &jobs_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::MigrateInterval >&
GetIntersectMigrateJobsRsp::jobs() const {
  // @@protoc_insertion_point(field_list:masterproto.GetIntersectMigrateJobsRsp.jobs)
  return jobs_;
}

// -------------------------------------------------------------------

// GetClusterInfoReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetClusterInfoReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterInfoReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetClusterInfoReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterInfoReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetClusterInfoReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterInfoReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetClusterInfoReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterInfoReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterInfoReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterInfoReq.header)
}

// string cluster_id = 2;
inline void GetClusterInfoReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterInfoReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterInfoReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetClusterInfoReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetClusterInfoReq.cluster_id)
}
#if LANG_CXX11
inline void GetClusterInfoReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetClusterInfoReq.cluster_id)
}
#endif
inline void GetClusterInfoReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetClusterInfoReq.cluster_id)
}
inline void GetClusterInfoReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetClusterInfoReq.cluster_id)
}
inline ::std::string* GetClusterInfoReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterInfoReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterInfoReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterInfoReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterInfoReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterInfoReq.cluster_id)
}

// -------------------------------------------------------------------

// GetClusterInfoRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetClusterInfoRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterInfoRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetClusterInfoRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterInfoRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetClusterInfoRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterInfoRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetClusterInfoRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterInfoRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterInfoRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterInfoRsp.header)
}

// .masterproto.ClusterInfo cluster_info = 2;
inline bool GetClusterInfoRsp::has_cluster_info() const {
  return this != internal_default_instance() && cluster_info_ != NULL;
}
inline void GetClusterInfoRsp::clear_cluster_info() {
  if (GetArenaNoVirtual() == NULL && cluster_info_ != NULL) delete cluster_info_;
  cluster_info_ = NULL;
}
inline const ::masterproto::ClusterInfo& GetClusterInfoRsp::cluster_info() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterInfoRsp.cluster_info)
  return cluster_info_ != NULL ? *cluster_info_
                         : *::masterproto::ClusterInfo::internal_default_instance();
}
inline ::masterproto::ClusterInfo* GetClusterInfoRsp::mutable_cluster_info() {
  
  if (cluster_info_ == NULL) {
    cluster_info_ = new ::masterproto::ClusterInfo;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterInfoRsp.cluster_info)
  return cluster_info_;
}
inline ::masterproto::ClusterInfo* GetClusterInfoRsp::release_cluster_info() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterInfoRsp.cluster_info)
  
  ::masterproto::ClusterInfo* temp = cluster_info_;
  cluster_info_ = NULL;
  return temp;
}
inline void GetClusterInfoRsp::set_allocated_cluster_info(::masterproto::ClusterInfo* cluster_info) {
  delete cluster_info_;
  cluster_info_ = cluster_info;
  if (cluster_info) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterInfoRsp.cluster_info)
}

// -------------------------------------------------------------------

// SetProxyNotifyInfoReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetProxyNotifyInfoReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetProxyNotifyInfoReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetProxyNotifyInfoReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetProxyNotifyInfoReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetProxyNotifyInfoReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetProxyNotifyInfoReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetProxyNotifyInfoReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetProxyNotifyInfoReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetProxyNotifyInfoReq.header)
}

// int32 region_id = 2;
inline void SetProxyNotifyInfoReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 SetProxyNotifyInfoReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoReq.region_id)
  return region_id_;
}
inline void SetProxyNotifyInfoReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetProxyNotifyInfoReq.region_id)
}

// int32 set_id = 3;
inline void SetProxyNotifyInfoReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 SetProxyNotifyInfoReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoReq.set_id)
  return set_id_;
}
inline void SetProxyNotifyInfoReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetProxyNotifyInfoReq.set_id)
}

// .masterproto.EnumProxyNotifyType method = 4;
inline void SetProxyNotifyInfoReq::clear_method() {
  method_ = 0;
}
inline ::masterproto::EnumProxyNotifyType SetProxyNotifyInfoReq::method() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoReq.method)
  return static_cast< ::masterproto::EnumProxyNotifyType >(method_);
}
inline void SetProxyNotifyInfoReq::set_method(::masterproto::EnumProxyNotifyType value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetProxyNotifyInfoReq.method)
}

// string notify_url = 5;
inline void SetProxyNotifyInfoReq::clear_notify_url() {
  notify_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetProxyNotifyInfoReq::notify_url() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoReq.notify_url)
  return notify_url_.GetNoArena();
}
inline void SetProxyNotifyInfoReq::set_notify_url(const ::std::string& value) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetProxyNotifyInfoReq.notify_url)
}
#if LANG_CXX11
inline void SetProxyNotifyInfoReq::set_notify_url(::std::string&& value) {
  
  notify_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetProxyNotifyInfoReq.notify_url)
}
#endif
inline void SetProxyNotifyInfoReq::set_notify_url(const char* value) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetProxyNotifyInfoReq.notify_url)
}
inline void SetProxyNotifyInfoReq::set_notify_url(const char* value, size_t size) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetProxyNotifyInfoReq.notify_url)
}
inline ::std::string* SetProxyNotifyInfoReq::mutable_notify_url() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetProxyNotifyInfoReq.notify_url)
  return notify_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetProxyNotifyInfoReq::release_notify_url() {
  // @@protoc_insertion_point(field_release:masterproto.SetProxyNotifyInfoReq.notify_url)
  
  return notify_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetProxyNotifyInfoReq::set_allocated_notify_url(::std::string* notify_url) {
  if (notify_url != NULL) {
    
  } else {
    
  }
  notify_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notify_url);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetProxyNotifyInfoReq.notify_url)
}

// -------------------------------------------------------------------

// SetProxyNotifyInfoRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetProxyNotifyInfoRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetProxyNotifyInfoRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetProxyNotifyInfoRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetProxyNotifyInfoRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetProxyNotifyInfoRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetProxyNotifyInfoRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetProxyNotifyInfoRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetProxyNotifyInfoRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetProxyNotifyInfoRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetProxyNotifyInfoRsp.header)
}

// -------------------------------------------------------------------

// GetProxyNotifyInfoReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetProxyNotifyInfoReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetProxyNotifyInfoReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetProxyNotifyInfoReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetProxyNotifyInfoReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetProxyNotifyInfoReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetProxyNotifyInfoReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetProxyNotifyInfoReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetProxyNotifyInfoReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetProxyNotifyInfoReq.header)
}

// int32 region_id = 2;
inline void GetProxyNotifyInfoReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 GetProxyNotifyInfoReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoReq.region_id)
  return region_id_;
}
inline void GetProxyNotifyInfoReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetProxyNotifyInfoReq.region_id)
}

// int32 set_id = 3;
inline void GetProxyNotifyInfoReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 GetProxyNotifyInfoReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoReq.set_id)
  return set_id_;
}
inline void GetProxyNotifyInfoReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetProxyNotifyInfoReq.set_id)
}

// -------------------------------------------------------------------

// GetProxyNotifyInfoRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetProxyNotifyInfoRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetProxyNotifyInfoRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetProxyNotifyInfoRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetProxyNotifyInfoRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetProxyNotifyInfoRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetProxyNotifyInfoRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetProxyNotifyInfoRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetProxyNotifyInfoRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetProxyNotifyInfoRsp.header)
}

// .masterproto.EnumProxyNotifyType method = 2;
inline void GetProxyNotifyInfoRsp::clear_method() {
  method_ = 0;
}
inline ::masterproto::EnumProxyNotifyType GetProxyNotifyInfoRsp::method() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoRsp.method)
  return static_cast< ::masterproto::EnumProxyNotifyType >(method_);
}
inline void GetProxyNotifyInfoRsp::set_method(::masterproto::EnumProxyNotifyType value) {
  
  method_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetProxyNotifyInfoRsp.method)
}

// string notify_url = 5;
inline void GetProxyNotifyInfoRsp::clear_notify_url() {
  notify_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetProxyNotifyInfoRsp::notify_url() const {
  // @@protoc_insertion_point(field_get:masterproto.GetProxyNotifyInfoRsp.notify_url)
  return notify_url_.GetNoArena();
}
inline void GetProxyNotifyInfoRsp::set_notify_url(const ::std::string& value) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetProxyNotifyInfoRsp.notify_url)
}
#if LANG_CXX11
inline void GetProxyNotifyInfoRsp::set_notify_url(::std::string&& value) {
  
  notify_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetProxyNotifyInfoRsp.notify_url)
}
#endif
inline void GetProxyNotifyInfoRsp::set_notify_url(const char* value) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetProxyNotifyInfoRsp.notify_url)
}
inline void GetProxyNotifyInfoRsp::set_notify_url(const char* value, size_t size) {
  
  notify_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetProxyNotifyInfoRsp.notify_url)
}
inline ::std::string* GetProxyNotifyInfoRsp::mutable_notify_url() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetProxyNotifyInfoRsp.notify_url)
  return notify_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetProxyNotifyInfoRsp::release_notify_url() {
  // @@protoc_insertion_point(field_release:masterproto.GetProxyNotifyInfoRsp.notify_url)
  
  return notify_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetProxyNotifyInfoRsp::set_allocated_notify_url(::std::string* notify_url) {
  if (notify_url != NULL) {
    
  } else {
    
  }
  notify_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), notify_url);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetProxyNotifyInfoRsp.notify_url)
}

// -------------------------------------------------------------------

// SetClusterBanReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetClusterBanReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterBanReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetClusterBanReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBanReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetClusterBanReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBanReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetClusterBanReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBanReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterBanReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBanReq.header)
}

// string cluster_id = 2;
inline void SetClusterBanReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetClusterBanReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBanReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void SetClusterBanReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBanReq.cluster_id)
}
#if LANG_CXX11
inline void SetClusterBanReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetClusterBanReq.cluster_id)
}
#endif
inline void SetClusterBanReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetClusterBanReq.cluster_id)
}
inline void SetClusterBanReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetClusterBanReq.cluster_id)
}
inline ::std::string* SetClusterBanReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBanReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetClusterBanReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBanReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetClusterBanReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBanReq.cluster_id)
}

// bool ban_read = 3;
inline void SetClusterBanReq::clear_ban_read() {
  ban_read_ = false;
}
inline bool SetClusterBanReq::ban_read() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBanReq.ban_read)
  return ban_read_;
}
inline void SetClusterBanReq::set_ban_read(bool value) {
  
  ban_read_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBanReq.ban_read)
}

// bool ban_write = 4;
inline void SetClusterBanReq::clear_ban_write() {
  ban_write_ = false;
}
inline bool SetClusterBanReq::ban_write() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBanReq.ban_write)
  return ban_write_;
}
inline void SetClusterBanReq::set_ban_write(bool value) {
  
  ban_write_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBanReq.ban_write)
}

// -------------------------------------------------------------------

// SetClusterBanRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetClusterBanRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterBanRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetClusterBanRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBanRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetClusterBanRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBanRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetClusterBanRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBanRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterBanRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBanRsp.header)
}

// -------------------------------------------------------------------

// GetClusterBanReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetClusterBanReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterBanReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetClusterBanReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBanReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetClusterBanReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBanReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetClusterBanReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBanReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterBanReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBanReq.header)
}

// string cluster_id = 2;
inline void GetClusterBanReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterBanReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBanReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetClusterBanReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBanReq.cluster_id)
}
#if LANG_CXX11
inline void GetClusterBanReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetClusterBanReq.cluster_id)
}
#endif
inline void GetClusterBanReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetClusterBanReq.cluster_id)
}
inline void GetClusterBanReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetClusterBanReq.cluster_id)
}
inline ::std::string* GetClusterBanReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBanReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterBanReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBanReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterBanReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBanReq.cluster_id)
}

// -------------------------------------------------------------------

// GetClusterBanRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetClusterBanRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterBanRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetClusterBanRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBanRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetClusterBanRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBanRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetClusterBanRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBanRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterBanRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBanRsp.header)
}

// bool ban_read = 2;
inline void GetClusterBanRsp::clear_ban_read() {
  ban_read_ = false;
}
inline bool GetClusterBanRsp::ban_read() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBanRsp.ban_read)
  return ban_read_;
}
inline void GetClusterBanRsp::set_ban_read(bool value) {
  
  ban_read_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBanRsp.ban_read)
}

// bool ban_write = 3;
inline void GetClusterBanRsp::clear_ban_write() {
  ban_write_ = false;
}
inline bool GetClusterBanRsp::ban_write() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBanRsp.ban_write)
  return ban_write_;
}
inline void GetClusterBanRsp::set_ban_write(bool value) {
  
  ban_write_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBanRsp.ban_write)
}

// -------------------------------------------------------------------

// SetVersionReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetVersionReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetVersionReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetVersionReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetVersionReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetVersionReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetVersionReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetVersionReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetVersionReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetVersionReq.header)
}

// int32 region_id = 2;
inline void SetVersionReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 SetVersionReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.region_id)
  return region_id_;
}
inline void SetVersionReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetVersionReq.region_id)
}

// int32 set_id = 3;
inline void SetVersionReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 SetVersionReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.set_id)
  return set_id_;
}
inline void SetVersionReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetVersionReq.set_id)
}

// string mongod_subversion = 4;
inline void SetVersionReq::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetVersionReq::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void SetVersionReq::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetVersionReq.mongod_subversion)
}
#if LANG_CXX11
inline void SetVersionReq::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetVersionReq.mongod_subversion)
}
#endif
inline void SetVersionReq::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetVersionReq.mongod_subversion)
}
inline void SetVersionReq::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetVersionReq.mongod_subversion)
}
inline ::std::string* SetVersionReq::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetVersionReq.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetVersionReq::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.SetVersionReq.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetVersionReq::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetVersionReq.mongod_subversion)
}

// string proxy_version = 5;
inline void SetVersionReq::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetVersionReq::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void SetVersionReq::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetVersionReq.proxy_version)
}
#if LANG_CXX11
inline void SetVersionReq::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetVersionReq.proxy_version)
}
#endif
inline void SetVersionReq::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetVersionReq.proxy_version)
}
inline void SetVersionReq::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetVersionReq.proxy_version)
}
inline ::std::string* SetVersionReq::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetVersionReq.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetVersionReq::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.SetVersionReq.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetVersionReq::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetVersionReq.proxy_version)
}

// string dynamo_proxy_version = 6;
inline void SetVersionReq::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetVersionReq::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionReq.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void SetVersionReq::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetVersionReq.dynamo_proxy_version)
}
#if LANG_CXX11
inline void SetVersionReq::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetVersionReq.dynamo_proxy_version)
}
#endif
inline void SetVersionReq::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetVersionReq.dynamo_proxy_version)
}
inline void SetVersionReq::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetVersionReq.dynamo_proxy_version)
}
inline ::std::string* SetVersionReq::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetVersionReq.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetVersionReq::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.SetVersionReq.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetVersionReq::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetVersionReq.dynamo_proxy_version)
}

// -------------------------------------------------------------------

// SetVersionRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetVersionRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetVersionRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetVersionRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetVersionRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetVersionRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetVersionRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetVersionRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetVersionRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetVersionRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetVersionRsp.header)
}

// -------------------------------------------------------------------

// GetVersionReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetVersionReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetVersionReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetVersionReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetVersionReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetVersionReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetVersionReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetVersionReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetVersionReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetVersionReq.header)
}

// int32 region_id = 2;
inline void GetVersionReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 GetVersionReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionReq.region_id)
  return region_id_;
}
inline void GetVersionReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetVersionReq.region_id)
}

// int32 set_id = 3;
inline void GetVersionReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 GetVersionReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionReq.set_id)
  return set_id_;
}
inline void GetVersionReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetVersionReq.set_id)
}

// -------------------------------------------------------------------

// GetVersionRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetVersionRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetVersionRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetVersionRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetVersionRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetVersionRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetVersionRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetVersionRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetVersionRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetVersionRsp.header)
}

// string mongod_subversion = 2;
inline void GetVersionRsp::clear_mongod_subversion() {
  mongod_subversion_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVersionRsp::mongod_subversion() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionRsp.mongod_subversion)
  return mongod_subversion_.GetNoArena();
}
inline void GetVersionRsp::set_mongod_subversion(const ::std::string& value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetVersionRsp.mongod_subversion)
}
#if LANG_CXX11
inline void GetVersionRsp::set_mongod_subversion(::std::string&& value) {
  
  mongod_subversion_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetVersionRsp.mongod_subversion)
}
#endif
inline void GetVersionRsp::set_mongod_subversion(const char* value) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetVersionRsp.mongod_subversion)
}
inline void GetVersionRsp::set_mongod_subversion(const char* value, size_t size) {
  
  mongod_subversion_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetVersionRsp.mongod_subversion)
}
inline ::std::string* GetVersionRsp::mutable_mongod_subversion() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetVersionRsp.mongod_subversion)
  return mongod_subversion_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVersionRsp::release_mongod_subversion() {
  // @@protoc_insertion_point(field_release:masterproto.GetVersionRsp.mongod_subversion)
  
  return mongod_subversion_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVersionRsp::set_allocated_mongod_subversion(::std::string* mongod_subversion) {
  if (mongod_subversion != NULL) {
    
  } else {
    
  }
  mongod_subversion_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mongod_subversion);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetVersionRsp.mongod_subversion)
}

// string proxy_version = 3;
inline void GetVersionRsp::clear_proxy_version() {
  proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVersionRsp::proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionRsp.proxy_version)
  return proxy_version_.GetNoArena();
}
inline void GetVersionRsp::set_proxy_version(const ::std::string& value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetVersionRsp.proxy_version)
}
#if LANG_CXX11
inline void GetVersionRsp::set_proxy_version(::std::string&& value) {
  
  proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetVersionRsp.proxy_version)
}
#endif
inline void GetVersionRsp::set_proxy_version(const char* value) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetVersionRsp.proxy_version)
}
inline void GetVersionRsp::set_proxy_version(const char* value, size_t size) {
  
  proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetVersionRsp.proxy_version)
}
inline ::std::string* GetVersionRsp::mutable_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetVersionRsp.proxy_version)
  return proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVersionRsp::release_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.GetVersionRsp.proxy_version)
  
  return proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVersionRsp::set_allocated_proxy_version(::std::string* proxy_version) {
  if (proxy_version != NULL) {
    
  } else {
    
  }
  proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetVersionRsp.proxy_version)
}

// string dynamo_proxy_version = 4;
inline void GetVersionRsp::clear_dynamo_proxy_version() {
  dynamo_proxy_version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetVersionRsp::dynamo_proxy_version() const {
  // @@protoc_insertion_point(field_get:masterproto.GetVersionRsp.dynamo_proxy_version)
  return dynamo_proxy_version_.GetNoArena();
}
inline void GetVersionRsp::set_dynamo_proxy_version(const ::std::string& value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetVersionRsp.dynamo_proxy_version)
}
#if LANG_CXX11
inline void GetVersionRsp::set_dynamo_proxy_version(::std::string&& value) {
  
  dynamo_proxy_version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetVersionRsp.dynamo_proxy_version)
}
#endif
inline void GetVersionRsp::set_dynamo_proxy_version(const char* value) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetVersionRsp.dynamo_proxy_version)
}
inline void GetVersionRsp::set_dynamo_proxy_version(const char* value, size_t size) {
  
  dynamo_proxy_version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetVersionRsp.dynamo_proxy_version)
}
inline ::std::string* GetVersionRsp::mutable_dynamo_proxy_version() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetVersionRsp.dynamo_proxy_version)
  return dynamo_proxy_version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetVersionRsp::release_dynamo_proxy_version() {
  // @@protoc_insertion_point(field_release:masterproto.GetVersionRsp.dynamo_proxy_version)
  
  return dynamo_proxy_version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetVersionRsp::set_allocated_dynamo_proxy_version(::std::string* dynamo_proxy_version) {
  if (dynamo_proxy_version != NULL) {
    
  } else {
    
  }
  dynamo_proxy_version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dynamo_proxy_version);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetVersionRsp.dynamo_proxy_version)
}

// -------------------------------------------------------------------

// ResizeOplogReq

// .cmongoproto.ReqHeader header = 1;
inline bool ResizeOplogReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResizeOplogReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& ResizeOplogReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* ResizeOplogReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeOplogReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* ResizeOplogReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeOplogReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ResizeOplogReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeOplogReq.header)
}

// int32 region_id = 2;
inline void ResizeOplogReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 ResizeOplogReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogReq.region_id)
  return region_id_;
}
inline void ResizeOplogReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeOplogReq.region_id)
}

// int32 set_id = 3;
inline void ResizeOplogReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 ResizeOplogReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogReq.set_id)
  return set_id_;
}
inline void ResizeOplogReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeOplogReq.set_id)
}

// string cluster_id = 4;
inline void ResizeOplogReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ResizeOplogReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void ResizeOplogReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.ResizeOplogReq.cluster_id)
}
#if LANG_CXX11
inline void ResizeOplogReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.ResizeOplogReq.cluster_id)
}
#endif
inline void ResizeOplogReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.ResizeOplogReq.cluster_id)
}
inline void ResizeOplogReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.ResizeOplogReq.cluster_id)
}
inline ::std::string* ResizeOplogReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeOplogReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ResizeOplogReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeOplogReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ResizeOplogReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeOplogReq.cluster_id)
}

// int32 size_mB = 5;
inline void ResizeOplogReq::clear_size_mb() {
  size_mb_ = 0;
}
inline ::google::protobuf::int32 ResizeOplogReq::size_mb() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogReq.size_mB)
  return size_mb_;
}
inline void ResizeOplogReq::set_size_mb(::google::protobuf::int32 value) {
  
  size_mb_ = value;
  // @@protoc_insertion_point(field_set:masterproto.ResizeOplogReq.size_mB)
}

// -------------------------------------------------------------------

// ResizeOplogRsp

// .cmongoproto.ResHeader header = 1;
inline bool ResizeOplogRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void ResizeOplogRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& ResizeOplogRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.ResizeOplogRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* ResizeOplogRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.ResizeOplogRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* ResizeOplogRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.ResizeOplogRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void ResizeOplogRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.ResizeOplogRsp.header)
}

// -------------------------------------------------------------------

// RestartContainerReq

// .cmongoproto.ReqHeader header = 1;
inline bool RestartContainerReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestartContainerReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& RestartContainerReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestartContainerReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* RestartContainerReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestartContainerReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* RestartContainerReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestartContainerReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestartContainerReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestartContainerReq.header)
}

// string cluster_id = 2;
inline void RestartContainerReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestartContainerReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.RestartContainerReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void RestartContainerReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestartContainerReq.cluster_id)
}
#if LANG_CXX11
inline void RestartContainerReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestartContainerReq.cluster_id)
}
#endif
inline void RestartContainerReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestartContainerReq.cluster_id)
}
inline void RestartContainerReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestartContainerReq.cluster_id)
}
inline ::std::string* RestartContainerReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestartContainerReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestartContainerReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.RestartContainerReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestartContainerReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestartContainerReq.cluster_id)
}

// .cmongoproto.MongoType container_type = 3;
inline void RestartContainerReq::clear_container_type() {
  container_type_ = 0;
}
inline ::cmongoproto::MongoType RestartContainerReq::container_type() const {
  // @@protoc_insertion_point(field_get:masterproto.RestartContainerReq.container_type)
  return static_cast< ::cmongoproto::MongoType >(container_type_);
}
inline void RestartContainerReq::set_container_type(::cmongoproto::MongoType value) {
  
  container_type_ = value;
  // @@protoc_insertion_point(field_set:masterproto.RestartContainerReq.container_type)
}

// string container_name = 4;
inline void RestartContainerReq::clear_container_name() {
  container_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RestartContainerReq::container_name() const {
  // @@protoc_insertion_point(field_get:masterproto.RestartContainerReq.container_name)
  return container_name_.GetNoArena();
}
inline void RestartContainerReq::set_container_name(const ::std::string& value) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.RestartContainerReq.container_name)
}
#if LANG_CXX11
inline void RestartContainerReq::set_container_name(::std::string&& value) {
  
  container_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.RestartContainerReq.container_name)
}
#endif
inline void RestartContainerReq::set_container_name(const char* value) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.RestartContainerReq.container_name)
}
inline void RestartContainerReq::set_container_name(const char* value, size_t size) {
  
  container_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.RestartContainerReq.container_name)
}
inline ::std::string* RestartContainerReq::mutable_container_name() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.RestartContainerReq.container_name)
  return container_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RestartContainerReq::release_container_name() {
  // @@protoc_insertion_point(field_release:masterproto.RestartContainerReq.container_name)
  
  return container_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RestartContainerReq::set_allocated_container_name(::std::string* container_name) {
  if (container_name != NULL) {
    
  } else {
    
  }
  container_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), container_name);
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestartContainerReq.container_name)
}

// -------------------------------------------------------------------

// RestartContainerRsp

// .cmongoproto.ResHeader header = 1;
inline bool RestartContainerRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void RestartContainerRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& RestartContainerRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.RestartContainerRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* RestartContainerRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.RestartContainerRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* RestartContainerRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.RestartContainerRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void RestartContainerRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.RestartContainerRsp.header)
}

// -------------------------------------------------------------------

// SetClusterMaxConnsReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetClusterMaxConnsReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterMaxConnsReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetClusterMaxConnsReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetClusterMaxConnsReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterMaxConnsReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetClusterMaxConnsReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterMaxConnsReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterMaxConnsReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterMaxConnsReq.header)
}

// int32 region_id = 2;
inline void SetClusterMaxConnsReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 SetClusterMaxConnsReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsReq.region_id)
  return region_id_;
}
inline void SetClusterMaxConnsReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterMaxConnsReq.region_id)
}

// int32 set_id = 3;
inline void SetClusterMaxConnsReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 SetClusterMaxConnsReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsReq.set_id)
  return set_id_;
}
inline void SetClusterMaxConnsReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterMaxConnsReq.set_id)
}

// string cluster_id = 4;
inline void SetClusterMaxConnsReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetClusterMaxConnsReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void SetClusterMaxConnsReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetClusterMaxConnsReq.cluster_id)
}
#if LANG_CXX11
inline void SetClusterMaxConnsReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetClusterMaxConnsReq.cluster_id)
}
#endif
inline void SetClusterMaxConnsReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetClusterMaxConnsReq.cluster_id)
}
inline void SetClusterMaxConnsReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetClusterMaxConnsReq.cluster_id)
}
inline ::std::string* SetClusterMaxConnsReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterMaxConnsReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetClusterMaxConnsReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterMaxConnsReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetClusterMaxConnsReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterMaxConnsReq.cluster_id)
}

// int32 conn_num = 5;
inline void SetClusterMaxConnsReq::clear_conn_num() {
  conn_num_ = 0;
}
inline ::google::protobuf::int32 SetClusterMaxConnsReq::conn_num() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsReq.conn_num)
  return conn_num_;
}
inline void SetClusterMaxConnsReq::set_conn_num(::google::protobuf::int32 value) {
  
  conn_num_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterMaxConnsReq.conn_num)
}

// -------------------------------------------------------------------

// SetClusterMaxConnsRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetClusterMaxConnsRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterMaxConnsRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetClusterMaxConnsRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterMaxConnsRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetClusterMaxConnsRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterMaxConnsRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetClusterMaxConnsRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterMaxConnsRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterMaxConnsRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterMaxConnsRsp.header)
}

// -------------------------------------------------------------------

// GetRegionBackupConfigReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetRegionBackupConfigReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetRegionBackupConfigReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetRegionBackupConfigReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetRegionBackupConfigReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetRegionBackupConfigReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetRegionBackupConfigReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetRegionBackupConfigReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetRegionBackupConfigReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetRegionBackupConfigReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetRegionBackupConfigReq.header)
}

// int32 region_id = 2;
inline void GetRegionBackupConfigReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 GetRegionBackupConfigReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetRegionBackupConfigReq.region_id)
  return region_id_;
}
inline void GetRegionBackupConfigReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetRegionBackupConfigReq.region_id)
}

// -------------------------------------------------------------------

// GetRegionBackupConfigRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetRegionBackupConfigRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetRegionBackupConfigRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetRegionBackupConfigRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetRegionBackupConfigRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetRegionBackupConfigRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetRegionBackupConfigRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetRegionBackupConfigRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetRegionBackupConfigRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetRegionBackupConfigRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetRegionBackupConfigRsp.header)
}

// .masterproto.AutoBackup auto_backup = 2;
inline void GetRegionBackupConfigRsp::clear_auto_backup() {
  auto_backup_ = 0;
}
inline ::masterproto::AutoBackup GetRegionBackupConfigRsp::auto_backup() const {
  // @@protoc_insertion_point(field_get:masterproto.GetRegionBackupConfigRsp.auto_backup)
  return static_cast< ::masterproto::AutoBackup >(auto_backup_);
}
inline void GetRegionBackupConfigRsp::set_auto_backup(::masterproto::AutoBackup value) {
  
  auto_backup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetRegionBackupConfigRsp.auto_backup)
}

// -------------------------------------------------------------------

// SetRegionBackupConfigReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetRegionBackupConfigReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetRegionBackupConfigReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetRegionBackupConfigReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetRegionBackupConfigReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetRegionBackupConfigReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetRegionBackupConfigReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetRegionBackupConfigReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetRegionBackupConfigReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetRegionBackupConfigReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetRegionBackupConfigReq.header)
}

// int32 region_id = 2;
inline void SetRegionBackupConfigReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 SetRegionBackupConfigReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetRegionBackupConfigReq.region_id)
  return region_id_;
}
inline void SetRegionBackupConfigReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetRegionBackupConfigReq.region_id)
}

// .masterproto.AutoBackup auto_backup = 4;
inline void SetRegionBackupConfigReq::clear_auto_backup() {
  auto_backup_ = 0;
}
inline ::masterproto::AutoBackup SetRegionBackupConfigReq::auto_backup() const {
  // @@protoc_insertion_point(field_get:masterproto.SetRegionBackupConfigReq.auto_backup)
  return static_cast< ::masterproto::AutoBackup >(auto_backup_);
}
inline void SetRegionBackupConfigReq::set_auto_backup(::masterproto::AutoBackup value) {
  
  auto_backup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetRegionBackupConfigReq.auto_backup)
}

// -------------------------------------------------------------------

// SetRegionBackupConfigRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetRegionBackupConfigRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetRegionBackupConfigRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetRegionBackupConfigRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetRegionBackupConfigRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetRegionBackupConfigRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetRegionBackupConfigRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetRegionBackupConfigRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetRegionBackupConfigRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetRegionBackupConfigRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetRegionBackupConfigRsp.header)
}

// -------------------------------------------------------------------

// GetClusterBackupConfigReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetClusterBackupConfigReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterBackupConfigReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetClusterBackupConfigReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetClusterBackupConfigReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBackupConfigReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetClusterBackupConfigReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBackupConfigReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterBackupConfigReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBackupConfigReq.header)
}

// int32 region_id = 2;
inline void GetClusterBackupConfigReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 GetClusterBackupConfigReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigReq.region_id)
  return region_id_;
}
inline void GetClusterBackupConfigReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBackupConfigReq.region_id)
}

// int32 set_id = 3;
inline void GetClusterBackupConfigReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 GetClusterBackupConfigReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigReq.set_id)
  return set_id_;
}
inline void GetClusterBackupConfigReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBackupConfigReq.set_id)
}

// string cluster_id = 4;
inline void GetClusterBackupConfigReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterBackupConfigReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetClusterBackupConfigReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBackupConfigReq.cluster_id)
}
#if LANG_CXX11
inline void GetClusterBackupConfigReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetClusterBackupConfigReq.cluster_id)
}
#endif
inline void GetClusterBackupConfigReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetClusterBackupConfigReq.cluster_id)
}
inline void GetClusterBackupConfigReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetClusterBackupConfigReq.cluster_id)
}
inline ::std::string* GetClusterBackupConfigReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBackupConfigReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterBackupConfigReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBackupConfigReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterBackupConfigReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBackupConfigReq.cluster_id)
}

// -------------------------------------------------------------------

// GetClusterBackupConfigRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetClusterBackupConfigRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterBackupConfigRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetClusterBackupConfigRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetClusterBackupConfigRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterBackupConfigRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetClusterBackupConfigRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterBackupConfigRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterBackupConfigRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterBackupConfigRsp.header)
}

// .masterproto.AutoBackup auto_backup = 2;
inline void GetClusterBackupConfigRsp::clear_auto_backup() {
  auto_backup_ = 0;
}
inline ::masterproto::AutoBackup GetClusterBackupConfigRsp::auto_backup() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigRsp.auto_backup)
  return static_cast< ::masterproto::AutoBackup >(auto_backup_);
}
inline void GetClusterBackupConfigRsp::set_auto_backup(::masterproto::AutoBackup value) {
  
  auto_backup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBackupConfigRsp.auto_backup)
}

// int32 time_interval = 3;
inline void GetClusterBackupConfigRsp::clear_time_interval() {
  time_interval_ = 0;
}
inline ::google::protobuf::int32 GetClusterBackupConfigRsp::time_interval() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterBackupConfigRsp.time_interval)
  return time_interval_;
}
inline void GetClusterBackupConfigRsp::set_time_interval(::google::protobuf::int32 value) {
  
  time_interval_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterBackupConfigRsp.time_interval)
}

// -------------------------------------------------------------------

// SetClusterBackupConfigReq

// .cmongoproto.ReqHeader header = 1;
inline bool SetClusterBackupConfigReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterBackupConfigReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& SetClusterBackupConfigReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* SetClusterBackupConfigReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBackupConfigReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* SetClusterBackupConfigReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBackupConfigReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterBackupConfigReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBackupConfigReq.header)
}

// int32 region_id = 2;
inline void SetClusterBackupConfigReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 SetClusterBackupConfigReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.region_id)
  return region_id_;
}
inline void SetClusterBackupConfigReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBackupConfigReq.region_id)
}

// int32 set_id = 3;
inline void SetClusterBackupConfigReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 SetClusterBackupConfigReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.set_id)
  return set_id_;
}
inline void SetClusterBackupConfigReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBackupConfigReq.set_id)
}

// string cluster_id = 4;
inline void SetClusterBackupConfigReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SetClusterBackupConfigReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void SetClusterBackupConfigReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBackupConfigReq.cluster_id)
}
#if LANG_CXX11
inline void SetClusterBackupConfigReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.SetClusterBackupConfigReq.cluster_id)
}
#endif
inline void SetClusterBackupConfigReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.SetClusterBackupConfigReq.cluster_id)
}
inline void SetClusterBackupConfigReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.SetClusterBackupConfigReq.cluster_id)
}
inline ::std::string* SetClusterBackupConfigReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBackupConfigReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SetClusterBackupConfigReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBackupConfigReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SetClusterBackupConfigReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBackupConfigReq.cluster_id)
}

// .masterproto.AutoBackup auto_backup = 5;
inline void SetClusterBackupConfigReq::clear_auto_backup() {
  auto_backup_ = 0;
}
inline ::masterproto::AutoBackup SetClusterBackupConfigReq::auto_backup() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.auto_backup)
  return static_cast< ::masterproto::AutoBackup >(auto_backup_);
}
inline void SetClusterBackupConfigReq::set_auto_backup(::masterproto::AutoBackup value) {
  
  auto_backup_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBackupConfigReq.auto_backup)
}

// int32 time_interval = 6;
inline void SetClusterBackupConfigReq::clear_time_interval() {
  time_interval_ = 0;
}
inline ::google::protobuf::int32 SetClusterBackupConfigReq::time_interval() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigReq.time_interval)
  return time_interval_;
}
inline void SetClusterBackupConfigReq::set_time_interval(::google::protobuf::int32 value) {
  
  time_interval_ = value;
  // @@protoc_insertion_point(field_set:masterproto.SetClusterBackupConfigReq.time_interval)
}

// -------------------------------------------------------------------

// SetClusterBackupConfigRsp

// .cmongoproto.ResHeader header = 1;
inline bool SetClusterBackupConfigRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void SetClusterBackupConfigRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& SetClusterBackupConfigRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.SetClusterBackupConfigRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* SetClusterBackupConfigRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.SetClusterBackupConfigRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* SetClusterBackupConfigRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.SetClusterBackupConfigRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void SetClusterBackupConfigRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.SetClusterBackupConfigRsp.header)
}

// -------------------------------------------------------------------

// DelClusterBackupConfigReq

// .cmongoproto.ReqHeader header = 1;
inline bool DelClusterBackupConfigReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelClusterBackupConfigReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& DelClusterBackupConfigReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterBackupConfigReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* DelClusterBackupConfigReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterBackupConfigReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* DelClusterBackupConfigReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterBackupConfigReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelClusterBackupConfigReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterBackupConfigReq.header)
}

// int32 region_id = 2;
inline void DelClusterBackupConfigReq::clear_region_id() {
  region_id_ = 0;
}
inline ::google::protobuf::int32 DelClusterBackupConfigReq::region_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterBackupConfigReq.region_id)
  return region_id_;
}
inline void DelClusterBackupConfigReq::set_region_id(::google::protobuf::int32 value) {
  
  region_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterBackupConfigReq.region_id)
}

// int32 set_id = 3;
inline void DelClusterBackupConfigReq::clear_set_id() {
  set_id_ = 0;
}
inline ::google::protobuf::int32 DelClusterBackupConfigReq::set_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterBackupConfigReq.set_id)
  return set_id_;
}
inline void DelClusterBackupConfigReq::set_set_id(::google::protobuf::int32 value) {
  
  set_id_ = value;
  // @@protoc_insertion_point(field_set:masterproto.DelClusterBackupConfigReq.set_id)
}

// string cluster_id = 4;
inline void DelClusterBackupConfigReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& DelClusterBackupConfigReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterBackupConfigReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void DelClusterBackupConfigReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.DelClusterBackupConfigReq.cluster_id)
}
#if LANG_CXX11
inline void DelClusterBackupConfigReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.DelClusterBackupConfigReq.cluster_id)
}
#endif
inline void DelClusterBackupConfigReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.DelClusterBackupConfigReq.cluster_id)
}
inline void DelClusterBackupConfigReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.DelClusterBackupConfigReq.cluster_id)
}
inline ::std::string* DelClusterBackupConfigReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterBackupConfigReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DelClusterBackupConfigReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterBackupConfigReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DelClusterBackupConfigReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterBackupConfigReq.cluster_id)
}

// -------------------------------------------------------------------

// DelClusterBackupConfigRsp

// .cmongoproto.ResHeader header = 1;
inline bool DelClusterBackupConfigRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void DelClusterBackupConfigRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& DelClusterBackupConfigRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.DelClusterBackupConfigRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* DelClusterBackupConfigRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.DelClusterBackupConfigRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* DelClusterBackupConfigRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.DelClusterBackupConfigRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void DelClusterBackupConfigRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.DelClusterBackupConfigRsp.header)
}

// -------------------------------------------------------------------

// GetClusterRoutesRawReq

// .cmongoproto.ReqHeader header = 1;
inline bool GetClusterRoutesRawReq::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterRoutesRawReq::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ReqHeader& GetClusterRoutesRawReq::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRawReq.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ReqHeader::internal_default_instance();
}
inline ::cmongoproto::ReqHeader* GetClusterRoutesRawReq::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ReqHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRawReq.header)
  return header_;
}
inline ::cmongoproto::ReqHeader* GetClusterRoutesRawReq::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesRawReq.header)
  
  ::cmongoproto::ReqHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterRoutesRawReq::set_allocated_header(::cmongoproto::ReqHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesRawReq.header)
}

// string cluster_id = 2;
inline void GetClusterRoutesRawReq::clear_cluster_id() {
  cluster_id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetClusterRoutesRawReq::cluster_id() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRawReq.cluster_id)
  return cluster_id_.GetNoArena();
}
inline void GetClusterRoutesRawReq::set_cluster_id(const ::std::string& value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:masterproto.GetClusterRoutesRawReq.cluster_id)
}
#if LANG_CXX11
inline void GetClusterRoutesRawReq::set_cluster_id(::std::string&& value) {
  
  cluster_id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:masterproto.GetClusterRoutesRawReq.cluster_id)
}
#endif
inline void GetClusterRoutesRawReq::set_cluster_id(const char* value) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:masterproto.GetClusterRoutesRawReq.cluster_id)
}
inline void GetClusterRoutesRawReq::set_cluster_id(const char* value, size_t size) {
  
  cluster_id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:masterproto.GetClusterRoutesRawReq.cluster_id)
}
inline ::std::string* GetClusterRoutesRawReq::mutable_cluster_id() {
  
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRawReq.cluster_id)
  return cluster_id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetClusterRoutesRawReq::release_cluster_id() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesRawReq.cluster_id)
  
  return cluster_id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetClusterRoutesRawReq::set_allocated_cluster_id(::std::string* cluster_id) {
  if (cluster_id != NULL) {
    
  } else {
    
  }
  cluster_id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cluster_id);
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesRawReq.cluster_id)
}

// int64 time_nano = 3;
inline void GetClusterRoutesRawReq::clear_time_nano() {
  time_nano_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 GetClusterRoutesRawReq::time_nano() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRawReq.time_nano)
  return time_nano_;
}
inline void GetClusterRoutesRawReq::set_time_nano(::google::protobuf::int64 value) {
  
  time_nano_ = value;
  // @@protoc_insertion_point(field_set:masterproto.GetClusterRoutesRawReq.time_nano)
}

// -------------------------------------------------------------------

// GetClusterRoutesRawRsp

// .cmongoproto.ResHeader header = 1;
inline bool GetClusterRoutesRawRsp::has_header() const {
  return this != internal_default_instance() && header_ != NULL;
}
inline void GetClusterRoutesRawRsp::clear_header() {
  if (GetArenaNoVirtual() == NULL && header_ != NULL) delete header_;
  header_ = NULL;
}
inline const ::cmongoproto::ResHeader& GetClusterRoutesRawRsp::header() const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRawRsp.header)
  return header_ != NULL ? *header_
                         : *::cmongoproto::ResHeader::internal_default_instance();
}
inline ::cmongoproto::ResHeader* GetClusterRoutesRawRsp::mutable_header() {
  
  if (header_ == NULL) {
    header_ = new ::cmongoproto::ResHeader;
  }
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRawRsp.header)
  return header_;
}
inline ::cmongoproto::ResHeader* GetClusterRoutesRawRsp::release_header() {
  // @@protoc_insertion_point(field_release:masterproto.GetClusterRoutesRawRsp.header)
  
  ::cmongoproto::ResHeader* temp = header_;
  header_ = NULL;
  return temp;
}
inline void GetClusterRoutesRawRsp::set_allocated_header(::cmongoproto::ResHeader* header) {
  delete header_;
  header_ = header;
  if (header) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:masterproto.GetClusterRoutesRawRsp.header)
}

// repeated .masterproto.TableRoutesRaw routes = 2;
inline int GetClusterRoutesRawRsp::routes_size() const {
  return routes_.size();
}
inline void GetClusterRoutesRawRsp::clear_routes() {
  routes_.Clear();
}
inline const ::masterproto::TableRoutesRaw& GetClusterRoutesRawRsp::routes(int index) const {
  // @@protoc_insertion_point(field_get:masterproto.GetClusterRoutesRawRsp.routes)
  return routes_.Get(index);
}
inline ::masterproto::TableRoutesRaw* GetClusterRoutesRawRsp::mutable_routes(int index) {
  // @@protoc_insertion_point(field_mutable:masterproto.GetClusterRoutesRawRsp.routes)
  return routes_.Mutable(index);
}
inline ::masterproto::TableRoutesRaw* GetClusterRoutesRawRsp::add_routes() {
  // @@protoc_insertion_point(field_add:masterproto.GetClusterRoutesRawRsp.routes)
  return routes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutesRaw >*
GetClusterRoutesRawRsp::mutable_routes() {
  // @@protoc_insertion_point(field_mutable_list:masterproto.GetClusterRoutesRawRsp.routes)
  return &routes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::masterproto::TableRoutesRaw >&
GetClusterRoutesRawRsp::routes() const {
  // @@protoc_insertion_point(field_list:masterproto.GetClusterRoutesRawRsp.routes)
  return routes_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace masterproto

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::masterproto::StatusType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::StatusType>() {
  return ::masterproto::StatusType_descriptor();
}
template <> struct is_proto_enum< ::masterproto::ClusterType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::ClusterType>() {
  return ::masterproto::ClusterType_descriptor();
}
template <> struct is_proto_enum< ::masterproto::JobType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::JobType>() {
  return ::masterproto::JobType_descriptor();
}
template <> struct is_proto_enum< ::masterproto::JobStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::JobStatus>() {
  return ::masterproto::JobStatus_descriptor();
}
template <> struct is_proto_enum< ::masterproto::MachineType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::MachineType>() {
  return ::masterproto::MachineType_descriptor();
}
template <> struct is_proto_enum< ::masterproto::ClusterStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::ClusterStatus>() {
  return ::masterproto::ClusterStatus_descriptor();
}
template <> struct is_proto_enum< ::masterproto::AuthMask> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::AuthMask>() {
  return ::masterproto::AuthMask_descriptor();
}
template <> struct is_proto_enum< ::masterproto::EnumProxyNotifyType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::EnumProxyNotifyType>() {
  return ::masterproto::EnumProxyNotifyType_descriptor();
}
template <> struct is_proto_enum< ::masterproto::AutoBackup> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::masterproto::AutoBackup>() {
  return ::masterproto::AutoBackup_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cmongo_2fmasterproto_2fmaster_2eproto__INCLUDED
